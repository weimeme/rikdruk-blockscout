{"version":3,"file":"static/chunks/2098.a0c1c698a6c15813.js","mappings":"+JAAA,IAAAA,EAAAC,OAAAC,cAAA,CACAC,OAAA,CAAAC,EAAAC,IAAAL,EAAAI,EAAA,QAA4DC,MAAAA,EAAAC,aAAA,KAO5D,SAAAC,OAAAC,CAAA,CAAAC,CAAA,EACA,IAAAC,EAAAC,EACA,IAAAC,EAAAJ,EAAAI,MAAA,CACAC,EAAA,GAAAD,IAAAA,EAAAE,MAAA,CAAAF,CAAA,CAAAA,EAAAE,MAAA,aAAAJ,CAAAA,EAAA,KAAAK,aAAA,GAAAL,KAAA,IAAAA,EAAA,OAAAA,EAAAM,IAAA,CAAAP,EAAA,OAAAD,EAAAS,WAAA,CACA,OAAAJ,GAAA,YAAAF,CAAAA,EAAA,KAAAO,MAAA,GAAAP,KAAA,IAAAA,EAAA,OAAAA,EAAAQ,UAAA,KACA,CACAhB,OAAAI,OAAA,UACA,IAAAa,EAAAjB,OAAA,IACA,IAAAkB,EAAiB,GAAAC,EAAAC,CAAA,EAAY,CAC7BC,cAAA,GAAAC,EAAAC,QAAA,CAA+CJ,EAAAK,CAAS,EACxDC,SAAcN,EAAAO,CAAQ,CACtBC,WAAgBR,EAAAS,CAAU,CAC1BC,aAAA,CAAoBC,QAAAf,EAAAe,OAAA,CACpB,GACA,OACAf,OAAAA,EACAgB,WAAAb,EAAAa,UAAA,CACAC,MAAAd,EAAAc,KAAA,CACA5B,OACAQ,cAAA,aACAqB,KAAA,QACAC,YAAA,IACAC,cAAA,CACAC,MAAA,WACAC,QAAA,QACA,CACA,CACA,EAAC,sBACDC,EAAAC,CAAU,CAAAC,UAAA,WAAAvB","sources":["webpack://_N_E/./node_modules/@graphiql/react/dist/mode.es.js","webpack://_N_E/<anon>"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport \"graphql\";\nimport { o as onlineParser, i as isIgnored, L as LexRules, P as ParseRules } from \"./types.es.js\";\nimport \"./index.es.js\";\nimport \"react\";\nimport \"react-dom\";\nfunction indent(state, textAfter) {\n  var _a, _b;\n  const levels = state.levels;\n  const level = !levels || levels.length === 0 ? state.indentLevel : levels[levels.length - 1] - (((_a = this.electricInput) === null || _a === void 0 ? void 0 : _a.test(textAfter)) ? 1 : 0);\n  return (level || 0) * (((_b = this.config) === null || _b === void 0 ? void 0 : _b.indentUnit) || 0);\n}\n__name(indent, \"indent\");\nconst graphqlModeFactory = /* @__PURE__ */ __name((config) => {\n  const parser = onlineParser({\n    eatWhitespace: (stream) => stream.eatWhile(isIgnored),\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: { tabSize: config.tabSize }\n  });\n  return {\n    config,\n    startState: parser.startState,\n    token: parser.token,\n    indent,\n    electricInput: /^\\s*[})\\]]/,\n    fold: \"brace\",\n    lineComment: \"#\",\n    closeBrackets: {\n      pairs: '()[]{}\"\"',\n      explode: \"()[]{}\"\n    }\n  };\n}, \"graphqlModeFactory\");\nCodeMirror.defineMode(\"graphql\", graphqlModeFactory);\n"],"names":["__defProp","Object","defineProperty","__name","target","value","configurable","indent","state","textAfter","_a","_b","levels","level","length","electricInput","test","indentLevel","config","indentUnit","graphqlModeFactory","parser","_types_es_js__WEBPACK_IMPORTED_MODULE_1__","o","eatWhitespace","stream","eatWhile","i","lexRules","L","parseRules","P","editorConfig","tabSize","startState","token","fold","lineComment","closeBrackets","pairs","explode","_codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__","C","defineMode"],"sourceRoot":""}