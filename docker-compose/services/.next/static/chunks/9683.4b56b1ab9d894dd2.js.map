{"version":3,"file":"static/chunks/9683.4b56b1ab9d894dd2.js","mappings":"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","sources":["webpack://_N_E/./stubs/zkEvmL2.ts","webpack://_N_E/./types/api/zkEvmL2TxnBatches.ts","webpack://_N_E/./ui/zkEvmL2TxnBatches/ZkEvmL2TxnBatchDetails.tsx","webpack://_N_E/./ui/pages/ZkEvmL2TxnBatch.tsx","webpack://_N_E/./ui/shared/entities/tx/TxEntityL1.tsx","webpack://_N_E/./ui/shared/verificationSteps/VerificationStep.tsx","webpack://_N_E/./ui/shared/verificationSteps/VerificationSteps.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import type { ZkEvmL2TxnBatch, ZkEvmL2TxnBatchesItem } from 'types/api/zkEvmL2TxnBatches';\n\nimport { TX_HASH } from './tx';\n\nexport const ZKEVM_L2_TXN_BATCHES_ITEM: ZkEvmL2TxnBatchesItem = {\n  timestamp: '2023-06-01T14:46:48.000000Z',\n  status: 'Finalized',\n  verify_tx_hash: TX_HASH,\n  sequence_tx_hash: TX_HASH,\n  number: 5218590,\n  tx_count: 9,\n};\n\nexport const ZKEVM_L2_TXN_BATCH: ZkEvmL2TxnBatch = {\n  acc_input_hash: '0xb815fe2832977f1324ad0124a019b938f189f7b470292f40a21284f15774b3b3',\n  global_exit_root: '0x0000000000000000000000000000000000000000000000000000000000000000',\n  number: 1,\n  sequence_tx_hash: '0x57b9b95db5f94f125710bdc8fbb3fabaac10125b44b0cb61dbc69daddf06d0cd',\n  state_root: '0xb9a589d6b3ae44d3b250a9993caa5e3721568197f56e4743989ecb2285d80ec4',\n  status: 'Finalized',\n  timestamp: '2023-09-15T06:22:48.000000Z',\n  transactions: [ '0xff99dd67646b8f3d657cc6f19eb33abc346de2dbaccd03e45e7726cc28e3e186' ],\n  verify_tx_hash: '0x093276fa65c67d7b12dd96f4fefafba9d9ad2f1c23c6e53f96583971ce75352d',\n};\n","import type { Transaction } from './transaction';\n\nexport type ZkEvmL2TxnBatchesItem = {\n  number: number;\n  verify_tx_hash: string | null;\n  sequence_tx_hash: string | null;\n  status: string;\n  timestamp: string;\n  tx_count: number;\n}\n\nexport type ZkEvmL2TxnBatchesResponse = {\n  items: Array<ZkEvmL2TxnBatchesItem>;\n  next_page_params: {\n    number: number;\n    items_count: number;\n  } | null;\n}\n\nexport const ZKEVM_L2_TX_BATCH_STATUSES = [ 'Unfinalized', 'L1 Sequence Confirmed', 'Finalized' ];\n\nexport type ZkEvmL2TxnBatch = {\n  acc_input_hash: string;\n  global_exit_root: string;\n  number: number;\n  sequence_tx_hash: string;\n  state_root: string;\n  status: typeof ZKEVM_L2_TX_BATCH_STATUSES[number];\n  timestamp: string;\n  transactions: Array<string>;\n  verify_tx_hash: string;\n}\n\nexport type ZkEvmL2TxnBatchTxs = {\n  items: Array<Transaction>;\n  // API responce doesn't have next_page_params option, but we need to add it to the type for consistency\n  next_page_params: null;\n}\n\nexport type NewZkEvmBatchSocketResponse = { batch: ZkEvmL2TxnBatchesItem };\n","import { Grid, Text, Skeleton } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport { ZKEVM_L2_TX_BATCH_STATUSES } from 'types/api/zkEvmL2TxnBatches';\nimport type { ZkEvmL2TxnBatch } from 'types/api/zkEvmL2TxnBatches';\n\nimport { route } from 'nextjs-routes';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport dayjs from 'lib/date/dayjs';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsInfoItemDivider from 'ui/shared/DetailsInfoItemDivider';\nimport TxEntityL1 from 'ui/shared/entities/tx/TxEntityL1';\nimport HashStringShortenDynamic from 'ui/shared/HashStringShortenDynamic';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/LinkInternal';\nimport PrevNext from 'ui/shared/PrevNext';\nimport TextSeparator from 'ui/shared/TextSeparator';\nimport VerificationSteps from 'ui/shared/verificationSteps/VerificationSteps';\n\ninterface Props {\n  query: UseQueryResult<ZkEvmL2TxnBatch, ResourceError>;\n}\n\nconst ZkEvmL2TxnBatchDetails = ({ query }: Props) => {\n  const router = useRouter();\n\n  const { data, isPlaceholderData, isError, error } = query;\n\n  const handlePrevNextClick = React.useCallback((direction: 'prev' | 'next') => {\n    if (!data) {\n      return;\n    }\n\n    const increment = direction === 'next' ? +1 : -1;\n    const nextId = String(data.number + increment);\n\n    router.push({ pathname: '/zkevm-l2-txn-batch/[number]', query: { number: nextId } }, undefined);\n  }, [ data, router ]);\n\n  if (isError) {\n    if (error?.status === 404 || error?.status === 422) {\n      throwOnResourceLoadError({ isError, error });\n    }\n\n    return <DataFetchAlert/>;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <Grid\n      columnGap={ 8 }\n      rowGap={{ base: 3, lg: 3 }}\n      templateColumns={{ base: 'minmax(0, 1fr)', lg: 'minmax(min-content, 200px) minmax(0, 1fr)' }}\n      overflow=\"hidden\"\n    >\n      <DetailsInfoItem\n        title=\"Tx batch number\"\n        isLoading={ isPlaceholderData }\n      >\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { data.number }\n        </Skeleton>\n        <PrevNext\n          ml={ 6 }\n          onClick={ handlePrevNextClick }\n          prevLabel=\"View previous tx batch\"\n          nextLabel=\"View next tx batch\"\n          isPrevDisabled={ data.number === 0 }\n          isLoading={ isPlaceholderData }\n        />\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"Status\"\n        isLoading={ isPlaceholderData }\n      >\n        <VerificationSteps steps={ ZKEVM_L2_TX_BATCH_STATUSES } currentStep={ data.status } isLoading={ isPlaceholderData }/>\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"Timestamp\"\n        isLoading={ isPlaceholderData }\n      >\n        <IconSvg name=\"clock\" boxSize={ 5 } color=\"gray.500\" isLoading={ isPlaceholderData }/>\n        <Skeleton isLoaded={ !isPlaceholderData } ml={ 1 }>\n          { dayjs(data.timestamp).fromNow() }\n        </Skeleton>\n        <TextSeparator/>\n        <Skeleton isLoaded={ !isPlaceholderData } whiteSpace=\"normal\">\n          { dayjs(data.timestamp).format('llll') }\n        </Skeleton>\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"Verify tx hash\"\n        isLoading={ isPlaceholderData }\n      >\n        { data.verify_tx_hash ? (\n          <TxEntityL1\n            isLoading={ isPlaceholderData }\n            hash={ data.verify_tx_hash }\n            maxW=\"100%\"\n          />\n        ) : <Text>pending</Text> }\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"Transactions\"\n        isLoading={ isPlaceholderData }\n      >\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          <LinkInternal href={ route({ pathname: '/zkevm-l2-txn-batch/[number]', query: { number: data.number.toString(), tab: 'txs' } }) }>\n            { data.transactions.length } transaction{ data.transactions.length === 1 ? '' : 's' }\n          </LinkInternal>\n        </Skeleton>\n      </DetailsInfoItem>\n\n      <DetailsInfoItemDivider/>\n\n      <DetailsInfoItem\n        title=\"Global exit root\"\n        isLoading={ isPlaceholderData }\n        flexWrap=\"nowrap\"\n      >\n        <Skeleton isLoaded={ !isPlaceholderData } overflow=\"hidden\">\n          <HashStringShortenDynamic hash={ data.global_exit_root }/>\n        </Skeleton>\n        <CopyToClipboard text={ data.global_exit_root } isLoading={ isPlaceholderData }/>\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"Acc input hash\"\n        isLoading={ isPlaceholderData }\n        flexWrap=\"nowrap\"\n      >\n        <Skeleton isLoaded={ !isPlaceholderData } overflow=\"hidden\">\n          <HashStringShortenDynamic hash={ data.acc_input_hash }/>\n        </Skeleton>\n        <CopyToClipboard text={ data.acc_input_hash } isLoading={ isPlaceholderData }/>\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"Sequence tx hash\"\n        isLoading={ isPlaceholderData }\n      >\n        { data.sequence_tx_hash ? (\n          <TxEntityL1\n            isLoading={ isPlaceholderData }\n            hash={ data.sequence_tx_hash }\n            maxW=\"100%\"\n          />\n        ) : <Text>Pending</Text> }\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"State root\"\n        isLoading={ isPlaceholderData }\n        flexWrap=\"nowrap\"\n      >\n        <Skeleton isLoaded={ !isPlaceholderData } overflow=\"hidden\">\n          <HashStringShortenDynamic hash={ data.state_root }/>\n        </Skeleton>\n        <CopyToClipboard text={ data.state_root } isLoading={ isPlaceholderData }/>\n      </DetailsInfoItem>\n    </Grid>\n  );\n};\n\nexport default ZkEvmL2TxnBatchDetails;\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport throwOnAbsentParamError from 'lib/errors/throwOnAbsentParamError';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { TX_ZKEVM_L2 } from 'stubs/tx';\nimport { generateListStub } from 'stubs/utils';\nimport { ZKEVM_L2_TXN_BATCH } from 'stubs/zkEvmL2';\nimport TextAd from 'ui/shared/ad/TextAd';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\nimport TabsSkeleton from 'ui/shared/Tabs/TabsSkeleton';\nimport TxsWithFrontendSorting from 'ui/txs/TxsWithFrontendSorting';\nimport ZkEvmL2TxnBatchDetails from 'ui/zkEvmL2TxnBatches/ZkEvmL2TxnBatchDetails';\n\nconst ZkEvmL2TxnBatch = () => {\n  const router = useRouter();\n  const appProps = useAppContext();\n  const number = getQueryParamString(router.query.number);\n  const tab = getQueryParamString(router.query.tab);\n\n  const batchQuery = useApiQuery('zkevm_l2_txn_batch', {\n    pathParams: { number },\n    queryOptions: {\n      enabled: Boolean(number),\n      placeholderData: ZKEVM_L2_TXN_BATCH,\n    },\n  });\n\n  const batchTxsQuery = useQueryWithPages({\n    resourceName: 'zkevm_l2_txn_batch_txs',\n    pathParams: { number },\n    options: {\n      enabled: Boolean(!batchQuery.isPlaceholderData && batchQuery.data?.number && tab === 'txs'),\n      // there is no pagination in zkevm_l2_txn_batch_txs\n      placeholderData: generateListStub<'zkevm_l2_txn_batch_txs'>(TX_ZKEVM_L2, 50, { next_page_params: null }),\n    },\n  });\n\n  throwOnAbsentParamError(number);\n  throwOnResourceLoadError(batchQuery);\n\n  const tabs: Array<RoutedTab> = React.useMemo(() => ([\n    { id: 'index', title: 'Details', component: <ZkEvmL2TxnBatchDetails query={ batchQuery }/> },\n    { id: 'txs', title: 'Transactions', component: <TxsWithFrontendSorting query={ batchTxsQuery } showSocketInfo={ false }/> },\n  ].filter(Boolean)), [ batchQuery, batchTxsQuery ]);\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.includes('/zkevm_l2_txn_batches');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to tx batches list',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  return (\n    <>\n      <TextAd mb={ 6 }/>\n      <PageTitle\n        title={ `Tx batch #${ number }` }\n        backLink={ backLink }\n      />\n      { batchQuery.isPlaceholderData ? <TabsSkeleton tabs={ tabs }/> : (\n        <RoutedTabs\n          tabs={ tabs }\n        />\n      ) }\n    </>\n  );\n};\n\nexport default ZkEvmL2TxnBatch;\n","import { chakra } from '@chakra-ui/react';\nimport _omit from 'lodash/omit';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nimport * as TxEntity from './TxEntity';\n\nconst feature = config.features.optimisticRollup.isEnabled ? config.features.optimisticRollup : config.features.zkEvmRollup;\n\nconst TxEntityL1 = (props: TxEntity.EntityProps) => {\n  const partsProps = _omit(props, [ 'className', 'onClick' ]);\n  const linkProps = _omit(props, [ 'className' ]);\n\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  return (\n    <TxEntity.Container className={ props.className }>\n      <TxEntity.Icon { ...partsProps }/>\n      <TxEntity.Link\n        { ...linkProps }\n        isExternal\n        href={ feature.L1BaseUrl + route({ pathname: '/tx/[hash]', query: { hash: props.hash } }) }\n      >\n        <TxEntity.Content { ...partsProps }/>\n      </TxEntity.Link>\n      <TxEntity.Copy { ...partsProps }/>\n    </TxEntity.Container>\n  );\n};\n\nexport default chakra(TxEntityL1);\n","import { HStack, Box } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Step } from './types';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\ntype Props = {\n  step: Step;\n  isLast: boolean;\n  isPassed: boolean;\n}\n\nconst VerificationStep = ({ step, isLast, isPassed }: Props) => {\n  const stepColor = isPassed ? 'green.500' : 'text_secondary';\n\n  return (\n    <HStack gap={ 2 } color={ stepColor }>\n      <IconSvg name={ isPassed ? 'finalized' : 'unfinalized' } boxSize={ 5 }/>\n      <Box color={ stepColor }>{ typeof step === 'string' ? step : step.content }</Box>\n      { !isLast && <IconSvg name=\"arrows/east\" boxSize={ 5 }/> }\n    </HStack>\n  );\n};\n\nexport default VerificationStep;\n","import { Skeleton, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Step } from './types';\n\nimport VerificationStep from './VerificationStep';\n\nexport interface Props {\n  currentStep: string;\n  steps: Array<Step>;\n  isLoading?: boolean;\n  rightSlot?: React.ReactNode;\n  className?: string;\n}\n\nconst VerificationSteps = ({ currentStep, steps, isLoading, rightSlot, className }: Props) => {\n  const currentStepIndex = steps.findIndex((step) => {\n    const label = typeof step === 'string' ? step : step.label;\n    return label === currentStep;\n  });\n\n  return (\n    <Skeleton\n      className={ className }\n      isLoaded={ !isLoading }\n      display=\"flex\"\n      gap={ 2 }\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n    >\n      { steps.map((step, index) => (\n        <VerificationStep\n          key={ index }\n          step={ step }\n          isLast={ index === steps.length - 1 && !rightSlot }\n          isPassed={ index <= currentStepIndex }\n        />\n      )) }\n      { rightSlot }\n    </Skeleton>\n  );\n};\n\nexport default chakra(VerificationSteps);\n"],"names":["ZKEVM_L2_TXN_BATCHES_ITEM","timestamp","status","verify_tx_hash","TX_HASH","sequence_tx_hash","number","tx_count","ZKEVM_L2_TXN_BATCH","acc_input_hash","global_exit_root","state_root","transactions","ZKEVM_L2_TX_BATCH_STATUSES","zkEvmL2TxnBatches_ZkEvmL2TxnBatchDetails","query","param","router","useRouter","data","isPlaceholderData","isError","error","handlePrevNextClick","React","nextId","String","direction","push","pathname","undefined","throwOnResourceLoadError","jsx_runtime","jsx","DataFetchAlert","jsxs","Grid","columnGap","rowGap","base","lg","templateColumns","overflow","DetailsInfoItem","title","isLoading","Skeleton","isLoaded","PrevNext","ml","onClick","prevLabel","nextLabel","isPrevDisabled","VerificationSteps","steps","currentStep","IconSvg","name","boxSize","color","dayjs","fromNow","TextSeparator","whiteSpace","format","TxEntityL1","hash","maxW","Text","LinkInternal","href","route","toString","tab","length","DetailsInfoItemDivider","flexWrap","HashStringShortenDynamic","CopyToClipboard","text","pages_ZkEvmL2TxnBatch","batchQuery","appProps","useAppContext","getQueryParamString","useApiQuery","pathParams","queryOptions","enabled","Boolean","placeholderData","batchTxsQuery","useQueryWithPages","resourceName","options","generateListStub","TX_ZKEVM_L2","next_page_params","throwOnAbsentParamError","tabs","id","component","ZkEvmL2TxnBatchDetails","TxsWithFrontendSorting","showSocketInfo","filter","backLink","hasGoBackLink","referrer","includes","label","url","Fragment","TextAd","mb","PageTitle","concat","TabsSkeleton","RoutedTabs","feature","config","features","optimisticRollup","isEnabled","zkEvmRollup","__webpack_exports__","Z","chakra","partsProps","_omit","props","linkProps","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","TxEntity","className","isExternal","L1BaseUrl","verificationSteps_VerificationStep","step","isLast","isPassed","stepColor","HStack","gap","Box","content","verificationSteps_VerificationSteps","rightSlot","currentStepIndex","findIndex","display","alignItems","map","index","VerificationStep"],"sourceRoot":""}