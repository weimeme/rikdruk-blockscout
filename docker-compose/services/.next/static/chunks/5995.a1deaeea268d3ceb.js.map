{"version":3,"file":"static/chunks/5995.a1deaeea268d3ceb.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@graphiql/react/dist/forEachState.es.js","webpack://_N_E/./node_modules/@graphiql/react/dist/hint.es2.js","webpack://_N_E/<anon>"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nfunction forEachState(stack, fn) {\n  const reverseStateStack = [];\n  let state = stack;\n  while (state === null || state === void 0 ? void 0 : state.kind) {\n    reverseStateStack.push(state);\n    state = state.prevState;\n  }\n  for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n    fn(reverseStateStack[i]);\n  }\n}\n__name(forEachState, \"forEachState\");\nexport { forEachState as f };\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport { getNamedType, GraphQLInputObjectType, GraphQLEnumType, GraphQLBoolean, getNullableType, GraphQLList } from \"graphql\";\nimport { f as forEachState } from \"./forEachState.es.js\";\nimport \"./index.es.js\";\nimport \"react\";\nimport \"react-dom\";\nfunction hintList(cursor, token, list) {\n  const hints = filterAndSortList(list, normalizeText(token.string));\n  if (!hints) {\n    return;\n  }\n  const tokenStart = token.type !== null && /\"|\\w/.test(token.string[0]) ? token.start : token.end;\n  return {\n    list: hints,\n    from: { line: cursor.line, ch: tokenStart },\n    to: { line: cursor.line, ch: token.end }\n  };\n}\n__name(hintList, \"hintList\");\nfunction filterAndSortList(list, text) {\n  if (!text) {\n    return filterNonEmpty(list, (entry) => !entry.isDeprecated);\n  }\n  const byProximity = list.map((entry) => ({\n    proximity: getProximity(normalizeText(entry.text), text),\n    entry\n  }));\n  const conciseMatches = filterNonEmpty(filterNonEmpty(byProximity, (pair) => pair.proximity <= 2), (pair) => !pair.entry.isDeprecated);\n  const sortedMatches = conciseMatches.sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) || a.proximity - b.proximity || a.entry.text.length - b.entry.text.length);\n  return sortedMatches.map((pair) => pair.entry);\n}\n__name(filterAndSortList, \"filterAndSortList\");\nfunction filterNonEmpty(array, predicate) {\n  const filtered = array.filter(predicate);\n  return filtered.length === 0 ? array : filtered;\n}\n__name(filterNonEmpty, \"filterNonEmpty\");\nfunction normalizeText(text) {\n  return text.toLowerCase().replace(/\\W/g, \"\");\n}\n__name(normalizeText, \"normalizeText\");\nfunction getProximity(suggestion, text) {\n  let proximity = lexicalDistance(text, suggestion);\n  if (suggestion.length > text.length) {\n    proximity -= suggestion.length - text.length - 1;\n    proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n  }\n  return proximity;\n}\n__name(getProximity, \"getProximity\");\nfunction lexicalDistance(a, b) {\n  let i;\n  let j;\n  const d = [];\n  const aLength = a.length;\n  const bLength = b.length;\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n      d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n  return d[aLength][bLength];\n}\n__name(lexicalDistance, \"lexicalDistance\");\nCodeMirror.registerHelper(\"hint\", \"graphql-variables\", (editor, options) => {\n  const cur = editor.getCursor();\n  const token = editor.getTokenAt(cur);\n  const results = getVariablesHint(cur, token, options);\n  if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {\n    results.from = CodeMirror.Pos(results.from.line, results.from.ch);\n    results.to = CodeMirror.Pos(results.to.line, results.to.ch);\n    CodeMirror.signal(editor, \"hasCompletion\", editor, results, token);\n  }\n  return results;\n});\nfunction getVariablesHint(cur, token, options) {\n  const state = token.state.kind === \"Invalid\" ? token.state.prevState : token.state;\n  const kind = state.kind;\n  const step = state.step;\n  if (kind === \"Document\" && step === 0) {\n    return hintList(cur, token, [{ text: \"{\" }]);\n  }\n  const variableToType = options.variableToType;\n  if (!variableToType) {\n    return;\n  }\n  const typeInfo = getTypeInfo(variableToType, token.state);\n  if (kind === \"Document\" || kind === \"Variable\" && step === 0) {\n    const variableNames = Object.keys(variableToType);\n    return hintList(cur, token, variableNames.map((name) => ({\n      text: `\"${name}\": `,\n      type: variableToType[name]\n    })));\n  }\n  if (kind === \"ObjectValue\" || kind === \"ObjectField\" && step === 0) {\n    if (typeInfo.fields) {\n      const inputFields = Object.keys(typeInfo.fields).map((fieldName) => typeInfo.fields[fieldName]);\n      return hintList(cur, token, inputFields.map((field) => ({\n        text: `\"${field.name}\": `,\n        type: field.type,\n        description: field.description\n      })));\n    }\n  }\n  if (kind === \"StringValue\" || kind === \"NumberValue\" || kind === \"BooleanValue\" || kind === \"NullValue\" || kind === \"ListValue\" && step === 1 || kind === \"ObjectField\" && step === 2 || kind === \"Variable\" && step === 2) {\n    const namedInputType = typeInfo.type ? getNamedType(typeInfo.type) : void 0;\n    if (namedInputType instanceof GraphQLInputObjectType) {\n      return hintList(cur, token, [{ text: \"{\" }]);\n    } else if (namedInputType instanceof GraphQLEnumType) {\n      const values = namedInputType.getValues();\n      return hintList(cur, token, values.map((value) => ({\n        text: `\"${value.name}\"`,\n        type: namedInputType,\n        description: value.description\n      })));\n    } else if (namedInputType === GraphQLBoolean) {\n      return hintList(cur, token, [\n        { text: \"true\", type: GraphQLBoolean, description: \"Not false.\" },\n        { text: \"false\", type: GraphQLBoolean, description: \"Not true.\" }\n      ]);\n    }\n  }\n}\n__name(getVariablesHint, \"getVariablesHint\");\nfunction getTypeInfo(variableToType, tokenState) {\n  const info = {\n    type: null,\n    fields: null\n  };\n  forEachState(tokenState, (state) => {\n    if (state.kind === \"Variable\") {\n      info.type = variableToType[state.name];\n    } else if (state.kind === \"ListValue\") {\n      const nullableType = info.type ? getNullableType(info.type) : void 0;\n      info.type = nullableType instanceof GraphQLList ? nullableType.ofType : null;\n    } else if (state.kind === \"ObjectValue\") {\n      const objectType = info.type ? getNamedType(info.type) : void 0;\n      info.fields = objectType instanceof GraphQLInputObjectType ? objectType.getFields() : null;\n    } else if (state.kind === \"ObjectField\") {\n      const objectField = state.name && info.fields ? info.fields[state.name] : null;\n      info.type = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n    }\n  });\n  return info;\n}\n__name(getTypeInfo, \"getTypeInfo\");\n"],"names":["forEachState","stack","fn","reverseStateStack","state","kind","push","prevState","i","length","__defProp","Object","defineProperty","value","configurable","__name","target","hintList","cursor","token","list","hints","filterAndSortList","normalizeText","string","tokenStart","type","test","start","end","from","line","ch","to","text","filterNonEmpty","entry","isDeprecated","byProximity","map","proximity","getProximity","conciseMatches","pair","sortedMatches","sort","a","b","array","predicate","filtered","filter","toLowerCase","replace","suggestion","lexicalDistance","indexOf","j","d","aLength","bLength","cost","Math","min","getVariablesHint","cur","options","step","variableToType","typeInfo","getTypeInfo","variableNames","keys","name","fields","inputFields","fieldName","field","description","namedInputType","graphql__WEBPACK_IMPORTED_MODULE_5__","xC","sR","mR","values","getValues","graphql__WEBPACK_IMPORTED_MODULE_6__","EZ","tokenState","info","_forEachState_es_js__WEBPACK_IMPORTED_MODULE_1__","f","nullableType","tf","p2","ofType","objectType","getFields","objectField","_codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__","C","registerHelper","editor","getCursor","getTokenAt","results","Pos","signal"],"sourceRoot":""}