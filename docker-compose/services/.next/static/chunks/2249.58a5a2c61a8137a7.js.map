{"version":3,"file":"static/chunks/2249.58a5a2c61a8137a7.js","mappings":"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","sources":["webpack://_N_E/./lib/block/getBlockTotalReward.ts","webpack://_N_E/./lib/hooks/useTimeAgoIncrement.tsx","webpack://_N_E/./lib/networks/getNetworkValidatorTitle.ts","webpack://_N_E/./stubs/block.ts","webpack://_N_E/./stubs/utils.ts","webpack://_N_E/./ui/blocks/BlockTimestamp.tsx","webpack://_N_E/./ui/blocks/BlocksListItem.tsx","webpack://_N_E/./ui/blocks/BlocksList.tsx","webpack://_N_E/./ui/blocks/BlocksTableItem.tsx","webpack://_N_E/./ui/blocks/BlocksTable.tsx","webpack://_N_E/./ui/blocks/BlocksContent.tsx","webpack://_N_E/./ui/blocks/BlocksTabSlot.tsx","webpack://_N_E/./ui/pages/Blocks.tsx","webpack://_N_E/./ui/shared/GasUsedToTargetRatio.tsx","webpack://_N_E/./ui/shared/ListItemMobile/ListItemMobile.tsx","webpack://_N_E/./ui/shared/SocketNewItemsNotice.tsx","webpack://_N_E/./ui/shared/Utilization/Utilization.tsx","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-B3MS3L3D.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-BLRPLYZO.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-D3HTYHQX.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-DJP6PLAX.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-L7UVV2ML.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-Z3IFIKNA.mjs","webpack://_N_E/<anon>"],"sourcesContent":["import BigNumber from 'bignumber.js';\n\nimport type { Block } from 'types/api/block';\n\nimport { WEI, ZERO } from 'lib/consts';\n\nexport default function getBlockTotalReward(block: Block) {\n  const totalReward = block.rewards\n    ?.map(({ reward }) => BigNumber(reward))\n    .reduce((result, item) => result.plus(item), ZERO) || ZERO;\n\n  return totalReward.div(WEI);\n}\n","import React from 'react';\n\nimport { DAY, HOUR, MINUTE, SECOND } from 'lib/consts';\nimport dayjs from 'lib/date/dayjs';\n\nfunction getUnits(diff: number) {\n  if (diff < MINUTE) {\n    return [ SECOND, MINUTE ];\n  }\n\n  if (diff < HOUR) {\n    return [ MINUTE, HOUR ];\n  }\n\n  if (diff < DAY) {\n    return [ HOUR, DAY ];\n  }\n\n  return [ DAY, 2 * DAY ];\n}\n\nfunction getUpdateParams(ts: string) {\n  const timeDiff = Date.now() - new Date(ts).getTime();\n  const [ unit, higherUnit ] = getUnits(timeDiff);\n\n  if (unit === DAY) {\n    return { interval: DAY };\n  }\n\n  const leftover = unit - timeDiff % unit;\n\n  return {\n    startTimeout: unit === SECOND ?\n      0 :\n      // here we assume that in current dayjs locale time difference is rounded by Math.round function\n      // so we have to update displayed value whenever time comes over the middle of the unit interval\n      // since it will be rounded to the upper bound\n      (leftover < unit / 2 ? leftover + unit / 2 : leftover - unit / 2) + SECOND,\n    endTimeout: higherUnit - timeDiff + SECOND,\n    interval: unit,\n  };\n}\n\nexport default function useTimeAgoIncrement(ts: string | null, isEnabled?: boolean) {\n  const [ value, setValue ] = React.useState(ts ? dayjs(ts).fromNow() : null);\n\n  React.useEffect(() => {\n    if (ts !== null) {\n      const timeouts: Array<number> = [];\n      const intervals: Array<number> = [];\n\n      const startIncrement = () => {\n        const { startTimeout, interval, endTimeout } = getUpdateParams(ts);\n        if (!startTimeout && !endTimeout) {\n          return;\n        }\n\n        let intervalId: number;\n\n        const startTimeoutId = window.setTimeout(() => {\n          setValue(dayjs(ts).fromNow());\n\n          intervalId = window.setInterval(() => {\n            setValue(dayjs(ts).fromNow());\n          }, interval);\n\n          intervals.push(intervalId);\n        }, startTimeout);\n\n        const endTimeoutId = window.setTimeout(() => {\n          window.clearInterval(intervalId);\n          startIncrement();\n        }, endTimeout);\n\n        timeouts.push(startTimeoutId);\n        timeouts.push(endTimeoutId);\n      };\n\n      isEnabled && startIncrement();\n\n      return () => {\n        timeouts.forEach(window.clearTimeout);\n        intervals.forEach(window.clearInterval);\n      };\n    }\n  }, [ isEnabled, ts ]);\n\n  return value;\n}\n","import config from 'configs/app';\n\nexport default function getNetworkValidatorTitle() {\n  return config.chain.verificationType === 'validation' ? 'validator' : 'miner';\n}\n","import type { Block } from 'types/api/block';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const BLOCK_HASH = '0x8fa7b9e5e5e79deeb62d608db22ba9a5cb45388c7ebb9223ae77331c6080dc70';\n\nexport const BLOCK: Block = {\n  base_fee_per_gas: '14',\n  burnt_fees: '92834504000000000',\n  burnt_fees_percentage: 42.2,\n  difficulty: '340282366920938463463374607431768211451',\n  extra_data: 'TODO',\n  gas_limit: '30000000',\n  gas_target_percentage: 55.79,\n  gas_used: '6631036',\n  gas_used_percentage: 22.10,\n  hash: BLOCK_HASH,\n  height: 8988736,\n  miner: ADDRESS_PARAMS,\n  nonce: '0x0000000000000000',\n  parent_hash: BLOCK_HASH,\n  priority_fee: '19241635454943109',\n  rewards: [\n    {\n      reward: '19241635454943109',\n      type: 'Validator Reward',\n    },\n  ],\n  size: 46406,\n  state_root: 'TODO',\n  timestamp: '2023-05-12T19:29:12.000000Z',\n  total_difficulty: '10837812015930321201107455268036056402048391639',\n  tx_count: 142,\n  tx_fees: '19241635547777613',\n  type: 'block',\n  uncles_hashes: [],\n};\n","import type { ArrayElement } from 'types/utils';\n\nimport type { PaginatedResources, PaginatedResponse } from 'lib/api/resources';\n\nexport function generateListStub<Resource extends PaginatedResources>(\n  stub: ArrayElement<PaginatedResponse<Resource>['items']>,\n  num = 50,\n  rest: Omit<PaginatedResponse<Resource>, 'items'>,\n) {\n  return {\n    items: Array(num).fill(stub),\n    ...rest,\n  };\n}\n","import { Skeleton, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport useTimeAgoIncrement from 'lib/hooks/useTimeAgoIncrement';\n\ninterface Props {\n  ts: string;\n  isEnabled?: boolean;\n  isLoading?: boolean;\n  className?: string;\n}\n\nconst BlockTimestamp = ({ ts, isEnabled, isLoading, className }: Props) => {\n  const timeAgo = useTimeAgoIncrement(ts, isEnabled);\n\n  return (\n    <Skeleton isLoaded={ !isLoading } color=\"text_secondary\" fontWeight={ 400 } className={ className } display=\"inline-block\">\n      <span>{ timeAgo }</span>\n    </Skeleton>\n  );\n};\n\nexport default React.memo(chakra(BlockTimestamp));\n","import { Flex, Skeleton, Text, Box, useColorModeValue } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport capitalize from 'lodash/capitalize';\nimport React from 'react';\n\nimport type { Block } from 'types/api/block';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\nimport getBlockTotalReward from 'lib/block/getBlockTotalReward';\nimport { WEI } from 'lib/consts';\nimport getNetworkValidatorTitle from 'lib/networks/getNetworkValidatorTitle';\nimport { currencyUnits } from 'lib/units';\nimport BlockTimestamp from 'ui/blocks/BlockTimestamp';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport GasUsedToTargetRatio from 'ui/shared/GasUsedToTargetRatio';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/LinkInternal';\nimport ListItemMobile from 'ui/shared/ListItemMobile/ListItemMobile';\nimport TextSeparator from 'ui/shared/TextSeparator';\nimport Utilization from 'ui/shared/Utilization/Utilization';\n\ninterface Props {\n  data: Block;\n  isLoading?: boolean;\n  enableTimeIncrement?: boolean;\n}\n\nconst isRollup = config.features.optimisticRollup.isEnabled || config.features.zkEvmRollup.isEnabled;\n\nconst BlocksListItem = ({ data, isLoading, enableTimeIncrement }: Props) => {\n  const totalReward = getBlockTotalReward(data);\n  const burntFees = BigNumber(data.burnt_fees || 0);\n  const txFees = BigNumber(data.tx_fees || 0);\n\n  const separatorColor = useColorModeValue('gray.200', 'gray.700');\n\n  return (\n    <ListItemMobile rowGap={ 3 } key={ String(data.height) } isAnimated>\n      <Flex justifyContent=\"space-between\" w=\"100%\">\n        <Flex columnGap={ 2 } alignItems=\"center\">\n          <BlockEntity\n            isLoading={ isLoading }\n            number={ data.height }\n            hash={ data.type !== 'block' ? data.hash : undefined }\n            noIcon\n            fontWeight={ 600 }\n          />\n        </Flex>\n        <BlockTimestamp ts={ data.timestamp } isEnabled={ enableTimeIncrement } isLoading={ isLoading }/>\n      </Flex>\n      <Flex columnGap={ 2 }>\n        <Text fontWeight={ 500 }>Size</Text>\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\" color=\"text_secondary\">\n          <span>{ data.size.toLocaleString() } bytes</span>\n        </Skeleton>\n      </Flex>\n      { !config.UI.views.block.hiddenFields?.miner && (\n        <Flex columnGap={ 2 } w=\"100%\">\n          <Text fontWeight={ 500 }>{ capitalize(getNetworkValidatorTitle()) }</Text>\n          <AddressEntity\n            address={ data.miner }\n            isLoading={ isLoading }\n          />\n        </Flex>\n      ) }\n      <Flex columnGap={ 2 }>\n        <Text fontWeight={ 500 }>Txn</Text>\n        { data.tx_count > 0 ? (\n          <Skeleton isLoaded={ !isLoading } display=\"inline-block\">\n            <LinkInternal href={ route({ pathname: '/block/[height_or_hash]', query: { height_or_hash: String(data.height), tab: 'txs' } }) }>\n              { data.tx_count }\n            </LinkInternal>\n          </Skeleton>\n        ) :\n          <Text variant=\"secondary\">{ data.tx_count }</Text>\n        }\n      </Flex>\n      <Box>\n        <Text fontWeight={ 500 }>Gas used</Text>\n        <Flex mt={ 2 }>\n          <Skeleton isLoaded={ !isLoading } display=\"inline-block\" color=\"text_secondary\" mr={ 4 }>\n            <span>{ BigNumber(data.gas_used || 0).toFormat() }</span>\n          </Skeleton>\n          <Utilization colorScheme=\"gray\" value={ BigNumber(data.gas_used || 0).div(BigNumber(data.gas_limit)).toNumber() } isLoading={ isLoading }/>\n          { data.gas_target_percentage && (\n            <>\n              <TextSeparator color={ separatorColor } mx={ 1 }/>\n              <GasUsedToTargetRatio value={ data.gas_target_percentage } isLoading={ isLoading }/>\n            </>\n          ) }\n        </Flex>\n      </Box>\n      { !isRollup && !config.UI.views.block.hiddenFields?.total_reward && (\n        <Flex columnGap={ 2 }>\n          <Text fontWeight={ 500 }>Reward { currencyUnits.ether }</Text>\n          <Skeleton isLoaded={ !isLoading } display=\"inline-block\" color=\"text_secondary\">\n            <span>{ totalReward.toFixed() }</span>\n          </Skeleton>\n        </Flex>\n      ) }\n      { !isRollup && !config.UI.views.block.hiddenFields?.burnt_fees && (\n        <Box>\n          <Text fontWeight={ 500 }>Burnt fees</Text>\n          <Flex columnGap={ 4 } mt={ 2 }>\n            <Flex>\n              <IconSvg name=\"flame\" boxSize={ 5 } color=\"gray.500\" isLoading={ isLoading }/>\n              <Skeleton isLoaded={ !isLoading } display=\"inline-block\" color=\"text_secondary\" ml={ 2 }>\n                <span>{ burntFees.div(WEI).toFixed() }</span>\n              </Skeleton>\n            </Flex>\n            <Utilization ml={ 4 } value={ burntFees.div(txFees).toNumber() } isLoading={ isLoading }/>\n          </Flex>\n        </Box>\n      ) }\n    </ListItemMobile>\n  );\n};\n\nexport default BlocksListItem;\n","import { Box } from '@chakra-ui/react';\nimport { AnimatePresence } from 'framer-motion';\nimport React from 'react';\n\nimport type { Block } from 'types/api/block';\n\nimport BlocksListItem from 'ui/blocks/BlocksListItem';\n\ninterface Props {\n  data: Array<Block>;\n  isLoading: boolean;\n  page: number;\n}\n\nconst BlocksList = ({ data, isLoading, page }: Props) => {\n  return (\n    <Box>\n      <AnimatePresence initial={ false }>\n        { data.map((item, index) => (\n          <BlocksListItem\n            key={ item.height + (isLoading ? String(index) : '') }\n            data={ item }\n            isLoading={ isLoading }\n            enableTimeIncrement={ page === 1 && !isLoading }\n          />\n        )) }\n      </AnimatePresence>\n    </Box>\n  );\n};\n\nexport default BlocksList;\n","import { Tr, Td, Flex, Box, Tooltip, Skeleton, useColorModeValue } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport { motion } from 'framer-motion';\nimport React from 'react';\n\nimport type { Block } from 'types/api/block';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\nimport getBlockTotalReward from 'lib/block/getBlockTotalReward';\nimport { WEI } from 'lib/consts';\nimport BlockTimestamp from 'ui/blocks/BlockTimestamp';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport GasUsedToTargetRatio from 'ui/shared/GasUsedToTargetRatio';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/LinkInternal';\nimport TextSeparator from 'ui/shared/TextSeparator';\nimport Utilization from 'ui/shared/Utilization/Utilization';\n\ninterface Props {\n  data: Block;\n  isLoading?: boolean;\n  enableTimeIncrement?: boolean;\n}\n\nconst isRollup = config.features.optimisticRollup.isEnabled || config.features.zkEvmRollup.isEnabled;\n\nconst BlocksTableItem = ({ data, isLoading, enableTimeIncrement }: Props) => {\n  const totalReward = getBlockTotalReward(data);\n  const burntFees = BigNumber(data.burnt_fees || 0); \n  const txFees = BigNumber(data.tx_fees || 0);\n\n  const separatorColor = useColorModeValue('gray.200', 'gray.700');\n  const burntFeesIconColor = useColorModeValue('gray.500', 'inherit');\n\n  return (\n    <Tr\n      as={ motion.tr }\n      initial={{ opacity: 0, scale: 0.97 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transitionDuration=\"normal\"\n      transitionTimingFunction=\"linear\"\n      key={ data.height }\n    >\n      <Td fontSize=\"sm\">\n        <Flex columnGap={ 2 } alignItems=\"center\" mb={ 2 }>\n          <Tooltip isDisabled={ data.type !== 'reorg' } label=\"Chain reorganizations\">\n            <BlockEntity\n              isLoading={ isLoading }\n              number={ data.height }\n              hash={ data.type !== 'block' ? data.hash : undefined }\n              noIcon\n              fontSize=\"sm\"\n              lineHeight={ 5 }\n              fontWeight={ 600 }\n            />\n          </Tooltip>\n        </Flex>\n        <BlockTimestamp ts={ data.timestamp } isEnabled={ enableTimeIncrement } isLoading={ isLoading }/>\n      </Td>\n      <Td fontSize=\"sm\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">\n          { data.size.toLocaleString() }\n        </Skeleton>\n      </Td>\n      { !config.UI.views.block.hiddenFields?.miner && (\n        <Td fontSize=\"sm\">\n          <AddressEntity\n            address={ data.miner }\n            isLoading={ isLoading }\n          />\n        </Td>\n      ) }\n      <Td isNumeric fontSize=\"sm\">\n        { data.tx_count > 0 ? (\n          <Skeleton isLoaded={ !isLoading } display=\"inline-block\">\n            <LinkInternal href={ route({\n              pathname: '/block/[height_or_hash]',\n              query: { height_or_hash: String(data.height), tab: 'txs' },\n            }) }>\n              { data.tx_count }\n            </LinkInternal>\n          </Skeleton>\n        ) : data.tx_count }\n      </Td>\n      { !isRollup && !config.UI.views.block.hiddenFields?.total_reward && (\n        <Td fontSize=\"sm\">\n          <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ BigNumber(data.gas_used || 0).toFormat() }</Skeleton>\n          <Flex mt={ 2 }>\n            <Tooltip label={ isLoading ? undefined : 'Gas Used %' }>\n              <Box>\n                <Utilization\n                  colorScheme=\"gray\"\n                  value={ BigNumber(data.gas_used || 0).dividedBy(BigNumber(data.gas_limit)).toNumber() }\n                  isLoading={ isLoading }\n                />\n              </Box>\n            </Tooltip>\n            { data.gas_target_percentage && (\n              <>\n                <TextSeparator color={ separatorColor } mx={ 1 }/>\n                <GasUsedToTargetRatio value={ data.gas_target_percentage } isLoading={ isLoading }/>\n              </>\n            ) }\n          </Flex>\n        </Td>\n      ) }\n      <Td fontSize=\"sm\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">\n          { totalReward.toFixed(8) }\n        </Skeleton>\n      </Td>\n      { !isRollup && !config.UI.views.block.hiddenFields?.burnt_fees && (\n        <Td fontSize=\"sm\">\n          <Flex alignItems=\"center\" columnGap={ 2 }>\n            <IconSvg name=\"flame\" boxSize={ 5 } color={ burntFeesIconColor } isLoading={ isLoading }/>\n            <Skeleton isLoaded={ !isLoading } display=\"inline-block\">\n              { burntFees.dividedBy(WEI).toFixed(8) }\n            </Skeleton>\n          </Flex>\n          <Tooltip label={ isLoading ? undefined : 'Burnt fees / Txn fees * 100%' }>\n            <Box w=\"min-content\">\n              <Utilization mt={ 2 } value={ burntFees.div(txFees).toNumber() } isLoading={ isLoading }/>\n            </Box>\n          </Tooltip>\n        </Td>\n      ) }\n    </Tr>\n  );\n};\n\nexport default React.memo(BlocksTableItem);\n","import { Table, Tbody, Tr, Th } from '@chakra-ui/react';\nimport { AnimatePresence } from 'framer-motion';\nimport capitalize from 'lodash/capitalize';\nimport React from 'react';\n\nimport type { Block } from 'types/api/block';\n\nimport config from 'configs/app';\nimport { AddressHighlightProvider } from 'lib/contexts/addressHighlight';\nimport getNetworkValidatorTitle from 'lib/networks/getNetworkValidatorTitle';\nimport { currencyUnits } from 'lib/units';\nimport BlocksTableItem from 'ui/blocks/BlocksTableItem';\nimport * as SocketNewItemsNotice from 'ui/shared/SocketNewItemsNotice';\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\ninterface Props {\n  data: Array<Block>;\n  isLoading?: boolean;\n  top: number;\n  page: number;\n  socketInfoNum?: number;\n  socketInfoAlert?: string;\n  showSocketInfo?: boolean;\n}\n\nconst VALIDATOR_COL_WEIGHT = 23;\nconst GAS_COL_WEIGHT = 33;\nconst REWARD_COL_WEIGHT = 22;\nconst FEES_COL_WEIGHT = 22;\n\nconst isRollup = config.features.optimisticRollup.isEnabled || config.features.zkEvmRollup.isEnabled;\n\nconst BlocksTable = ({ data, isLoading, top, page, showSocketInfo, socketInfoNum, socketInfoAlert }: Props) => {\n\n  const widthBase =\n    VALIDATOR_COL_WEIGHT +\n    GAS_COL_WEIGHT +\n    (!isRollup && !config.UI.views.block.hiddenFields?.total_reward ? REWARD_COL_WEIGHT : 0) +\n    (!isRollup && !config.UI.views.block.hiddenFields?.burnt_fees ? FEES_COL_WEIGHT : 0);\n\n  return (\n    <AddressHighlightProvider>\n      <Table variant=\"simple\" minWidth=\"1040px\" size=\"md\" fontWeight={ 500 }>\n        <Thead top={ top }>\n          <Tr>\n            <Th width=\"125px\">Block</Th>\n            <Th width=\"120px\">Size, bytes</Th>\n            { !config.UI.views.block.hiddenFields?.miner &&\n            <Th width={ `${ VALIDATOR_COL_WEIGHT / widthBase * 100 }%` } minW=\"160px\">{ capitalize(getNetworkValidatorTitle()) }</Th> }\n            <Th width=\"64px\" isNumeric>Txn</Th>\n            <Th width={ `${ GAS_COL_WEIGHT / widthBase * 100 }%` }>Gas used</Th>\n            { !isRollup && !config.UI.views.block.hiddenFields?.total_reward &&\n              <Th width={ `${ REWARD_COL_WEIGHT / widthBase * 100 }%` }>Reward { currencyUnits.ether }</Th> }\n            { !isRollup && !config.UI.views.block.hiddenFields?.burnt_fees &&\n              <Th width={ `${ FEES_COL_WEIGHT / widthBase * 100 }%` }>Burnt fees { currencyUnits.ether }</Th> }\n          </Tr>\n        </Thead>\n        <Tbody>\n          { showSocketInfo && (\n            <SocketNewItemsNotice.Desktop\n              url={ window.location.href }\n              alert={ socketInfoAlert }\n              num={ socketInfoNum }\n              type=\"block\"\n              isLoading={ isLoading }\n            />\n          ) }\n          <AnimatePresence initial={ false }>\n            { data.map((item, index) => (\n              <BlocksTableItem\n                key={ item.height + (isLoading ? `${ index }_${ page }` : '') }\n                data={ item }\n                enableTimeIncrement={ page === 1 && !isLoading }\n                isLoading={ isLoading }\n              />\n            )) }\n          </AnimatePresence>\n        </Tbody>\n      </Table>\n    </AddressHighlightProvider>\n  );\n};\n\nexport default BlocksTable;\n","import { Box } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { SocketMessage } from 'lib/socket/types';\nimport type { BlockType, BlocksResponse } from 'types/api/block';\n\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\nimport BlocksList from 'ui/blocks/BlocksList';\nimport BlocksTable from 'ui/blocks/BlocksTable';\nimport ActionBar from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\nimport * as SocketNewItemsNotice from 'ui/shared/SocketNewItemsNotice';\n\nconst OVERLOAD_COUNT = 75;\n\ninterface Props {\n  type?: BlockType;\n  query: QueryWithPagesResult<'blocks'>;\n}\n\nconst BlocksContent = ({ type, query }: Props) => {\n  const queryClient = useQueryClient();\n  const isMobile = useIsMobile();\n  const [ socketAlert, setSocketAlert ] = React.useState('');\n\n  const [ newItemsCount, setNewItemsCount ] = React.useState(0);\n\n  const handleNewBlockMessage: SocketMessage.NewBlock['handler'] = React.useCallback((payload) => {\n    const queryKey = getResourceKey('blocks', { queryParams: { type } });\n\n    queryClient.setQueryData(queryKey, (prevData: BlocksResponse | undefined) => {\n      const shouldAddToList = !type || type === payload.block.type;\n\n      if (!prevData) {\n        return {\n          items: shouldAddToList ? [ payload.block ] : [],\n          next_page_params: null,\n        };\n      }\n\n      if (!shouldAddToList || prevData.items.some((block => block.height === payload.block.height))) {\n        return prevData;\n      }\n\n      if (prevData.items.length >= OVERLOAD_COUNT) {\n        setNewItemsCount(prev => prev + 1);\n        return prevData;\n      }\n\n      const newItems = [ payload.block, ...prevData.items ].sort((b1, b2) => b2.height - b1.height);\n      return { ...prevData, items: newItems };\n    });\n  }, [ queryClient, type ]);\n\n  const handleSocketClose = React.useCallback(() => {\n    setSocketAlert('Connection is lost. Please refresh the page to load new blocks.');\n  }, []);\n\n  const handleSocketError = React.useCallback(() => {\n    setSocketAlert('An error has occurred while fetching new blocks. Please refresh the page to load new blocks.');\n  }, []);\n\n  const channel = useSocketChannel({\n    topic: 'blocks:new_block',\n    onSocketClose: handleSocketClose,\n    onSocketError: handleSocketError,\n    isDisabled: query.isPlaceholderData || query.isError || query.pagination.page !== 1,\n  });\n  useSocketMessage({\n    channel,\n    event: 'new_block',\n    handler: handleNewBlockMessage,\n  });\n\n  const content = query.data?.items ? (\n    <>\n      <Box display={{ base: 'block', lg: 'none' }}>\n        { query.pagination.page === 1 && (\n          <SocketNewItemsNotice.Mobile\n            url={ window.location.href }\n            num={ newItemsCount }\n            alert={ socketAlert }\n            type=\"block\"\n            isLoading={ query.isPlaceholderData }\n          />\n        ) }\n        <BlocksList data={ query.data.items } isLoading={ query.isPlaceholderData } page={ query.pagination.page }/>\n      </Box>\n      <Box display={{ base: 'none', lg: 'block' }}>\n        <BlocksTable\n          data={ query.data.items }\n          top={ query.pagination.isVisible ? 80 : 0 }\n          page={ query.pagination.page }\n          isLoading={ query.isPlaceholderData }\n          showSocketInfo={ query.pagination.page === 1 }\n          socketInfoNum={ newItemsCount }\n          socketInfoAlert={ socketAlert }\n        />\n      </Box>\n    </>\n  ) : null;\n\n  const actionBar = isMobile && query.pagination.isVisible ? (\n    <ActionBar mt={ -6 }>\n      <Pagination ml=\"auto\" { ...query.pagination }/>\n    </ActionBar>\n  ) : null;\n\n  return (\n    <DataListDisplay\n      isError={ query.isError }\n      items={ query.data?.items }\n      emptyText=\"There are no blocks.\"\n      content={ content }\n      actionBar={ actionBar }\n    />\n  );\n};\n\nexport default React.memo(BlocksContent);\n","import { Flex, Box, Text, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { PaginationParams } from 'ui/shared/pagination/types';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { nbsp } from 'lib/html-entities';\nimport { HOMEPAGE_STATS } from 'stubs/stats';\nimport Pagination from 'ui/shared/pagination/Pagination';\n\ninterface Props {\n  pagination: PaginationParams;\n}\n\nconst BlocksTabSlot = ({ pagination }: Props) => {\n  const statsQuery = useApiQuery('homepage_stats', {\n    fetchParams: {\n      headers: {\n        'updated-gas-oracle': 'true',\n      },\n    },\n    queryOptions: {\n      placeholderData: HOMEPAGE_STATS,\n    },\n  });\n\n  return (\n    <Flex alignItems=\"center\" columnGap={ 8 } display={{ base: 'none', lg: 'flex' }}>\n      { statsQuery.data?.network_utilization_percentage !== undefined && (\n        <Box>\n          <Text as=\"span\" fontSize=\"sm\">\n              Network utilization (last 50 blocks):{ nbsp }\n          </Text>\n          <Skeleton display=\"inline-block\" fontSize=\"sm\" color=\"blue.400\" fontWeight={ 600 } isLoaded={ !statsQuery.isPlaceholderData }>\n            <span>{ statsQuery.data.network_utilization_percentage.toFixed(2) }%</span>\n          </Skeleton>\n        </Box>\n      ) }\n      <Pagination my={ 1 } { ...pagination }/>\n    </Flex>\n  );\n};\n\nexport default BlocksTabSlot;\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { BLOCK } from 'stubs/block';\nimport { generateListStub } from 'stubs/utils';\nimport BlocksContent from 'ui/blocks/BlocksContent';\nimport BlocksTabSlot from 'ui/blocks/BlocksTabSlot';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\n\nconst TAB_LIST_PROPS = {\n  marginBottom: 0,\n  py: 5,\n  marginTop: -5,\n};\n\nconst BlocksPageContent = () => {\n  const router = useRouter();\n  const isMobile = useIsMobile();\n  const tab = getQueryParamString(router.query.tab);\n\n  const blocksQuery = useQueryWithPages({\n    resourceName: 'blocks',\n    filters: { type: 'block' },\n    options: {\n      enabled: tab === 'blocks' || !tab,\n      placeholderData: generateListStub<'blocks'>(BLOCK, 50, { next_page_params: {\n        block_number: 8988686,\n        items_count: 50,\n      } }),\n    },\n  });\n  const reorgsQuery = useQueryWithPages({\n    resourceName: 'blocks',\n    filters: { type: 'reorg' },\n    options: {\n      enabled: tab === 'reorgs',\n      placeholderData: generateListStub<'blocks'>(BLOCK, 50, { next_page_params: {\n        block_number: 8988686,\n        items_count: 50,\n      } }),\n    },\n  });\n  const unclesQuery = useQueryWithPages({\n    resourceName: 'blocks',\n    filters: { type: 'uncle' },\n    options: {\n      enabled: tab === 'uncles',\n      placeholderData: generateListStub<'blocks'>(BLOCK, 50, { next_page_params: {\n        block_number: 8988686,\n        items_count: 50,\n      } }),\n    },\n  });\n\n  const pagination = (() => {\n    if (tab === 'reorgs') {\n      return reorgsQuery.pagination;\n    }\n    if (tab === 'uncles') {\n      return unclesQuery.pagination;\n    }\n    return blocksQuery.pagination;\n  })();\n\n  const tabs: Array<RoutedTab> = [\n    { id: 'blocks', title: 'All', component: <BlocksContent type=\"block\" query={ blocksQuery }/> },\n    { id: 'reorgs', title: 'Forked', component: <BlocksContent type=\"reorg\" query={ reorgsQuery }/> },\n    { id: 'uncles', title: 'Uncles', component: <BlocksContent type=\"uncle\" query={ unclesQuery }/> },\n  ];\n\n  return (\n    <>\n      <PageTitle title=\"Blocks\" withTextAd/>\n      <RoutedTabs\n        tabs={ tabs }\n        tabListProps={ isMobile ? undefined : TAB_LIST_PROPS }\n        rightSlot={ <BlocksTabSlot pagination={ pagination }/> }\n        stickyEnabled={ !isMobile }\n      />\n    </>\n  );\n};\n\nexport default BlocksPageContent;\n","import { Skeleton, Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\ntype Props = {\n  value: number;\n  isLoading?: boolean;\n}\n\nconst GasUsedToTargetRatio = ({ value, isLoading }: Props) => {\n  return (\n    <Tooltip label=\"% of Gas Target\">\n      <Skeleton color=\"text_secondary\" isLoaded={ !isLoading }>\n        <span>{ (value > 0 ? '+' : '') + value.toLocaleString(undefined, { maximumFractionDigits: 2 }) }%</span>\n      </Skeleton>\n    </Tooltip>\n  );\n};\n\nexport default React.memo(GasUsedToTargetRatio);\n","import { Flex, chakra } from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  isAnimated?: boolean;\n}\n\nconst ListItemMobile = ({ children, className, isAnimated }: Props) => {\n  return (\n    <Flex\n      as={ motion.div }\n      initial={ isAnimated ? { opacity: 0, scale: 0.97 } : { opacity: 1, scale: 1 } }\n      animate={{ opacity: 1, scale: 1 }}\n      transitionDuration=\"normal\"\n      transitionTimingFunction=\"linear\"\n      rowGap={ 6 }\n      alignItems=\"flex-start\"\n      flexDirection=\"column\"\n      paddingY={ 6 }\n      borderColor=\"divider\"\n      borderTopWidth=\"1px\"\n      _last={{\n        borderBottomWidth: '1px',\n      }}\n      className={ className }\n      fontSize=\"16px\"\n      lineHeight=\"20px\"\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ListItemMobile);\n","import { Alert, Link, Text, chakra, useTheme, useColorModeValue, Skeleton, Tr, Td } from '@chakra-ui/react';\nimport { transparentize } from '@chakra-ui/theme-tools';\nimport React from 'react';\n\ninterface InjectedProps {\n  content: React.ReactNode;\n}\n\ninterface Props {\n  type?: 'transaction' | 'token_transfer' | 'deposit' | 'block';\n  children?: (props: InjectedProps) => JSX.Element;\n  className?: string;\n  url: string;\n  alert?: string;\n  num?: number;\n  isLoading?: boolean;\n}\n\nconst SocketNewItemsNotice = chakra(({ children, className, url, num, alert, type = 'transaction', isLoading }: Props) => {\n  const theme = useTheme();\n\n  const alertContent = (() => {\n    if (alert) {\n      return alert;\n    }\n\n    let name;\n\n    switch (type) {\n      case 'token_transfer':\n        name = 'token transfer';\n        break;\n      case 'deposit':\n        name = 'deposit';\n        break;\n      case 'block':\n        name = 'block';\n        break;\n      default:\n        name = 'transaction';\n        break;\n    }\n\n    if (!num) {\n      return `scanning new ${ name }s...`;\n    }\n\n    return (\n      <>\n        <Link href={ url }>{ num.toLocaleString() } more { name }{ num > 1 ? 's' : '' }</Link>\n        <Text whiteSpace=\"pre\"> ha{ num > 1 ? 've' : 's' } come in</Text>\n      </>\n    );\n  })();\n\n  const color = useColorModeValue('blackAlpha.800', 'whiteAlpha.800');\n  const bgColor = useColorModeValue('orange.50', transparentize('orange.200', 0.16)(theme));\n\n  const content = !isLoading ? (\n    <Alert\n      className={ className }\n      status=\"warning\"\n      px={ 4 }\n      py=\"6px\"\n      fontWeight={ 400 }\n      fontSize=\"sm\"\n      lineHeight={ 5 }\n      bgColor={ bgColor }\n      color={ color }\n    >\n      { alertContent }\n    </Alert>\n  ) : <Skeleton className={ className } h=\"33px\"/>;\n\n  return children ? children({ content }) : content;\n});\n\nexport default SocketNewItemsNotice;\n\nexport const Desktop = ({ ...props }: Props) => {\n  return (\n    <SocketNewItemsNotice\n      borderRadius={ props.isLoading ? 'sm' : 0 }\n      h={ props.isLoading ? 5 : 'auto' }\n      maxW={ props.isLoading ? '215px' : undefined }\n      w=\"100%\"\n      mx={ props.isLoading ? 4 : 0 }\n      my={ props.isLoading ? '6px' : 0 }\n      { ...props }\n    >\n      { ({ content }) => <Tr><Td colSpan={ 100 } p={ 0 }>{ content }</Td></Tr> }\n    </SocketNewItemsNotice>\n  );\n};\n\nexport const Mobile = ({ ...props }: Props) => {\n  return (\n    <SocketNewItemsNotice\n      borderBottomRadius={ 0 }\n      { ...props }\n    />\n  );\n};\n","import { Box, Flex, chakra, useColorModeValue, Skeleton } from '@chakra-ui/react';\nimport clamp from 'lodash/clamp';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  value: number;\n  colorScheme?: 'green' | 'gray';\n  isLoading?: boolean;\n}\n\nconst WIDTH = 50;\n\nconst Utilization = ({ className, value, colorScheme = 'green', isLoading }: Props) => {\n  const valueString = (clamp(value * 100 || 0, 0, 100)).toLocaleString(undefined, { maximumFractionDigits: 2 }) + '%';\n  const colorGrayScheme = useColorModeValue('gray.500', 'gray.400');\n  const color = colorScheme === 'gray' ? colorGrayScheme : 'green.500';\n\n  return (\n    <Flex className={ className } alignItems=\"center\" columnGap={ 2 }>\n      <Skeleton isLoaded={ !isLoading } w={ `${ WIDTH }px` } h=\"4px\" borderRadius=\"full\" overflow=\"hidden\">\n        <Box bg={ useColorModeValue('blackAlpha.200', 'whiteAlpha.200') } h=\"100%\">\n          <Box bg={ color } w={ valueString } h=\"100%\"/>\n        </Box>\n      </Skeleton>\n      <Skeleton isLoaded={ !isLoading } color={ color } fontWeight=\"bold\">\n        <span>\n          { valueString }\n        </span>\n      </Skeleton>\n    </Flex>\n  );\n};\n\nexport default React.memo(chakra(Utilization));\n","// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, layout, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(TableStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.table,\n    {\n      ref,\n      __css: { tableLayout: layout, ...styles.table },\n      className: cx(\"chakra-table\", className),\n      ...tableProps\n    }\n  ) });\n});\nTable.displayName = \"Table\";\n\nexport {\n  useTableStyles,\n  Table\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/td.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Td = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.td,\n      {\n        ...rest,\n        ref,\n        __css: styles.td,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Td\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tbody.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tbody = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tbody, { ...props, ref, __css: styles.tbody });\n});\n\nexport {\n  Tbody\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/thead.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Thead = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.thead, { ...props, ref, __css: styles.thead });\n});\n\nexport {\n  Thead\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tr.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tr = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tr, { ...props, ref, __css: styles.tr });\n});\n\nexport {\n  Tr\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/th.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Th = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.th,\n      {\n        ...rest,\n        ref,\n        __css: styles.th,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Th\n};\n"],"names":["getBlockTotalReward","block","totalReward","rewards","map","reward","param","BigNumber","reduce","result","item","plus","ZERO","div","WEI","useTimeAgoIncrement","ts","isEnabled","value","setValue","React","dayjs","fromNow","timeouts","intervals","startIncrement","intervalId","startTimeout","interval","endTimeout","getUpdateParams","timeDiff","Date","now","getTime","unit","higherUnit","MINUTE","SECOND","diff","HOUR","DAY","leftover","startTimeoutId","window","setTimeout","setInterval","push","endTimeoutId","clearInterval","forEach","clearTimeout","getNetworkValidatorTitle","config","chain","verificationType","BLOCK_HASH","BLOCK","base_fee_per_gas","burnt_fees","burnt_fees_percentage","difficulty","extra_data","gas_limit","gas_target_percentage","gas_used","gas_used_percentage","hash","height","miner","ADDRESS_PARAMS","nonce","parent_hash","priority_fee","type","size","state_root","timestamp","total_difficulty","tx_count","tx_fees","uncles_hashes","generateListStub","stub","num","rest","items","Array","fill","__webpack_exports__","Z","chakra","isLoading","className","timeAgo","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Skeleton","isLoaded","color","fontWeight","display","span","isRollup","features","optimisticRollup","zkEvmRollup","blocks_BlocksListItem","data","enableTimeIncrement","burntFees","txFees","separatorColor","useColorModeValue","jsx_runtime","jsxs","ListItemMobile","rowGap","isAnimated","Flex","justifyContent","w","columnGap","alignItems","BlockEntity","number","undefined","noIcon","BlockTimestamp","Text","toLocaleString","UI","views","hiddenFields","capitalize","AddressEntity","address","LinkInternal","href","route","pathname","query","height_or_hash","String","tab","variant","Box","mt","mr","toFormat","Utilization","colorScheme","toNumber","Fragment","TextSeparator","mx","GasUsedToTargetRatio","total_reward","currencyUnits","ether","toFixed","IconSvg","name","boxSize","ml","blocks_BlocksList","page","AnimatePresence","initial","index","BlocksListItem","blocks_BlocksTableItem","burntFeesIconColor","Tr","as","motion","tr","opacity","scale","animate","transitionDuration","transitionTimingFunction","Td","fontSize","mb","Tooltip","isDisabled","label","lineHeight","isNumeric","dividedBy","blocks_BlocksTable","top","showSocketInfo","socketInfoNum","socketInfoAlert","widthBase","VALIDATOR_COL_WEIGHT","AddressHighlightProvider","Table","minWidth","Thead","Th","width","concat","minW","GAS_COL_WEIGHT","REWARD_COL_WEIGHT","FEES_COL_WEIGHT","Tbody","SocketNewItemsNotice","url","location","alert","BlocksTableItem","blocks_BlocksContent","queryClient","useQueryClient","isMobile","useIsMobile","socketAlert","setSocketAlert","newItemsCount","setNewItemsCount","handleNewBlockMessage","queryKey","getResourceKey","queryParams","setQueryData","shouldAddToList","payload","prevData","next_page_params","some","length","prev","newItems","sort","b1","b2","handleSocketClose","handleSocketError","channel","useSocketChannel","topic","onSocketClose","onSocketError","isPlaceholderData","isError","pagination","useSocketMessage","event","handler","content","base","lg","BlocksList","BlocksTable","isVisible","actionBar","ActionBar","Pagination","DataListDisplay","emptyText","blocks_BlocksTabSlot","statsQuery","useApiQuery","fetchParams","headers","queryOptions","placeholderData","HOMEPAGE_STATS","network_utilization_percentage","nbsp","my","TAB_LIST_PROPS","marginBottom","py","marginTop","Blocks","router","useRouter","getQueryParamString","blocksQuery","useQueryWithPages","resourceName","filters","options","enabled","block_number","items_count","reorgsQuery","unclesQuery","tabs","id","title","component","BlocksContent","PageTitle","withTextAd","RoutedTabs","tabListProps","rightSlot","BlocksTabSlot","stickyEnabled","maximumFractionDigits","children","flexDirection","paddingY","borderColor","borderTopWidth","_last","borderBottomWidth","theme","useTheme","alertContent","Link","whiteSpace","bgColor","transparentize","h","Alert","status","px","ZP","Desktop","props","borderRadius","maxW","colSpan","p","Mobile","borderBottomRadius","valueString","lodash_clamp__WEBPACK_IMPORTED_MODULE_1___default","colorGrayScheme","overflow","bg","TableStylesProvider","useTableStyles","_chakra_ui_react_context__WEBPACK_IMPORTED_MODULE_1__","k","errorMessage","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_2__","G","ref","styles","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__","jC","layout","tableProps","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__","Lr","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__","m","table","__css","tableLayout","_chakra_ui_shared_utils__WEBPACK_IMPORTED_MODULE_6__","cx","displayName","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__","_chunk_B3MS3L3D_mjs__WEBPACK_IMPORTED_MODULE_2__","td","tbody","thead","th"],"sourceRoot":""}