{"version":3,"file":"static/chunks/1310.1a9840b7e1c368d4.js","mappings":"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","sources":["webpack://_N_E/./stubs/L2.ts","webpack://_N_E/./stubs/tx.ts","webpack://_N_E/./stubs/utils.ts","webpack://_N_E/./ui/l2OutputRoots/OutputRootsListItem.tsx","webpack://_N_E/./ui/l2OutputRoots/OutputRootsTableItem.tsx","webpack://_N_E/./ui/l2OutputRoots/OutputRootsTable.tsx","webpack://_N_E/./ui/pages/L2OutputRoots.tsx","webpack://_N_E/./ui/shared/DataListDisplay.tsx","webpack://_N_E/./ui/shared/EmptySearchResult.tsx","webpack://_N_E/./ui/shared/ListItemMobile/ListItemMobileGrid.tsx","webpack://_N_E/./ui/shared/StickyPaginationWithText.tsx","webpack://_N_E/./ui/shared/entities/block/BlockEntityL2.tsx","webpack://_N_E/./ui/shared/entities/tx/TxEntityL1.tsx","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-DZU5YH7Z.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-OLSEFBIG.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-R3K6W4OF.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-VVU6AIWW.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-B3MS3L3D.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-BLRPLYZO.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-D3HTYHQX.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-DJP6PLAX.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-L7UVV2ML.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-Z3IFIKNA.mjs","webpack://_N_E/<anon>"],"sourcesContent":["import type { L2DepositsItem } from 'types/api/l2Deposits';\nimport type { L2OutputRootsItem } from 'types/api/l2OutputRoots';\nimport type { L2TxnBatchesItem } from 'types/api/l2TxnBatches';\nimport type { L2WithdrawalsItem } from 'types/api/l2Withdrawals';\n\nimport { ADDRESS_HASH, ADDRESS_PARAMS } from './addressParams';\nimport { TX_HASH } from './tx';\n\nexport const L2_DEPOSIT_ITEM: L2DepositsItem = {\n  l1_block_number: 9045233,\n  l1_block_timestamp: '2023-05-22T18:00:36.000000Z',\n  l1_tx_hash: TX_HASH,\n  l1_tx_origin: ADDRESS_HASH,\n  l2_tx_gas_limit: '100000',\n  l2_tx_hash: TX_HASH,\n};\n\nexport const L2_WITHDRAWAL_ITEM: L2WithdrawalsItem = {\n  challenge_period_end: null,\n  from: ADDRESS_PARAMS,\n  l1_tx_hash: TX_HASH,\n  l2_timestamp: '2023-06-01T13:44:56.000000Z',\n  l2_tx_hash: TX_HASH,\n  msg_nonce: 2393,\n  msg_nonce_version: 1,\n  status: 'Ready to prove',\n};\n\nexport const L2_TXN_BATCHES_ITEM: L2TxnBatchesItem = {\n  epoch_number: 9103513,\n  l1_timestamp: '2023-06-01T14:46:48.000000Z',\n  l1_tx_hashes: [\n    TX_HASH,\n  ],\n  l2_block_number: 5218590,\n  tx_count: 9,\n};\n\nexport const L2_OUTPUT_ROOTS_ITEM: L2OutputRootsItem = {\n  l1_block_number: 9103684,\n  l1_timestamp: '2023-06-01T15:26:12.000000Z',\n  l1_tx_hash: TX_HASH,\n  l2_block_number: 10102468,\n  l2_output_index: 50655,\n  output_root: TX_HASH,\n};\n","import type { RawTracesResponse } from 'types/api/rawTrace';\nimport type { Transaction } from 'types/api/transaction';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const TX_HASH = '0x3ed9d81e7c1001bdda1caa1dc62c0acbbe3d2c671cdc20dc1e65efdaa4186967';\n\nexport const TX: Transaction = {\n  timestamp: '2022-11-11T11:11:11.000000Z',\n  fee: {\n    type: 'actual',\n    value: '2100000000000000',\n  },\n  gas_limit: '21000',\n  block: 9004925,\n  status: 'ok',\n  method: 'placeholder',\n  confirmations: 71,\n  type: 0,\n  exchange_rate: '1828.71',\n  to: ADDRESS_PARAMS,\n  tx_burnt_fee: null,\n  max_fee_per_gas: null,\n  result: 'success',\n  hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  gas_price: '100000000000',\n  priority_fee: null,\n  base_fee_per_gas: '24',\n  from: ADDRESS_PARAMS,\n  token_transfers: null,\n  tx_types: [\n    'coin_transfer',\n  ],\n  gas_used: '21000',\n  created_contract: null,\n  position: 0,\n  nonce: 295929,\n  has_error_in_internal_txs: false,\n  actions: [],\n  decoded_input: null,\n  token_transfers_overflow: false,\n  raw_input: '0x',\n  value: '42000420000000000000',\n  max_priority_fee_per_gas: null,\n  revert_reason: null,\n  confirmation_duration: [\n    0,\n    14545,\n  ],\n  tx_tag: null,\n};\n\nexport const TX_ZKEVM_L2: Transaction = {\n  ...TX,\n  zkevm_batch_number: 12345,\n  zkevm_sequence_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  zkevm_status: 'Confirmed by Sequencer',\n  zkevm_verify_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n};\n\nexport const TX_RAW_TRACE: RawTracesResponse = [];\n","import type { ArrayElement } from 'types/utils';\n\nimport type { PaginatedResources, PaginatedResponse } from 'lib/api/resources';\n\nexport function generateListStub<Resource extends PaginatedResources>(\n  stub: ArrayElement<PaginatedResponse<Resource>['items']>,\n  num = 50,\n  rest: Omit<PaginatedResponse<Resource>, 'items'>,\n) {\n  return {\n    items: Array(num).fill(stub),\n    ...rest,\n  };\n}\n","import { Flex, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { L2OutputRootsItem } from 'types/api/l2OutputRoots';\n\nimport config from 'configs/app';\nimport dayjs from 'lib/date/dayjs';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport BlockEntityL2 from 'ui/shared/entities/block/BlockEntityL2';\nimport TxEntityL1 from 'ui/shared/entities/tx/TxEntityL1';\nimport HashStringShortenDynamic from 'ui/shared/HashStringShortenDynamic';\nimport ListItemMobileGrid from 'ui/shared/ListItemMobile/ListItemMobileGrid';\n\nconst feature = config.features.optimisticRollup;\n\ntype Props = { item: L2OutputRootsItem; isLoading?: boolean };\n\nconst OutputRootsListItem = ({ item, isLoading }: Props) => {\n  const timeAgo = dayjs(item.l1_timestamp).fromNow();\n\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  return (\n    <ListItemMobileGrid.Container>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>L2 output index</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value fontWeight={ 600 } color=\"text\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.l2_output_index }</Skeleton>\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Age</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">\n          <span>{ timeAgo }</span>\n        </Skeleton>\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>L2 block #</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <BlockEntityL2\n          isLoading={ isLoading }\n          number={ item.l2_block_number }\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n          noIcon\n        />\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>L1 txn hash</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value py=\"3px\">\n        <TxEntityL1\n          isLoading={ isLoading }\n          hash={ item.l1_tx_hash }\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n        />\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Output root</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <Flex overflow=\"hidden\" whiteSpace=\"nowrap\" alignItems=\"center\" w=\"100%\" justifyContent=\"space-between\">\n          <Skeleton isLoaded={ !isLoading } color=\"text_secondary\" w=\"calc(100% - 24px)\">\n            <HashStringShortenDynamic hash={ item.output_root }/>\n          </Skeleton>\n          <CopyToClipboard text={ item.output_root } isLoading={ isLoading }/>\n        </Flex>\n      </ListItemMobileGrid.Value>\n\n    </ListItemMobileGrid.Container>\n  );\n};\n\nexport default OutputRootsListItem;\n","import { Flex, Td, Tr, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { L2OutputRootsItem } from 'types/api/l2OutputRoots';\n\nimport config from 'configs/app';\nimport dayjs from 'lib/date/dayjs';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport BlockEntityL2 from 'ui/shared/entities/block/BlockEntityL2';\nimport TxEntityL1 from 'ui/shared/entities/tx/TxEntityL1';\nimport HashStringShortenDynamic from 'ui/shared/HashStringShortenDynamic';\n\nconst feature = config.features.optimisticRollup;\n\ntype Props = { item: L2OutputRootsItem; isLoading?: boolean };\n\nconst OutputRootsTableItem = ({ item, isLoading }: Props) => {\n  const timeAgo = dayjs(item.l1_timestamp).fromNow();\n\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  return (\n    <Tr>\n      <Td verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.l2_output_index }</Skeleton>\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } color=\"text_secondary\" display=\"inline-block\"><span>{ timeAgo }</span></Skeleton>\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <BlockEntityL2\n          isLoading={ isLoading }\n          number={ item.l2_block_number }\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n          fontWeight={ 600 }\n        />\n      </Td>\n      <Td verticalAlign=\"middle\" pr={ 12 }>\n        <TxEntityL1\n          isLoading={ isLoading }\n          hash={ item.l1_tx_hash }\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n        />\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <Flex overflow=\"hidden\" whiteSpace=\"nowrap\" w=\"100%\" alignItems=\"center\">\n          <Skeleton isLoaded={ !isLoading } w=\"calc(100% - 36px)\">\n            <HashStringShortenDynamic hash={ item.output_root }/>\n          </Skeleton>\n          <CopyToClipboard text={ item.output_root } ml={ 2 } isLoading={ isLoading }/>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default OutputRootsTableItem;\n","import { Table, Tbody, Th, Tr } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { L2OutputRootsItem } from 'types/api/l2OutputRoots';\n\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport OutputRootsTableItem from './OutputRootsTableItem';\n\ntype Props = {\n  items: Array<L2OutputRootsItem>;\n  top: number;\n  isLoading?: boolean;\n}\n\nconst OutputRootsTable = ({ items, top, isLoading }: Props) => {\n  return (\n    <Table variant=\"simple\" size=\"sm\" minW=\"900px\">\n      <Thead top={ top }>\n        <Tr>\n          <Th width=\"140px\">L2 output index</Th>\n          <Th width=\"20%\">Age</Th>\n          <Th width=\"20%\">L2 block #</Th>\n          <Th width=\"30%\">L1 txn hash</Th>\n          <Th width=\"30%\">Output root</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        { items.map((item, index) => (\n          <OutputRootsTableItem key={ item.l2_output_index + (Number(isLoading ? index : '') ? String(index) : '') } item={ item } isLoading={ isLoading }/>\n        )) }\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default OutputRootsTable;\n","import { Hide, Show, Skeleton, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { L2_OUTPUT_ROOTS_ITEM } from 'stubs/L2';\nimport { generateListStub } from 'stubs/utils';\nimport OutputRootsListItem from 'ui/l2OutputRoots/OutputRootsListItem';\nimport OutputRootsTable from 'ui/l2OutputRoots/OutputRootsTable';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport StickyPaginationWithText from 'ui/shared/StickyPaginationWithText';\n\nconst L2OutputRoots = () => {\n  const { data, isError, isPlaceholderData, pagination } = useQueryWithPages({\n    resourceName: 'l2_output_roots',\n    options: {\n      placeholderData: generateListStub<'l2_output_roots'>(\n        L2_OUTPUT_ROOTS_ITEM,\n        50,\n        {\n          next_page_params: {\n            items_count: 50,\n            index: 9045200,\n          },\n        },\n      ),\n    },\n  });\n\n  const countersQuery = useApiQuery('l2_output_roots_count', {\n    queryOptions: {\n      placeholderData: 50617,\n    },\n  });\n\n  const content = data?.items ? (\n    <>\n      <Show below=\"lg\" ssr={ false }>\n        { data.items.map(((item, index) => (\n          <OutputRootsListItem\n            key={ item.l2_output_index + (isPlaceholderData ? String(index) : '') }\n            item={ item }\n            isLoading={ isPlaceholderData }\n          />\n        ))) }\n      </Show>\n      <Hide below=\"lg\" ssr={ false }>\n        <OutputRootsTable items={ data.items } top={ pagination.isVisible ? 80 : 0 } isLoading={ isPlaceholderData }/>\n      </Hide>\n    </>\n  ) : null;\n\n  const text = (() => {\n    if (countersQuery.isError || isError || !data?.items.length) {\n      return null;\n    }\n\n    return (\n      <Skeleton isLoaded={ !countersQuery.isPlaceholderData && !isPlaceholderData } display=\"flex\" flexWrap=\"wrap\">\n        L2 output index\n        <Text fontWeight={ 600 } whiteSpace=\"pre\"> #{ data.items[0].l2_output_index } </Text>to\n        <Text fontWeight={ 600 } whiteSpace=\"pre\"> #{ data.items[data.items.length - 1].l2_output_index } </Text>\n        (total of { countersQuery.data?.toLocaleString() } roots)\n      </Skeleton>\n    );\n  })();\n\n  const actionBar = <StickyPaginationWithText text={ text } pagination={ pagination }/>;\n\n  return (\n    <>\n      <PageTitle title=\"Output roots\" withTextAd/>\n      <DataListDisplay\n        isError={ isError }\n        items={ data?.items }\n        emptyText=\"There are no output roots.\"\n        content={ content }\n        actionBar={ actionBar }\n      />\n    </>\n  );\n};\n\nexport default L2OutputRoots;\n","import { Box, Text, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport EmptySearchResult from 'ui/shared/EmptySearchResult';\n\nimport DataFetchAlert from './DataFetchAlert';\n\ntype FilterProps = {\n  hasActiveFilters: boolean;\n  emptyFilteredText: string;\n};\n\ntype Props = {\n  isError: boolean;\n  items?: Array<unknown>;\n  emptyText: string;\n  actionBar?: React.ReactNode;\n  content: React.ReactNode;\n  className?: string;\n  filterProps?: FilterProps;\n}\n\nconst DataListDisplay = (props: Props) => {\n  if (props.isError) {\n    return <DataFetchAlert className={ props.className }/>;\n  }\n\n  if (props.filterProps?.hasActiveFilters && !props.items?.length) {\n    return (\n      <Box className={ props.className }>\n        { props.actionBar }\n        <EmptySearchResult text={ props.filterProps.emptyFilteredText }/>\n      </Box>\n    );\n  }\n\n  if (!props.items?.length) {\n    return props.emptyText ? <Text className={ props.className }>{ props.emptyText }</Text> : null;\n  }\n\n  return (\n    <Box className={ props.className }>\n      { props.actionBar }\n      { props.content }\n    </Box>\n  );\n};\n\nexport default chakra(DataListDisplay);\n","import { Box, Heading, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  text: string;\n}\n\nconst EmptySearchResult = ({ text }: Props) => {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n    >\n      <IconSvg\n        name=\"empty_search_result\"\n        boxSize={ 60 }\n        display=\"block\"\n      />\n\n      <Heading\n        as=\"h3\"\n        marginBottom={ 2 }\n        fontSize={{ base: '2xl', sm: '3xl' }}\n        fontWeight=\"semibold\"\n      >\n        No results\n      </Heading>\n\n      <Text\n        fontSize={{ base: 'sm' }}\n        variant=\"secondary\"\n        align=\"center\"\n      >\n        { text }\n      </Text>\n    </Box>\n  );\n};\n\nexport default EmptySearchResult;\n","import { Grid, chakra, GridItem, Skeleton } from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\nimport React from 'react';\n\ninterface ContainerProps {\n  className?: string;\n  isAnimated?: boolean;\n  children: React.ReactNode;\n}\n\nconst Container = chakra(({ isAnimated, children, className }: ContainerProps) => {\n  return (\n    <Grid\n      as={ motion.div }\n      w=\"100%\"\n      initial={ isAnimated ? { opacity: 0, scale: 0.97 } : { opacity: 1, scale: 1 } }\n      animate={{ opacity: 1, scale: 1 }}\n      transitionDuration=\"normal\"\n      transitionTimingFunction=\"linear\"\n      rowGap={ 2 }\n      columnGap={ 2 }\n      gridTemplateColumns=\"86px auto\"\n      alignItems=\"start\"\n      paddingY={ 4 }\n      borderColor=\"divider\"\n      borderTopWidth=\"1px\"\n      _last={{\n        borderBottomWidth: '1px',\n      }}\n      className={ className }\n      fontSize=\"sm\"\n      lineHeight=\"20px\"\n    >\n      { children }\n    </Grid>\n  );\n});\n\ninterface LabelProps {\n  className?: string;\n  children: React.ReactNode;\n  isLoading?: boolean;\n}\n\nconst Label = chakra(({ children, className, isLoading }: LabelProps) => {\n  return (\n    <Skeleton\n      className={ className }\n      isLoaded={ !isLoading }\n      fontWeight={ 500 }\n      my=\"5px\"\n      justifySelf=\"start\"\n    >\n      { children }\n    </Skeleton>\n  );\n});\n\ninterface ValueProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst Value = chakra(({ children, className }: ValueProps) => {\n  return (\n    <GridItem\n      className={ className }\n      py=\"5px\"\n      color=\"text_secondary\"\n      overflow=\"hidden\"\n    >\n      { children }\n    </GridItem>\n  );\n});\n\nconst ListItemMobileGrid = {\n  Container,\n  Label,\n  Value,\n};\n\nexport default ListItemMobileGrid;\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { PaginationParams } from './pagination/types';\n\nimport ActionBar from './ActionBar';\nimport Pagination from './pagination/Pagination';\n\ntype Props = {\n  pagination: PaginationParams;\n  text: React.ReactNode;\n}\n\nconst TextSeparator = ({ pagination, text }: Props) => {\n  if (!pagination.isVisible) {\n    return <Box mb={ 6 }>{ text }</Box>;\n  }\n\n  return (\n    <>\n      <Box mb={ 6 } display={{ base: 'block', lg: 'none' }}>\n        { text }\n      </Box>\n      <ActionBar mt={ -6 } alignItems=\"center\">\n        <Box display={{ base: 'none', lg: 'block' }}>\n          { text }\n        </Box>\n        { pagination.isVisible && <Pagination ml=\"auto\" { ...pagination }/> }\n      </ActionBar>\n    </>\n  );\n};\n\nexport default TextSeparator;\n","import { chakra } from '@chakra-ui/react';\nimport _omit from 'lodash/omit';\nimport React from 'react';\n\nimport config from 'configs/app';\n\nimport * as BlockEntity from './BlockEntity';\n\nconst feature = config.features.optimisticRollup;\n\nconst BlockEntityL2 = (props: BlockEntity.EntityProps) => {\n  const linkProps = _omit(props, [ 'className' ]);\n  const partsProps = _omit(props, [ 'className', 'onClick' ]);\n\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  return (\n    <BlockEntity.Container className={ props.className }>\n      <BlockEntity.Icon { ...partsProps } name=\"txn_batches_slim\"/>\n      <BlockEntity.Link { ...linkProps }>\n        <BlockEntity.Content { ...partsProps }/>\n      </BlockEntity.Link>\n    </BlockEntity.Container>\n  );\n};\n\nexport default chakra(BlockEntityL2);\n","import { chakra } from '@chakra-ui/react';\nimport _omit from 'lodash/omit';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nimport * as TxEntity from './TxEntity';\n\nconst feature = config.features.optimisticRollup.isEnabled ? config.features.optimisticRollup : config.features.zkEvmRollup;\n\nconst TxEntityL1 = (props: TxEntity.EntityProps) => {\n  const partsProps = _omit(props, [ 'className', 'onClick' ]);\n  const linkProps = _omit(props, [ 'className' ]);\n\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  return (\n    <TxEntity.Container className={ props.className }>\n      <TxEntity.Icon { ...partsProps }/>\n      <TxEntity.Link\n        { ...linkProps }\n        isExternal\n        href={ feature.L1BaseUrl + route({ pathname: '/tx/[hash]', query: { hash: props.hash } }) }\n      >\n        <TxEntity.Content { ...partsProps }/>\n      </TxEntity.Link>\n      <TxEntity.Copy { ...partsProps }/>\n    </TxEntity.Container>\n  );\n};\n\nexport default chakra(TxEntityL1);\n","import {\n  useMediaQuery\n} from \"./chunk-MG6WC47T.mjs\";\n\n// src/visibility.tsx\nfunction Visibility(props) {\n  const { breakpoint, hide, children, ssr } = props;\n  const [show] = useMediaQuery(breakpoint, { ssr });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n}\n\nexport {\n  Visibility\n};\n","import {\n  Visibility\n} from \"./chunk-DZU5YH7Z.mjs\";\nimport {\n  useQuery\n} from \"./chunk-R3K6W4OF.mjs\";\n\n// src/show.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction Show(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ jsx(Visibility, { breakpoint: query, ssr, children });\n}\nShow.displayName = \"Show\";\n\nexport {\n  Show\n};\n","// src/media-query.tsx\nimport { useTheme } from \"@chakra-ui/system\";\nvar getBreakpoint = (theme, value) => {\n  var _a, _b;\n  return (_b = (_a = theme == null ? void 0 : theme.breakpoints) == null ? void 0 : _a[value]) != null ? _b : value;\n};\nfunction useQuery(props) {\n  const { breakpoint = \"\", below, above } = props;\n  const theme = useTheme();\n  const bpBelow = getBreakpoint(theme, below);\n  const bpAbove = getBreakpoint(theme, above);\n  let query = breakpoint;\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`;\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`;\n  }\n  return query;\n}\n\nexport {\n  useQuery\n};\n","import {\n  Visibility\n} from \"./chunk-DZU5YH7Z.mjs\";\nimport {\n  useQuery\n} from \"./chunk-R3K6W4OF.mjs\";\n\n// src/hide.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction Hide(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ jsx(Visibility, { breakpoint: query, hide: true, ssr, children });\n}\nHide.displayName = \"Hide\";\n\nexport {\n  Hide\n};\n","// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, layout, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(TableStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.table,\n    {\n      ref,\n      __css: { tableLayout: layout, ...styles.table },\n      className: cx(\"chakra-table\", className),\n      ...tableProps\n    }\n  ) });\n});\nTable.displayName = \"Table\";\n\nexport {\n  useTableStyles,\n  Table\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/td.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Td = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.td,\n      {\n        ...rest,\n        ref,\n        __css: styles.td,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Td\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tbody.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tbody = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tbody, { ...props, ref, __css: styles.tbody });\n});\n\nexport {\n  Tbody\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/thead.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Thead = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.thead, { ...props, ref, __css: styles.thead });\n});\n\nexport {\n  Thead\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tr.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tr = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tr, { ...props, ref, __css: styles.tr });\n});\n\nexport {\n  Tr\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/th.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Th = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.th,\n      {\n        ...rest,\n        ref,\n        __css: styles.th,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Th\n};\n"],"names":["L2_DEPOSIT_ITEM","l1_block_number","l1_block_timestamp","l1_tx_hash","TX_HASH","l1_tx_origin","ADDRESS_HASH","l2_tx_gas_limit","l2_tx_hash","L2_WITHDRAWAL_ITEM","challenge_period_end","from","ADDRESS_PARAMS","l2_timestamp","msg_nonce","msg_nonce_version","status","L2_TXN_BATCHES_ITEM","epoch_number","l1_timestamp","l1_tx_hashes","l2_block_number","tx_count","L2_OUTPUT_ROOTS_ITEM","l2_output_index","output_root","TX","timestamp","fee","type","value","gas_limit","block","method","confirmations","exchange_rate","to","tx_burnt_fee","max_fee_per_gas","result","hash","gas_price","priority_fee","base_fee_per_gas","token_transfers","tx_types","gas_used","created_contract","position","nonce","has_error_in_internal_txs","actions","decoded_input","token_transfers_overflow","raw_input","max_priority_fee_per_gas","revert_reason","confirmation_duration","tx_tag","TX_ZKEVM_L2","zkevm_batch_number","zkevm_sequence_hash","zkevm_status","zkevm_verify_hash","TX_RAW_TRACE","generateListStub","stub","num","rest","items","Array","fill","feature","config","features","optimisticRollup","l2OutputRoots_OutputRootsListItem","item","isLoading","param","timeAgo","dayjs","fromNow","isEnabled","jsx_runtime","jsxs","ListItemMobileGrid","Container","jsx","Label","Value","fontWeight","color","Skeleton","isLoaded","display","span","BlockEntityL2","number","fontSize","lineHeight","noIcon","py","TxEntityL1","Flex","overflow","whiteSpace","alignItems","w","justifyContent","HashStringShortenDynamic","CopyToClipboard","text","l2OutputRoots_OutputRootsTableItem","Tr","Td","verticalAlign","pr","ml","l2OutputRoots_OutputRootsTable","top","Table","variant","size","minW","Thead","Th","width","Tbody","map","index","OutputRootsTableItem","Number","String","pages_L2OutputRoots","countersQuery","data","isError","isPlaceholderData","pagination","useQueryWithPages","resourceName","options","placeholderData","next_page_params","items_count","useApiQuery","queryOptions","content","Fragment","Show","below","ssr","OutputRootsListItem","Hide","OutputRootsTable","isVisible","length","flexWrap","Text","toLocaleString","actionBar","StickyPaginationWithText","PageTitle","title","withTextAd","DataListDisplay","emptyText","__webpack_exports__","Z","chakra","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","DataFetchAlert","className","filterProps","hasActiveFilters","Box","EmptySearchResult","emptyFilteredText","flexDirection","IconSvg","name","boxSize","Heading","as","marginBottom","base","sm","align","isAnimated","children","Grid","motion","div","initial","opacity","scale","animate","transitionDuration","transitionTimingFunction","rowGap","columnGap","gridTemplateColumns","paddingY","borderColor","borderTopWidth","_last","borderBottomWidth","my","justifySelf","GridItem","mb","lg","ActionBar","mt","Pagination","linkProps","_omit","partsProps","BlockEntity","zkEvmRollup","TxEntity","isExternal","href","L1BaseUrl","route","pathname","query","Visibility","breakpoint","hide","show","_chunk_MG6WC47T_mjs__WEBPACK_IMPORTED_MODULE_0__","a","_chunk_R3K6W4OF_mjs__WEBPACK_IMPORTED_MODULE_1__","_chunk_DZU5YH7Z_mjs__WEBPACK_IMPORTED_MODULE_2__","E","displayName","getBreakpoint","theme","_a","_b","breakpoints","useQuery","above","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_0__","F","bpBelow","bpAbove","TableStylesProvider","useTableStyles","_chakra_ui_react_context__WEBPACK_IMPORTED_MODULE_1__","k","errorMessage","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_2__","G","ref","styles","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__","jC","layout","tableProps","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__","Lr","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__","m","table","__css","tableLayout","_chakra_ui_shared_utils__WEBPACK_IMPORTED_MODULE_6__","cx","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__","isNumeric","_chunk_B3MS3L3D_mjs__WEBPACK_IMPORTED_MODULE_2__","p","td","tbody","thead","tr","th"],"sourceRoot":""}