{"version":3,"file":"static/chunks/5342-ac82c2a78b27b3eb.js","mappings":"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","sources":["webpack://_N_E/./lib/downloadBlob.ts","webpack://_N_E/./lib/saveAsCSV.ts","webpack://_N_E/./ui/shared/chart/ChartAxis.tsx","webpack://_N_E/./ui/shared/chart/ChartGridLine.tsx","webpack://_N_E/./ui/shared/chart/ChartSelectionX.tsx","webpack://_N_E/./ui/shared/chart/ChartWidgetGraph.tsx","webpack://_N_E/./ui/shared/chart/FullscreenChartModal.tsx","webpack://_N_E/./ui/shared/chart/ChartWidget.tsx","webpack://_N_E/<anon>"],"sourcesContent":["export default function downloadBlob(blob: Blob, filename: string) {\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.setAttribute('href', url);\n  link.setAttribute('download', filename);\n  link.click();\n\n  link.remove();\n  URL.revokeObjectURL(url);\n}\n","import { unparse } from 'papaparse';\n\nimport downloadBlob from 'lib/downloadBlob';\n\nexport default function saveAsCSV(headerRows: Array<string>, dataRows: Array<Array<string>>, filename: string) {\n  const csv = unparse([\n    headerRows,\n    ...dataRows,\n  ]);\n\n  const blob = new Blob([ csv ], { type: 'text/csv;charset=utf-8;' });\n\n  downloadBlob(blob, filename);\n}\n","import { useColorModeValue, useToken } from '@chakra-ui/react';\nimport * as d3 from 'd3';\nimport React from 'react';\n\ninterface Props extends Omit<React.SVGProps<SVGGElement>, 'scale'> {\n  type: 'left' | 'bottom';\n  scale: d3.ScaleTime<number, number> | d3.ScaleLinear<number, number>;\n  disableAnimation?: boolean;\n  ticks: number;\n  tickFormatGenerator?: (axis: d3.Axis<d3.NumberValue>) => (domainValue: d3.AxisDomain, index: number) => string;\n  anchorEl?: SVGRectElement | null;\n}\n\nconst ChartAxis = ({ type, scale, ticks, tickFormatGenerator, disableAnimation, anchorEl, ...props }: Props) => {\n  const ref = React.useRef<SVGGElement>(null);\n\n  const textColorToken = useColorModeValue('blackAlpha.600', 'whiteAlpha.500');\n  const textColor = useToken('colors', textColorToken);\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const axisGenerator = type === 'left' ? d3.axisLeft : d3.axisBottom;\n    const axis = axisGenerator(scale).ticks(ticks);\n\n    if (tickFormatGenerator) {\n      axis.tickFormat(tickFormatGenerator(axis));\n    }\n\n    const axisGroup = d3.select(ref.current);\n\n    if (disableAnimation) {\n      axisGroup.call(axis);\n    } else {\n      axisGroup.transition().duration(750).ease(d3.easeLinear).call(axis);\n    }\n    axisGroup.select('.domain').remove();\n    axisGroup.selectAll('line').remove();\n    axisGroup.selectAll('text')\n      .attr('opacity', 1)\n      .attr('color', textColor)\n      .attr('font-size', '0.75rem');\n  }, [ scale, ticks, tickFormatGenerator, disableAnimation, type, textColor ]);\n\n  React.useEffect(() => {\n    if (!anchorEl) {\n      return;\n    }\n\n    const anchorD3 = d3.select(anchorEl);\n\n    anchorD3\n      .on('mouseout.axisX', () => {\n        d3.select(ref.current)\n          .selectAll('text')\n          .style('font-weight', 'normal');\n      })\n      .on('mousemove.axisX', (event) => {\n        const [ x ] = d3.pointer(event, anchorEl);\n        const xDate = scale.invert(x);\n        const textElements = d3.select(ref.current).selectAll('text');\n        const data = textElements.data();\n        const index = d3.bisector((d) => d).left(data, xDate);\n        textElements\n          .style('font-weight', (d, i) => i === index - 1 ? 'bold' : 'normal');\n      });\n\n    return () => {\n      anchorD3.on('mouseout.axisX mousemove.axisX', null);\n    };\n  }, [ anchorEl, scale ]);\n\n  return <g ref={ ref } { ...props }/>;\n};\n\nexport default React.memo(ChartAxis);\n","import { useToken } from '@chakra-ui/react';\nimport * as d3 from 'd3';\nimport React from 'react';\n\ninterface Props extends Omit<React.SVGProps<SVGGElement>, 'scale'> {\n  type: 'vertical' | 'horizontal';\n  scale: d3.ScaleTime<number, number> | d3.ScaleLinear<number, number>;\n  disableAnimation?: boolean;\n  size: number;\n  ticks: number;\n}\n\nconst ChartGridLine = ({ type, scale, ticks, size, disableAnimation, ...props }: Props) => {\n  const ref = React.useRef<SVGGElement>(null);\n\n  const strokeColor = useToken('colors', 'divider');\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const axisGenerator = type === 'vertical' ? d3.axisBottom : d3.axisLeft;\n    const axis = axisGenerator(scale).ticks(ticks).tickSize(-size);\n\n    const gridGroup = d3.select(ref.current);\n    if (disableAnimation) {\n      gridGroup.call(axis);\n    } else {\n      gridGroup.transition().duration(750).ease(d3.easeLinear).call(axis);\n    }\n    gridGroup.select('.domain').remove();\n    gridGroup.selectAll('text').remove();\n    gridGroup.selectAll('line').attr('stroke', strokeColor);\n  }, [ scale, ticks, size, disableAnimation, type, strokeColor ]);\n\n  return <g ref={ ref } { ...props }/>;\n};\n\nexport default React.memo(ChartGridLine);\n","import { useToken } from '@chakra-ui/react';\nimport * as d3 from 'd3';\nimport React from 'react';\n\nimport type { TimeChartData, TimeChartItem } from 'ui/shared/chart/types';\n\nimport dayjs from 'lib/date/dayjs';\n\nconst SELECTION_THRESHOLD = 2;\n\ninterface Props {\n  height: number;\n  anchorEl?: SVGRectElement | null;\n  scale: d3.ScaleTime<number, number>;\n  data: TimeChartData;\n  onSelect: (range: [Date, Date]) => void;\n}\n\nconst ChartSelectionX = ({ anchorEl, height, scale, data, onSelect }: Props) => {\n  const borderColor = useToken('colors', 'blue.200');\n\n  const ref = React.useRef(null);\n  const isActive = React.useRef(false);\n  const startX = React.useRef<number>();\n  const endX = React.useRef<number>();\n\n  const getIndexByX = React.useCallback((x: number) => {\n    const xDate = scale.invert(x);\n    const bisectDate = d3.bisector<TimeChartItem, unknown>((d) => d.date).left;\n    return bisectDate(data[0].items, xDate, 1);\n  }, [ data, scale ]);\n\n  const drawSelection = React.useCallback((x0: number, x1: number) => {\n    const diffX = x1 - x0;\n\n    d3.select(ref.current)\n      .attr('opacity', 1);\n\n    d3.select(ref.current)\n      .select('.ChartSelectionX__line_left')\n      .attr('x1', x0)\n      .attr('x2', x0);\n\n    d3.select(ref.current)\n      .select('.ChartSelectionX__line_right')\n      .attr('x1', x1)\n      .attr('x2', x1);\n\n    d3.select(ref.current)\n      .select('.ChartSelectionX__rect')\n      .attr('x', diffX > 0 ? x0 : diffX + x0)\n      .attr('width', Math.abs(diffX));\n  }, []);\n\n  const handleSelect = React.useCallback((x0: number, x1: number) => {\n    const startDate = scale.invert(x0);\n    const endDate = scale.invert(x1);\n\n    if (Math.abs(dayjs(startDate).diff(endDate, 'day')) > SELECTION_THRESHOLD) {\n      onSelect([ dayjs.min(dayjs(startDate), dayjs(endDate)).toDate(), dayjs.max(dayjs(startDate), dayjs(endDate)).toDate() ]);\n    }\n  }, [ onSelect, scale ]);\n\n  const cleanUp = React.useCallback(() => {\n    isActive.current = false;\n    startX.current = undefined;\n    endX.current = undefined;\n    d3.select(ref.current).attr('opacity', 0);\n  }, [ ]);\n\n  const handelMouseUp = React.useCallback(() => {\n    if (!isActive.current) {\n      return;\n    }\n\n    if (startX.current && endX.current) {\n      handleSelect(startX.current, endX.current);\n    }\n\n    cleanUp();\n  }, [ cleanUp, handleSelect ]);\n\n  React.useEffect(() => {\n    if (!anchorEl) {\n      return;\n    }\n\n    const anchorD3 = d3.select(anchorEl);\n\n    anchorD3\n      .on('mousedown.selectionX', (event: MouseEvent) => {\n        const [ x ] = d3.pointer(event, anchorEl);\n        isActive.current = true;\n        startX.current = x;\n      })\n      .on('mousemove.selectionX', (event: MouseEvent) => {\n        if (isActive.current) {\n          const [ x ] = d3.pointer(event, anchorEl);\n          startX.current && drawSelection(startX.current, x);\n          endX.current = x;\n        }\n      })\n      .on('mouseup.selectionX', handelMouseUp)\n      .on('touchstart.selectionX', (event: TouchEvent) => {\n        const pointers = d3.pointers(event, anchorEl);\n        isActive.current = pointers.length === 2;\n      })\n      .on('touchmove.selectionX', (event: TouchEvent) => {\n        if (isActive.current) {\n          const pointers = d3.pointers(event, anchorEl);\n\n          if (pointers.length === 2 && Math.abs(pointers[0][0] - pointers[1][0]) > 5) {\n            drawSelection(pointers[0][0], pointers[1][0]);\n\n            startX.current = pointers[0][0];\n            endX.current = pointers[1][0];\n          }\n        }\n      })\n      .on('touchend.selectionX', handelMouseUp);\n\n    d3.select('body').on('mouseup.selectionX', function(event) {\n      const isOutside = startX.current !== undefined && event.target !== anchorD3.node();\n      if (isOutside) {\n        handelMouseUp();\n      }\n    });\n\n    return () => {\n      anchorD3.on('.selectionX', null);\n      d3.select('body').on('.selectionX', null);\n    };\n  }, [ anchorEl, cleanUp, drawSelection, getIndexByX, handelMouseUp, handleSelect ]);\n\n  return (\n    <g className=\"ChartSelectionX\" ref={ ref } opacity={ 0 }>\n      <rect className=\"ChartSelectionX__rect\" width={ 0 } height={ height } fill=\"rgba(66, 153, 225, 0.1)\"/>\n      <line className=\"ChartSelectionX__line ChartSelectionX__line_left\" x1={ 0 } x2={ 0 } y1={ 0 } y2={ height } stroke={ borderColor }/>\n      <line className=\"ChartSelectionX__line ChartSelectionX__line_right\" x1={ 0 } x2={ 0 } y1={ 0 } y2={ height } stroke={ borderColor }/>\n    </g>\n  );\n};\n\nexport default React.memo(ChartSelectionX);\n","import { useToken } from '@chakra-ui/react';\nimport * as d3 from 'd3';\nimport React from 'react';\n\nimport type { ChartMargin, TimeChartItem } from 'ui/shared/chart/types';\n\nimport dayjs from 'lib/date/dayjs';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport ChartArea from 'ui/shared/chart/ChartArea';\nimport ChartAxis from 'ui/shared/chart/ChartAxis';\nimport ChartGridLine from 'ui/shared/chart/ChartGridLine';\nimport ChartLine from 'ui/shared/chart/ChartLine';\nimport ChartOverlay from 'ui/shared/chart/ChartOverlay';\nimport ChartSelectionX from 'ui/shared/chart/ChartSelectionX';\nimport ChartTooltip from 'ui/shared/chart/ChartTooltip';\nimport useTimeChartController from 'ui/shared/chart/useTimeChartController';\n\ninterface Props {\n  isEnlarged?: boolean;\n  title: string;\n  units?: string;\n  items: Array<TimeChartItem>;\n  onZoom: () => void;\n  isZoomResetInitial: boolean;\n  margin?: ChartMargin;\n}\n\n// temporarily turn off the data aggregation, we need a better algorithm for that\nconst MAX_SHOW_ITEMS = 100_000_000_000;\nconst DEFAULT_CHART_MARGIN = { bottom: 20, left: 40, right: 20, top: 10 };\n\nconst ChartWidgetGraph = ({ isEnlarged, items, onZoom, isZoomResetInitial, title, margin: marginProps, units }: Props) => {\n  const isMobile = useIsMobile();\n  // const color = useToken('colors', 'blue.200');\n  const color = useToken('colors', '#e0a532');\n  const chartId = `chart-${ title.split(' ').join('') }-${ isEnlarged ? 'fullscreen' : 'small' }`;\n\n  const overlayRef = React.useRef<SVGRectElement>(null);\n\n  const [ range, setRange ] = React.useState<[ Date, Date ]>([ items[0].date, items[items.length - 1].date ]);\n\n  const rangedItems = React.useMemo(() =>\n    items.filter((item) => item.date >= range[0] && item.date <= range[1]),\n  [ items, range ]);\n  const isGroupedValues = rangedItems.length > MAX_SHOW_ITEMS;\n\n  const displayedData = React.useMemo(() => {\n    if (isGroupedValues) {\n      return groupChartItemsByWeekNumber(rangedItems);\n    } else {\n      return rangedItems;\n    }\n  }, [ isGroupedValues, rangedItems ]);\n\n  const chartData = React.useMemo(() => ([ { items: displayedData, name: 'Value', color, units } ]), [ color, displayedData, units ]);\n\n  const margin: ChartMargin = React.useMemo(() => ({ ...DEFAULT_CHART_MARGIN, ...marginProps }), [ marginProps ]);\n  const axesConfig = React.useMemo(() => {\n    return {\n      x: {\n        ticks: isEnlarged ? 8 : 4,\n      },\n      y: {\n        ticks: isEnlarged ? 6 : 3,\n        nice: true,\n      },\n    };\n  }, [ isEnlarged ]);\n\n  const {\n    ref,\n    rect,\n    innerWidth,\n    innerHeight,\n    chartMargin,\n    axis,\n  } = useTimeChartController({\n    data: chartData,\n    margin,\n    axesConfig,\n  });\n\n  const handleRangeSelect = React.useCallback((nextRange: [ Date, Date ]) => {\n    setRange([ nextRange[0], nextRange[1] ]);\n    onZoom();\n  }, [ onZoom ]);\n\n  React.useEffect(() => {\n    if (isZoomResetInitial) {\n      setRange([ items[0].date, items[items.length - 1].date ]);\n    }\n  }, [ isZoomResetInitial, items ]);\n\n  return (\n    <svg width=\"100%\" height=\"100%\" ref={ ref } cursor=\"pointer\" id={ chartId } opacity={ rect ? 1 : 0 }>\n\n      <g transform={ `translate(${ chartMargin?.left || 0 },${ chartMargin?.top || 0 })` }>\n        <ChartGridLine\n          type=\"horizontal\"\n          scale={ axis.y.scale }\n          ticks={ axesConfig.y.ticks }\n          size={ innerWidth }\n          disableAnimation\n        />\n\n        <ChartArea\n          id={ chartId }\n          data={ displayedData }\n          color={ color }\n          xScale={ axis.x.scale }\n          yScale={ axis.y.scale }\n        />\n\n        <ChartLine\n          data={ displayedData }\n          xScale={ axis.x.scale }\n          yScale={ axis.y.scale }\n          stroke={ color }\n          animation=\"none\"\n          strokeWidth={ isMobile ? 1 : 2 }\n        />\n\n        <ChartAxis\n          type=\"left\"\n          scale={ axis.y.scale }\n          ticks={ axesConfig.y.ticks }\n          tickFormatGenerator={ axis.y.tickFormatter }\n          disableAnimation\n        />\n\n        <ChartAxis\n          type=\"bottom\"\n          scale={ axis.x.scale }\n          transform={ `translate(0, ${ innerHeight })` }\n          ticks={ axesConfig.x.ticks }\n          anchorEl={ overlayRef.current }\n          tickFormatGenerator={ axis.x.tickFormatter }\n          disableAnimation\n        />\n\n        <ChartOverlay ref={ overlayRef } width={ innerWidth } height={ innerHeight }>\n          <ChartTooltip\n            anchorEl={ overlayRef.current }\n            width={ innerWidth }\n            tooltipWidth={ isGroupedValues ? 280 : 200 }\n            height={ innerHeight }\n            xScale={ axis.x.scale }\n            yScale={ axis.y.scale }\n            data={ chartData }\n          />\n\n          <ChartSelectionX\n            anchorEl={ overlayRef.current }\n            height={ innerHeight }\n            scale={ axis.x.scale }\n            data={ chartData }\n            onSelect={ handleRangeSelect }\n          />\n        </ChartOverlay>\n      </g>\n    </svg>\n  );\n};\n\nexport default React.memo(ChartWidgetGraph);\n\nfunction groupChartItemsByWeekNumber(items: Array<TimeChartItem>): Array<TimeChartItem> {\n  return d3.rollups(items,\n    (group) => ({\n      date: group[0].date,\n      value: d3.sum(group, (d) => d.value),\n      dateLabel: `${ d3.timeFormat('%e %b %Y')(group[0].date) } – ${ d3.timeFormat('%e %b %Y')(group[group.length - 1].date) }`,\n    }),\n    (t) => `${ dayjs(t.date).week() } / ${ dayjs(t.date).year() }`,\n  ).map(([ , v ]) => v);\n}\n","import { Box, Button, Grid, Heading, Modal, ModalBody, ModalCloseButton, ModalContent, ModalOverlay, Text } from '@chakra-ui/react';\nimport React, { useCallback } from 'react';\n\nimport type { TimeChartItem } from './types';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport ChartWidgetGraph from './ChartWidgetGraph';\n\ntype Props = {\n  isOpen: boolean;\n  title: string;\n  description?: string;\n  items: Array<TimeChartItem>;\n  onClose: () => void;\n  units?: string;\n}\n\nconst FullscreenChartModal = ({\n  isOpen,\n  title,\n  description,\n  items,\n  units,\n  onClose,\n}: Props) => {\n  const [ isZoomResetInitial, setIsZoomResetInitial ] = React.useState(true);\n\n  const handleZoom = useCallback(() => {\n    setIsZoomResetInitial(false);\n  }, []);\n\n  const handleZoomResetClick = useCallback(() => {\n    setIsZoomResetInitial(true);\n  }, []);\n\n  return (\n    <Modal\n      isOpen={ isOpen }\n      onClose={ onClose }\n      size=\"full\"\n      isCentered\n    >\n      <ModalOverlay/>\n\n      <ModalContent>\n\n        <Box\n          mb={ 1 }\n        >\n          <Grid\n            gridColumnGap={ 2 }\n          >\n            <Heading\n              mb={ 1 }\n              size={{ base: 'xs', sm: 'md' }}\n            >\n              { title }\n            </Heading>\n\n            { description && (\n              <Text\n                gridColumn={ 1 }\n                as=\"p\"\n                variant=\"secondary\"\n                fontSize=\"xs\"\n              >\n                { description }\n              </Text>\n            ) }\n\n            { !isZoomResetInitial && (\n              <Button\n                leftIcon={ <IconSvg name=\"repeat_arrow\" w={ 4 } h={ 4 }/> }\n                colorScheme=\"blue\"\n                gridColumn={ 2 }\n                justifySelf=\"end\"\n                alignSelf=\"top\"\n                gridRow=\"1/3\"\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={ handleZoomResetClick }\n              >\n                Reset zoom\n              </Button>\n            ) }\n          </Grid>\n        </Box>\n\n        <ModalCloseButton/>\n\n        <ModalBody\n          h=\"100%\"\n        >\n          <ChartWidgetGraph\n            margin={{ bottom: 60 }}\n            isEnlarged\n            items={ items }\n            units={ units }\n            onZoom={ handleZoom }\n            isZoomResetInitial={ isZoomResetInitial }\n            title={ title }\n          />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default FullscreenChartModal;\n","import {\n  Box,\n  Center,\n  chakra,\n  Flex,\n  IconButton, Link,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Skeleton,\n  Text,\n  Tooltip,\n  useColorModeValue,\n  VisuallyHidden,\n} from '@chakra-ui/react';\nimport domToImage from 'dom-to-image';\nimport React, { useRef, useCallback, useState } from 'react';\n\nimport type { TimeChartItem } from './types';\n\nimport dayjs from 'lib/date/dayjs';\nimport { apos } from 'lib/html-entities';\nimport saveAsCSV from 'lib/saveAsCSV';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport ChartWidgetGraph from './ChartWidgetGraph';\nimport FullscreenChartModal from './FullscreenChartModal';\n\nexport type Props = {\n  items?: Array<TimeChartItem>;\n  title: string;\n  description?: string;\n  units?: string;\n  isLoading: boolean;\n  className?: string;\n  isError: boolean;\n}\n\nconst DOWNLOAD_IMAGE_SCALE = 5;\n\nconst ChartWidget = ({ items, title, description, isLoading, className, isError, units }: Props) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [ isFullscreen, setIsFullscreen ] = useState(false);\n  const [ isZoomResetInitial, setIsZoomResetInitial ] = React.useState(true);\n\n  const pngBackgroundColor = useColorModeValue('white', 'black');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n\n  const handleZoom = useCallback(() => {\n    setIsZoomResetInitial(false);\n  }, []);\n\n  const handleZoomResetClick = useCallback(() => {\n    setIsZoomResetInitial(true);\n  }, []);\n\n  const showChartFullscreen = useCallback(() => {\n    setIsFullscreen(true);\n  }, []);\n\n  const clearFullscreenChart = useCallback(() => {\n    setIsFullscreen(false);\n  }, []);\n\n  const handleFileSaveClick = useCallback(() => {\n    // wait for context menu to close\n    setTimeout(() => {\n      if (ref.current) {\n        domToImage.toPng(ref.current,\n          {\n            quality: 100,\n            bgcolor: pngBackgroundColor,\n            width: ref.current.offsetWidth * DOWNLOAD_IMAGE_SCALE,\n            height: ref.current.offsetHeight * DOWNLOAD_IMAGE_SCALE,\n            filter: (node) => node.nodeName !== 'BUTTON',\n            style: {\n              borderColor: 'transparent',\n              transform: `scale(${ DOWNLOAD_IMAGE_SCALE })`,\n              'transform-origin': 'top left',\n            },\n          })\n          .then((dataUrl) => {\n            const link = document.createElement('a');\n            link.download = `${ title } (Blockscout chart).png`;\n            link.href = dataUrl;\n            link.click();\n            link.remove();\n          });\n      }\n    }, 100);\n  }, [ pngBackgroundColor, title ]);\n\n  const handleSVGSavingClick = useCallback(() => {\n    if (items) {\n      const headerRows = [\n        'Date', 'Value',\n      ];\n      const dataRows = items.map((item) => [\n        dayjs(item.date).format('YYYY-MM-DD'), String(item.value),\n      ]);\n\n      saveAsCSV(headerRows, dataRows, `${ title } (Blockscout stats)`);\n    }\n  }, [ items, title ]);\n\n  const hasItems = items && items.length > 2;\n\n  const content = (() => {\n    if (isError) {\n      return (\n        <Flex\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          flexGrow={ 1 }\n          py={ 4 }\n        >\n          <Text\n            variant=\"secondary\"\n            fontSize=\"sm\"\n            textAlign=\"center\"\n          >\n            { `The data didn${ apos }t load. Please, ` }\n            <Link href={ window.document.location.href }>try to reload the page.</Link>\n          </Text>\n        </Flex>\n      );\n    }\n\n    if (isLoading) {\n      return <Skeleton flexGrow={ 1 } w=\"100%\"/>;\n    }\n\n    if (!hasItems) {\n      return (\n        <Center flexGrow={ 1 }>\n          <Text variant=\"secondary\" fontSize=\"sm\">No data</Text>\n        </Center>\n      );\n    }\n\n    return (\n      <Box flexGrow={ 1 } maxW=\"100%\">\n        <ChartWidgetGraph\n          items={ items }\n          onZoom={ handleZoom }\n          isZoomResetInitial={ isZoomResetInitial }\n          title={ title }\n          units={ units }\n        />\n      </Box>\n    );\n  })();\n\n  return (\n    <>\n      <Flex\n        height=\"100%\"\n        ref={ ref }\n        flexDir=\"column\"\n        padding={{ base: 3, lg: 4 }}\n        borderRadius=\"md\"\n        border=\"1px\"\n        borderColor={ borderColor }\n        className={ className }\n      >\n        <Flex columnGap={ 6 } mb={ 1 } alignItems=\"flex-start\">\n          <Flex flexGrow={ 1 } flexDir=\"column\" alignItems=\"flex-start\">\n            <Skeleton\n              isLoaded={ !isLoading }\n              fontWeight={ 600 }\n              size={{ base: 'xs', lg: 'sm' }}\n            >\n              { title }\n            </Skeleton>\n\n            { description && (\n              <Skeleton\n                isLoaded={ !isLoading }\n                color=\"text_secondary\"\n                fontSize=\"xs\"\n                mt={ 1 }\n              >\n                <span>{ description }</span>\n              </Skeleton>\n            ) }\n          </Flex>\n\n          <Flex ml=\"auto\" columnGap={ 2 }>\n            <Tooltip label=\"Reset zoom\">\n              <IconButton\n                hidden={ isZoomResetInitial }\n                aria-label=\"Reset zoom\"\n                colorScheme=\"blue\"\n                w={ 9 }\n                h={ 8 }\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={ handleZoomResetClick }\n                icon={ <IconSvg name=\"repeat_arrow\" w={ 4 } h={ 4 }/> }\n              />\n            </Tooltip>\n\n            { hasItems && (\n              <Menu>\n                <Skeleton isLoaded={ !isLoading } borderRadius=\"base\">\n                  <MenuButton\n                    w=\"36px\"\n                    h=\"32px\"\n                    icon={ <IconSvg name=\"vertical_dots\" w={ 4 } h={ 4 }/> }\n                    colorScheme=\"gray\"\n                    variant=\"ghost\"\n                    as={ IconButton }\n                  >\n                    <VisuallyHidden>\n                      Open chart options menu\n                    </VisuallyHidden>\n                  </MenuButton>\n                </Skeleton>\n                <MenuList>\n                  <MenuItem\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    onClick={ showChartFullscreen }\n                  >\n                    <IconSvg name=\"scope\" boxSize={ 5 } mr={ 3 }/>\n                  View fullscreen\n                  </MenuItem>\n\n                  <MenuItem\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    onClick={ handleFileSaveClick }\n                  >\n                    <IconSvg name=\"files/image\" boxSize={ 5 } mr={ 3 }/>\n                  Save as PNG\n                  </MenuItem>\n\n                  <MenuItem\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    onClick={ handleSVGSavingClick }\n                  >\n                    <IconSvg name=\"files/csv\" boxSize={ 5 } mr={ 3 }/>\n                  Save as CSV\n                  </MenuItem>\n                </MenuList>\n              </Menu>\n            ) }\n          </Flex>\n        </Flex>\n\n        { content }\n      </Flex>\n\n      { hasItems && (\n        <FullscreenChartModal\n          isOpen={ isFullscreen }\n          items={ items }\n          title={ title }\n          description={ description }\n          onClose={ clearFullscreenChart }\n          units={ units }\n        />\n      ) }\n    </>\n  );\n};\n\nexport default React.memo(chakra(ChartWidget));\n"],"names":["downloadBlob","blob","filename","url","URL","createObjectURL","link","document","createElement","setAttribute","click","remove","revokeObjectURL","chart_ChartAxis","React","type","scale","ticks","tickFormatGenerator","disableAnimation","anchorEl","props","param","ref","textColorToken","useColorModeValue","textColor","useToken","current","axisGenerator","d3","axis","tickFormat","axisGroup","call","transition","duration","ease","select","selectAll","attr","anchorD3","on","style","x","event","xDate","invert","textElements","data","index","d","left","i","jsx_runtime","jsx","g","chart_ChartGridLine","size","strokeColor","tickSize","gridGroup","chart_ChartSelectionX","height","onSelect","borderColor","isActive","startX","endX","getIndexByX","bisectDate","date","items","drawSelection","x0","x1","diffX","Math","abs","handleSelect","startDate","endDate","dayjs","diff","min","toDate","max","cleanUp","undefined","handelMouseUp","pointers","length","isOutside","target","node","jsxs","className","opacity","rect","width","fill","line","x2","y1","y2","stroke","DEFAULT_CHART_MARGIN","bottom","right","top","chart_ChartWidgetGraph","isEnlarged","onZoom","isZoomResetInitial","title","margin","marginProps","units","isMobile","useIsMobile","color","chartId","split","join","concat","overlayRef","range","setRange","rangedItems","filter","item","isGroupedValues","displayedData","group","value","dateLabel","t","week","year","map","v","chartData","name","axesConfig","y","nice","innerWidth","innerHeight","chartMargin","useTimeChartController","handleRangeSelect","nextRange","svg","cursor","id","transform","ChartGridLine","ChartArea","xScale","yScale","ChartLine","animation","strokeWidth","ChartAxis","tickFormatter","ChartOverlay","ChartTooltip","tooltipWidth","ChartSelectionX","chart_FullscreenChartModal","isOpen","description","onClose","setIsZoomResetInitial","handleZoom","useCallback","handleZoomResetClick","Modal","isCentered","ModalOverlay","ModalContent","Box","mb","Grid","gridColumnGap","Heading","base","sm","Text","gridColumn","as","variant","fontSize","Button","leftIcon","IconSvg","w","h","colorScheme","justifySelf","alignSelf","gridRow","onClick","ModalCloseButton","ModalBody","ChartWidgetGraph","chart_ChartWidget","chakra","isLoading","isError","useRef","isFullscreen","setIsFullscreen","useState","pngBackgroundColor","showChartFullscreen","clearFullscreenChart","handleFileSaveClick","setTimeout","domToImage","quality","bgcolor","offsetWidth","offsetHeight","nodeName","then","download","href","dataUrl","handleSVGSavingClick","dataRows","format","String","saveAsCSV","headerRows","csv","unparse","Blob","hasItems","content","Flex","alignItems","justifyContent","flexGrow","py","textAlign","apos","Link","window","location","Skeleton","maxW","Center","Fragment","flexDir","padding","lg","borderRadius","border","columnGap","isLoaded","fontWeight","mt","span","ml","Tooltip","label","IconButton","hidden","aria-label","icon","Menu","MenuButton","VisuallyHidden","MenuList","MenuItem","display","boxSize","mr","FullscreenChartModal"],"sourceRoot":""}