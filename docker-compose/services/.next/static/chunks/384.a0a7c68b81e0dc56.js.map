{"version":3,"file":"static/chunks/384.a0a7c68b81e0dc56.js","mappings":"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","sources":["webpack://_N_E/./lib/getCurrencyValue.ts","webpack://_N_E/./lib/getErrorMessage.ts","webpack://_N_E/./lib/hooks/usePreventFocusAfterModalClosing.tsx","webpack://_N_E/./lib/hooks/useRedirectForInvalidAuthToken.tsx","webpack://_N_E/./stubs/account.ts","webpack://_N_E/./stubs/tx.ts","webpack://_N_E/./ui/watchlist/WatchlistTable/WatchListAddressItem.tsx","webpack://_N_E/./ui/watchlist/WatchlistTable/WatchListItem.tsx","webpack://_N_E/./ui/watchlist/WatchlistTable/WatchListTableItem.tsx","webpack://_N_E/./ui/watchlist/WatchlistTable/WatchlistTable.tsx","webpack://_N_E/./ui/pages/Watchlist.tsx","webpack://_N_E/./ui/shared/AccountPageDescription.tsx","webpack://_N_E/./ui/shared/AddressInput.tsx","webpack://_N_E/./ui/shared/CheckboxInput.tsx","webpack://_N_E/./ui/shared/CurrencyValue.tsx","webpack://_N_E/./ui/shared/DataListDisplay.tsx","webpack://_N_E/./ui/shared/DeleteModal.tsx","webpack://_N_E/./ui/shared/EmptySearchResult.tsx","webpack://_N_E/./ui/shared/FormModal.tsx","webpack://_N_E/./ui/shared/FormSubmitAlert.tsx","webpack://_N_E/./ui/shared/InputPlaceholder.tsx","webpack://_N_E/./ui/shared/ListItemMobile/ListItemMobile.tsx","webpack://_N_E/./ui/shared/TableItemActionButtons.tsx","webpack://_N_E/./ui/shared/TagInput.tsx","webpack://_N_E/./ui/shared/chakra/Tag.tsx","webpack://_N_E/./ui/watchlist/AddressModal/AddressFormNotifications.tsx","webpack://_N_E/./ui/watchlist/AddressModal/AddressForm.tsx","webpack://_N_E/./ui/watchlist/AddressModal/AddressModal.tsx","webpack://_N_E/./ui/watchlist/DeleteAddressModal.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import BigNumber from 'bignumber.js';\n\nimport { ZERO } from 'lib/consts';\n\ninterface Params {\n  value: string;\n  exchangeRate?: string | null;\n  accuracy?: number;\n  accuracyUsd?: number;\n  decimals?: string | null;\n}\n\nexport default function getCurrencyValue({ value, accuracy, accuracyUsd, decimals, exchangeRate }: Params) {\n  const valueCurr = BigNumber(value).div(BigNumber(10 ** Number(decimals || '18')));\n  const valueResult = accuracy ? valueCurr.dp(accuracy).toFormat() : valueCurr.toFormat();\n\n  let usdResult: string | undefined;\n  let usdBn = ZERO;\n\n  if (exchangeRate) {\n    const exchangeRateBn = new BigNumber(exchangeRate);\n    usdBn = valueCurr.times(exchangeRateBn);\n    if (accuracyUsd && !usdBn.isEqualTo(0)) {\n      const usdBnDp = usdBn.dp(accuracyUsd);\n      usdResult = usdBnDp.isEqualTo(0) ? usdBn.precision(accuracyUsd).toFormat() : usdBnDp.toFormat();\n    } else {\n      usdResult = usdBn.toFormat();\n    }\n  }\n\n  return { valueStr: valueResult, usd: usdResult, usdBn };\n}\n","export default function getErrorMessage(error: Record<string, Array<string>> | undefined, field: string) {\n  return error?.[field]?.join(', ');\n}\n","import React from 'react';\n\n// prevent set focus on button when closing modal\nexport default function usePreventFocusAfterModalClosing() {\n  return React.useCallback((e: React.SyntheticEvent) => e.stopPropagation(), []);\n}\n","import * as Sentry from '@sentry/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport { resourceKey } from 'lib/api/resources';\nimport type { ResourceError } from 'lib/api/resources';\nimport * as cookies from 'lib/cookies';\nimport useLoginUrl from 'lib/hooks/useLoginUrl';\n\nexport default function useRedirectForInvalidAuthToken() {\n  const queryClient = useQueryClient();\n\n  const state = queryClient.getQueryState<unknown, ResourceError>([ resourceKey('user_info') ]);\n  const errorStatus = state?.error?.status;\n  const loginUrl = useLoginUrl();\n\n  React.useEffect(() => {\n    if (errorStatus === 401) {\n      const apiToken = cookies.get(cookies.NAMES.API_TOKEN);\n\n      if (apiToken && loginUrl) {\n        Sentry.captureException(new Error('Invalid API token'), { tags: { source: 'invalid_api_token' } });\n        window.location.assign(loginUrl);\n      }\n    }\n  }, [ errorStatus, loginUrl ]);\n}\n","import type { PublicTag, AddressTag, TransactionTag, ApiKey, CustomAbi, VerifiedAddress, TokenInfoApplication, WatchlistAddress } from 'types/api/account';\n\nimport { ADDRESS_PARAMS, ADDRESS_HASH } from './addressParams';\nimport { TX_HASH } from './tx';\n\nexport const PRIVATE_TAG_ADDRESS: AddressTag = {\n  address: ADDRESS_PARAMS,\n  address_hash: ADDRESS_HASH,\n  id: '4',\n  name: 'placeholder',\n};\n\nexport const PRIVATE_TAG_TX: TransactionTag = {\n  id: '1',\n  name: 'placeholder',\n  transaction_hash: TX_HASH,\n};\n\nexport const PUBLIC_TAG: PublicTag = {\n  additional_comment: 'my comment',\n  addresses: [ ADDRESS_HASH ],\n  addresses_with_info: [ ADDRESS_PARAMS ],\n  company: 'Blockscout',\n  email: 'john.doe@example.com',\n  full_name: 'name',\n  id: 1,\n  is_owner: true,\n  tags: 'placeholder',\n  website: 'example.com',\n};\n\nexport const WATCH_LIST_ITEM_WITH_TOKEN_INFO: WatchlistAddress = {\n  address: ADDRESS_PARAMS,\n  address_balance: '7072643779453701031672',\n  address_hash: ADDRESS_HASH,\n  exchange_rate: '0.00099052',\n  id: '18',\n  name: 'placeholder',\n  notification_methods: {\n    email: false,\n  },\n  notification_settings: {\n    'ERC-20': {\n      incoming: true,\n      outcoming: true,\n    },\n    'ERC-721': {\n      incoming: true,\n      outcoming: true,\n    },\n    'native': {\n      incoming: true,\n      outcoming: true,\n    },\n  },\n  tokens_count: 42,\n  tokens_fiat_value: '12345',\n  tokens_overflow: false,\n};\n\nexport const API_KEY: ApiKey = {\n  api_key: '9c3ecf44-a1ca-4ff1-b28e-329e8b65f652',\n  name: 'placeholder',\n};\n\nexport const CUSTOM_ABI: CustomAbi = {\n  abi: [\n    {\n      constant: false,\n      payable: false,\n      inputs: [ { name: 'target', type: 'address' } ],\n      name: 'unknownWriteMethod',\n      outputs: [ { name: 'result', type: 'address' } ],\n      stateMutability: 'nonpayable',\n      type: 'function',\n    },\n  ],\n  contract_address: ADDRESS_PARAMS,\n  contract_address_hash: ADDRESS_HASH,\n  id: '1',\n  name: 'placeholder',\n};\n\nexport const VERIFIED_ADDRESS: VerifiedAddress = {\n  userId: 'john.doe@gmail.com',\n  chainId: '5',\n  contractAddress: ADDRESS_HASH,\n  verifiedDate: '2022-11-11',\n  metadata: {\n    tokenName: 'Placeholder Token',\n    tokenSymbol: 'PLC',\n  },\n};\n\nexport const TOKEN_INFO_APPLICATION: TokenInfoApplication = {\n  id: '1',\n  tokenAddress: ADDRESS_HASH,\n  status: 'IN_PROCESS',\n  updatedAt: '2022-11-11 13:49:48.031453Z',\n  requesterName: 'John Doe',\n  requesterEmail: 'john.doe@gmail.com',\n  projectWebsite: 'http://example.com',\n  projectEmail: 'info@example.com',\n  iconUrl: 'https://example.com/100/100',\n  projectDescription: 'Hello!',\n  projectSector: 'DeFi',\n};\n","import type { RawTracesResponse } from 'types/api/rawTrace';\nimport type { Transaction } from 'types/api/transaction';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const TX_HASH = '0x3ed9d81e7c1001bdda1caa1dc62c0acbbe3d2c671cdc20dc1e65efdaa4186967';\n\nexport const TX: Transaction = {\n  timestamp: '2022-11-11T11:11:11.000000Z',\n  fee: {\n    type: 'actual',\n    value: '2100000000000000',\n  },\n  gas_limit: '21000',\n  block: 9004925,\n  status: 'ok',\n  method: 'placeholder',\n  confirmations: 71,\n  type: 0,\n  exchange_rate: '1828.71',\n  to: ADDRESS_PARAMS,\n  tx_burnt_fee: null,\n  max_fee_per_gas: null,\n  result: 'success',\n  hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  gas_price: '100000000000',\n  priority_fee: null,\n  base_fee_per_gas: '24',\n  from: ADDRESS_PARAMS,\n  token_transfers: null,\n  tx_types: [\n    'coin_transfer',\n  ],\n  gas_used: '21000',\n  created_contract: null,\n  position: 0,\n  nonce: 295929,\n  has_error_in_internal_txs: false,\n  actions: [],\n  decoded_input: null,\n  token_transfers_overflow: false,\n  raw_input: '0x',\n  value: '42000420000000000000',\n  max_priority_fee_per_gas: null,\n  revert_reason: null,\n  confirmation_duration: [\n    0,\n    14545,\n  ],\n  tx_tag: null,\n};\n\nexport const TX_ZKEVM_L2: Transaction = {\n  ...TX,\n  zkevm_batch_number: 12345,\n  zkevm_sequence_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  zkevm_status: 'Confirmed by Sequencer',\n  zkevm_verify_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n};\n\nexport const TX_RAW_TRACE: RawTracesResponse = [];\n","import { HStack, VStack, Flex, Skeleton, Text } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { WatchlistAddress } from 'types/api/account';\n\nimport config from 'configs/app';\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport { nbsp } from 'lib/html-entities';\nimport { currencyUnits } from 'lib/units';\nimport CurrencyValue from 'ui/shared/CurrencyValue';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport * as TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport IconSvg from 'ui/shared/IconSvg';\n\nconst WatchListAddressItem = ({ item, isLoading }: { item: WatchlistAddress; isLoading?: boolean }) => {\n  const nativeTokenData = React.useMemo(() => ({\n    name: config.chain.currency.name || '',\n    icon_url: '',\n    symbol: '',\n    address: '',\n    type: 'ERC-20' as const,\n  }), [ ]);\n\n  const { usdBn: usdNative } = getCurrencyValue({ value: item.address_balance, accuracy: 2, accuracyUsd: 2, exchangeRate: item.exchange_rate });\n\n  return (\n    <VStack spacing={ 3 } align=\"stretch\" fontWeight={ 500 }>\n      <AddressEntity\n        address={ item.address }\n        isLoading={ isLoading }\n        fontWeight=\"600\"\n        py=\"2px\"\n      />\n      <Flex fontSize=\"sm\" pl={ 7 } flexWrap=\"wrap\" alignItems=\"center\" rowGap={ 1 }>\n        <TokenEntity.Icon\n          token={ nativeTokenData }\n          isLoading={ isLoading }\n        />\n        <Skeleton isLoaded={ !isLoading } whiteSpace=\"pre\" display=\"inline-flex\">\n          <span>{ currencyUnits.ether } balance: </span>\n          <CurrencyValue\n            value={ item.address_balance }\n            exchangeRate={ item.exchange_rate }\n            decimals={ String(config.chain.currency.decimals) }\n            accuracy={ 2 }\n            accuracyUsd={ 2 }\n          />\n        </Skeleton>\n      </Flex>\n      { item.tokens_count && (\n        <HStack spacing={ 2 } fontSize=\"sm\" pl={ 7 }>\n          <IconSvg name=\"tokens\" boxSize={ 5 } isLoading={ isLoading } borderRadius=\"sm\"/>\n          <Skeleton isLoaded={ !isLoading } display=\"inline-flex\">\n            <span>{ `Tokens:${ nbsp }` + item.tokens_count + (item.tokens_overflow ? '+' : '') }</span>\n            <Text variant=\"secondary\" fontWeight={ 400 }>{ `${ nbsp }($${ BigNumber(item.tokens_fiat_value).toFormat(2) })` }</Text>\n          </Skeleton>\n        </HStack>\n      ) }\n      { item.tokens_fiat_value && (\n        <HStack spacing={ 2 } fontSize=\"sm\" pl={ 7 }>\n          <IconSvg boxSize={ 5 } name=\"wallet\" isLoading={ isLoading }/>\n          <Skeleton isLoaded={ !isLoading } display=\"inline-flex\">\n            <Text>{ `Net worth:${ nbsp }` }\n              {\n                `${ item.tokens_overflow ? '>' : '' }\n                $${ BigNumber(item.tokens_fiat_value).plus((BigNumber(item.address_balance ? usdNative : '0'))).toFormat(2) }`\n              }\n            </Text>\n          </Skeleton>\n        </HStack>\n      ) }\n    </VStack>\n  );\n};\n\nexport default WatchListAddressItem;\n","import { Box, Switch, Text, HStack, Flex, Skeleton } from '@chakra-ui/react';\nimport { useMutation } from '@tanstack/react-query';\nimport React, { useCallback, useState } from 'react';\n\nimport type { WatchlistAddress } from 'types/api/account';\n\nimport useApiFetch from 'lib/api/useApiFetch';\nimport useToast from 'lib/hooks/useToast';\nimport Tag from 'ui/shared/chakra/Tag';\nimport ListItemMobile from 'ui/shared/ListItemMobile/ListItemMobile';\nimport TableItemActionButtons from 'ui/shared/TableItemActionButtons';\n\nimport WatchListAddressItem from './WatchListAddressItem';\n\ninterface Props {\n  item: WatchlistAddress;\n  isLoading?: boolean;\n  onEditClick: (data: WatchlistAddress) => void;\n  onDeleteClick: (data: WatchlistAddress) => void;\n}\n\nconst WatchListItem = ({ item, isLoading, onEditClick, onDeleteClick }: Props) => {\n  const [ notificationEnabled, setNotificationEnabled ] = useState(item.notification_methods.email);\n  const [ switchDisabled, setSwitchDisabled ] = useState(false);\n  const onItemEditClick = useCallback(() => {\n    return onEditClick(item);\n  }, [ item, onEditClick ]);\n\n  const onItemDeleteClick = useCallback(() => {\n    return onDeleteClick(item);\n  }, [ item, onDeleteClick ]);\n\n  const errorToast = useToast();\n  const apiFetch = useApiFetch();\n\n  const showErrorToast = useCallback(() => {\n    errorToast({\n      position: 'top-right',\n      description: 'There has been an error processing your request',\n      colorScheme: 'red',\n      status: 'error',\n      variant: 'subtle',\n      isClosable: true,\n      icon: null,\n    });\n  }, [ errorToast ]);\n\n  const notificationToast = useToast();\n  const showNotificationToast = useCallback((isOn: boolean) => {\n    notificationToast({\n      position: 'top-right',\n      description: isOn ? 'Email notification is ON' : 'Email notification is OFF',\n      colorScheme: 'green',\n      status: 'success',\n      variant: 'subtle',\n      title: 'Success',\n      isClosable: true,\n      icon: null,\n    });\n  }, [ notificationToast ]);\n\n  const { mutate } = useMutation({\n    mutationFn: () => {\n      setSwitchDisabled(true);\n      const body = { ...item, notification_methods: { email: !notificationEnabled } };\n      setNotificationEnabled(prevState => !prevState);\n      return apiFetch('watchlist', {\n        pathParams: { id: item.id },\n        fetchParams: { method: 'PUT', body },\n      });\n    },\n    onError: () => {\n      showErrorToast();\n      setNotificationEnabled(prevState => !prevState);\n      setSwitchDisabled(false);\n    },\n    onSuccess: () => {\n      setSwitchDisabled(false);\n      showNotificationToast(notificationEnabled);\n    },\n  });\n\n  const onSwitch = useCallback(() => {\n    return mutate();\n  }, [ mutate ]);\n\n  return (\n    <ListItemMobile>\n      <Box maxW=\"100%\">\n        <WatchListAddressItem item={ item } isLoading={ isLoading }/>\n        <HStack spacing={ 3 } mt={ 6 }>\n          <Text fontSize=\"sm\" fontWeight={ 500 }>Private tag</Text>\n          <Tag isLoading={ isLoading } isTruncated>{ item.name }</Tag>\n        </HStack>\n      </Box>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt={ 6 } w=\"100%\">\n        <HStack spacing={ 3 }>\n          <Text fontSize=\"sm\" fontWeight={ 500 }>Email notification</Text>\n          <Skeleton isLoaded={ !isLoading } display=\"inline-block\">\n            <Switch\n              colorScheme=\"blue\"\n              size=\"md\"\n              isChecked={ notificationEnabled }\n              onChange={ onSwitch }\n              aria-label=\"Email notification\"\n              isDisabled={ switchDisabled }\n            />\n          </Skeleton>\n        </HStack>\n        <TableItemActionButtons onDeleteClick={ onItemDeleteClick } onEditClick={ onItemEditClick } isLoading={ isLoading }/>\n      </Flex>\n    </ListItemMobile>\n  );\n};\n\nexport default WatchListItem;\n","import {\n  Tr,\n  Td,\n  Switch,\n  Skeleton,\n} from '@chakra-ui/react';\nimport { useMutation } from '@tanstack/react-query';\nimport React, { useCallback, useState } from 'react';\n\nimport type { WatchlistAddress } from 'types/api/account';\n\nimport useApiFetch from 'lib/api/useApiFetch';\nimport useToast from 'lib/hooks/useToast';\nimport Tag from 'ui/shared/chakra/Tag';\nimport TableItemActionButtons from 'ui/shared/TableItemActionButtons';\n\nimport WatchListAddressItem from './WatchListAddressItem';\n\ninterface Props {\n  item: WatchlistAddress;\n  isLoading?: boolean;\n  onEditClick: (data: WatchlistAddress) => void;\n  onDeleteClick: (data: WatchlistAddress) => void;\n}\n\nconst WatchlistTableItem = ({ item, isLoading, onEditClick, onDeleteClick }: Props) => {\n  const [ notificationEnabled, setNotificationEnabled ] = useState(item.notification_methods.email);\n  const [ switchDisabled, setSwitchDisabled ] = useState(false);\n  const onItemEditClick = useCallback(() => {\n    return onEditClick(item);\n  }, [ item, onEditClick ]);\n\n  const onItemDeleteClick = useCallback(() => {\n    return onDeleteClick(item);\n  }, [ item, onDeleteClick ]);\n\n  const errorToast = useToast();\n  const apiFetch = useApiFetch();\n\n  const showErrorToast = useCallback(() => {\n    errorToast({\n      position: 'top-right',\n      description: 'There has been an error processing your request',\n      colorScheme: 'red',\n      status: 'error',\n      variant: 'subtle',\n      isClosable: true,\n      icon: null,\n    });\n  }, [ errorToast ]);\n\n  const notificationToast = useToast();\n  const showNotificationToast = useCallback((isOn: boolean) => {\n    notificationToast({\n      position: 'top-right',\n      description: isOn ? 'Email notification is ON' : 'Email notification is OFF',\n      colorScheme: 'green',\n      status: 'success',\n      variant: 'subtle',\n      title: 'Success',\n      isClosable: true,\n      icon: null,\n    });\n  }, [ notificationToast ]);\n\n  const { mutate } = useMutation({\n    mutationFn: () => {\n      setSwitchDisabled(true);\n      const body = { ...item, notification_methods: { email: !notificationEnabled } };\n      setNotificationEnabled(prevState => !prevState);\n      return apiFetch('watchlist', {\n        pathParams: { id: item.id },\n        fetchParams: { method: 'PUT', body },\n      });\n    },\n    onError: () => {\n      showErrorToast();\n      setNotificationEnabled(prevState => !prevState);\n      setSwitchDisabled(false);\n    },\n    onSuccess: () => {\n      setSwitchDisabled(false);\n      showNotificationToast(!notificationEnabled);\n    },\n  });\n\n  const onSwitch = useCallback(() => {\n    return mutate();\n  }, [ mutate ]);\n\n  return (\n    <Tr alignItems=\"top\" key={ item.address_hash }>\n      <Td><WatchListAddressItem item={ item } isLoading={ isLoading }/></Td>\n      <Td>\n        <Tag isLoading={ isLoading } isTruncated>{ item.name }</Tag>\n      </Td>\n      <Td>\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">\n          <Switch\n            colorScheme=\"blue\"\n            size=\"md\"\n            isChecked={ notificationEnabled }\n            onChange={ onSwitch }\n            isDisabled={ switchDisabled }\n            aria-label=\"Email notification\"\n          />\n        </Skeleton>\n      </Td>\n      <Td>\n        <TableItemActionButtons onDeleteClick={ onItemDeleteClick } onEditClick={ onItemEditClick } isLoading={ isLoading }/>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default WatchlistTableItem;\n","import {\n  Table,\n  Tbody,\n  Tr,\n  Th,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { WatchlistAddress } from 'types/api/account';\n\nimport TheadSticky from 'ui/shared/TheadSticky';\n\nimport WatchlistTableItem from './WatchListTableItem';\n\ninterface Props {\n  data?: Array<WatchlistAddress>;\n  isLoading?: boolean;\n  onEditClick: (data: WatchlistAddress) => void;\n  onDeleteClick: (data: WatchlistAddress) => void;\n  top: number;\n}\n\nconst WatchlistTable = ({ data, isLoading, onDeleteClick, onEditClick, top }: Props) => {\n  return (\n    <Table variant=\"simple\" minWidth=\"600px\">\n      <TheadSticky top={ top }>\n        <Tr>\n          <Th width=\"70%\">Address</Th>\n          <Th width=\"30%\">Private tag</Th>\n          <Th width=\"160px\">Email notification</Th>\n          <Th width=\"108px\"></Th>\n        </Tr>\n      </TheadSticky>\n      <Tbody>\n        { data?.map((item, index) => (\n          <WatchlistTableItem\n            key={ item.address_hash + (isLoading ? index : '') }\n            item={ item }\n            isLoading={ isLoading }\n            onDeleteClick={ onDeleteClick }\n            onEditClick={ onEditClick }\n          />\n        )) }\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default WatchlistTable;\n","import { Box, Button, Skeleton, useDisclosure } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport React, { useCallback, useState } from 'react';\n\nimport type { WatchlistAddress, WatchlistResponse } from 'types/api/account';\n\nimport { resourceKey } from 'lib/api/resources';\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport useRedirectForInvalidAuthToken from 'lib/hooks/useRedirectForInvalidAuthToken';\nimport { WATCH_LIST_ITEM_WITH_TOKEN_INFO } from 'stubs/account';\nimport AccountPageDescription from 'ui/shared/AccountPageDescription';\nimport ActionBar from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport AddressModal from 'ui/watchlist/AddressModal/AddressModal';\nimport DeleteAddressModal from 'ui/watchlist/DeleteAddressModal';\nimport WatchListItem from 'ui/watchlist/WatchlistTable/WatchListItem';\nimport WatchlistTable from 'ui/watchlist/WatchlistTable/WatchlistTable';\n\nconst WatchList: React.FC = () => {\n\n  const { data, isPlaceholderData, isError, pagination } = useQueryWithPages({\n    resourceName: 'watchlist',\n    options: {\n      placeholderData: { items: Array(5).fill(WATCH_LIST_ITEM_WITH_TOKEN_INFO), next_page_params: null },\n    },\n  });\n  const queryClient = useQueryClient();\n\n  const addressModalProps = useDisclosure();\n  const deleteModalProps = useDisclosure();\n  useRedirectForInvalidAuthToken();\n\n  const [ addressModalData, setAddressModalData ] = useState<WatchlistAddress>();\n  const [ deleteModalData, setDeleteModalData ] = useState<WatchlistAddress>();\n\n  const onEditClick = useCallback((data: WatchlistAddress) => {\n    setAddressModalData(data);\n    addressModalProps.onOpen();\n  }, [ addressModalProps ]);\n\n  const onAddressModalClose = useCallback(() => {\n    setAddressModalData(undefined);\n    addressModalProps.onClose();\n  }, [ addressModalProps ]);\n\n  const onAddOrEditSuccess = useCallback(async() => {\n    await queryClient.refetchQueries({ queryKey: [ resourceKey('watchlist') ] });\n    setAddressModalData(undefined);\n    addressModalProps.onClose();\n  }, [ addressModalProps, queryClient ]);\n\n  const onDeleteClick = useCallback((data: WatchlistAddress) => {\n    setDeleteModalData(data);\n    deleteModalProps.onOpen();\n  }, [ deleteModalProps ]);\n\n  const onDeleteModalClose = useCallback(() => {\n    setDeleteModalData(undefined);\n    deleteModalProps.onClose();\n  }, [ deleteModalProps ]);\n\n  const onDeleteSuccess = useCallback(async() => {\n    queryClient.setQueryData(getResourceKey('watchlist'), (prevData: WatchlistResponse | undefined) => {\n      const newItems = prevData?.items.filter((item: WatchlistAddress) => item.id !== deleteModalData?.id);\n      return { ...prevData, items: newItems };\n    },\n    );\n  }, [ deleteModalData?.id, queryClient ]);\n\n  const description = (\n    <AccountPageDescription>\n      An email notification can be sent to you when an address on your watch list sends or receives any transactions.\n    </AccountPageDescription>\n  );\n\n  const content = (() => {\n    const actionBar = pagination.isVisible ? (\n      <ActionBar mt={ -6 }>\n        <Pagination ml=\"auto\" { ...pagination }/>\n      </ActionBar>\n    ) : null;\n\n    const list = (\n      <>\n        <Box display={{ base: 'block', lg: 'none' }}>\n          { data?.items.map((item, index) => (\n            <WatchListItem\n              key={ item.address_hash + (isPlaceholderData ? index : '') }\n              item={ item }\n              isLoading={ isPlaceholderData }\n              onDeleteClick={ onDeleteClick }\n              onEditClick={ onEditClick }\n            />\n          )) }\n        </Box>\n        <Box display={{ base: 'none', lg: 'block' }}>\n          <WatchlistTable\n            data={ data?.items }\n            isLoading={ isPlaceholderData }\n            onDeleteClick={ onDeleteClick }\n            onEditClick={ onEditClick }\n            top={ pagination.isVisible ? 80 : 0 }\n          />\n        </Box>\n      </>\n    );\n\n    return (\n      <>\n        { description }\n        <DataListDisplay\n          isError={ isError }\n          items={ data?.items }\n          emptyText=\"\"\n          content={ list }\n          actionBar={ actionBar }\n        />\n        <Skeleton mt={ 8 } isLoaded={ !isPlaceholderData } display=\"inline-block\">\n          <Button\n            size=\"lg\"\n            onClick={ addressModalProps.onOpen }\n          >\n            Add address\n          </Button>\n        </Skeleton>\n        <AddressModal\n          { ...addressModalProps }\n          onClose={ onAddressModalClose }\n          onSuccess={ onAddOrEditSuccess }\n          data={ addressModalData }\n          isAdd={ !addressModalData }\n        />\n        { deleteModalData && (\n          <DeleteAddressModal\n            { ...deleteModalProps }\n            onClose={ onDeleteModalClose }\n            onSuccess={ onDeleteSuccess }\n            data={ deleteModalData }\n          />\n        ) }\n      </>\n    );\n  })();\n\n  return (\n    <>\n      <PageTitle title=\"Watch list\"/>\n      { content }\n    </>\n  );\n};\n\nexport default WatchList;\n","import { Box, useColorModeValue } from '@chakra-ui/react';\nimport _debounce from 'lodash/debounce';\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\n\nconst CUT_HEIGHT = 144;\n\nconst AccountPageDescription = ({ children, allowCut = true }: { children: React.ReactNode; allowCut?: boolean }) => {\n  const ref = useRef<HTMLParagraphElement>(null);\n\n  const [ needCut, setNeedCut ] = useState(false);\n  const [ expanded, setExpanded ] = useState(false);\n\n  const calculateCut = useCallback(() => {\n    const textHeight = ref.current?.offsetHeight;\n    if (!needCut && textHeight && textHeight > CUT_HEIGHT) {\n      setNeedCut(true);\n    } else if (needCut && textHeight && textHeight < CUT_HEIGHT) {\n      setNeedCut(false);\n    }\n  }, [ needCut ]);\n\n  useEffect(() => {\n    if (!allowCut) {\n      return;\n    }\n\n    calculateCut();\n    const resizeHandler = _debounce(calculateCut, 300);\n    window.addEventListener('resize', resizeHandler);\n    return function cleanup() {\n      window.removeEventListener('resize', resizeHandler);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ ]);\n\n  const expand = useCallback(() => {\n    setExpanded(true);\n  }, []);\n\n  const gradient = useColorModeValue(\n    'linear-gradient(360deg, rgba(255, 255, 255, 0.8) 38.1%, rgba(255, 255, 255, 0) 166.67%)',\n    'linear-gradient(360deg, rgba(16, 17, 18, 0.8) 38.1%, rgba(16, 17, 18, 0) 166.67%)',\n  );\n\n  return (\n    <Box position=\"relative\" marginBottom={{ base: 6, lg: 8 }}>\n      <Box\n        ref={ ref }\n        maxHeight={ needCut && !expanded ? `${ CUT_HEIGHT }px` : 'auto' }\n        overflow=\"hidden\"\n        style={ needCut && !expanded ? { WebkitLineClamp: '6', WebkitBoxOrient: 'vertical', display: '-webkit-box' } : {} }\n      >\n        { children }\n      </Box>\n      { needCut && !expanded && (\n        <Box\n          position=\"absolute\"\n          bottom=\"-16px\"\n          left={ 0 }\n          width=\"100%\"\n          height=\"63px\"\n          style={{ background: gradient }}\n          onClick={ expand }\n        >\n        </Box>\n      ) }\n    </Box>\n  );\n};\n\nexport default AccountPageDescription;\n","import type { InputProps } from '@chakra-ui/react';\nimport {\n  Input,\n  FormControl,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps, FieldError, FieldValues, Path } from 'react-hook-form';\n\nimport { ADDRESS_LENGTH } from 'lib/validations/address';\nimport InputPlaceholder from 'ui/shared/InputPlaceholder';\n\ntype Props<TInputs extends FieldValues, TInputName extends Path<TInputs>> = {\n  field: ControllerRenderProps<TInputs, TInputName>;\n  size?: InputProps['size'];\n  placeholder?: string;\n  backgroundColor?: string;\n  error?: FieldError;\n}\n\nexport default function AddressInput<Inputs extends FieldValues, Name extends Path<Inputs>>(\n  {\n    error,\n    field,\n    size,\n    placeholder = 'Address (0x...)',\n    backgroundColor,\n  }: Props<Inputs, Name>) {\n  return (\n    <FormControl variant=\"floating\" id=\"address\" isRequired backgroundColor={ backgroundColor } size={ size }>\n      <Input\n        { ...field }\n        isInvalid={ Boolean(error) }\n        maxLength={ ADDRESS_LENGTH }\n      />\n      <InputPlaceholder text={ placeholder } error={ error }/>\n    </FormControl>\n  );\n}\n","import {\n  Checkbox,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps, FieldValues, Path } from 'react-hook-form';\n\ntype Props<TInputs extends FieldValues, TInputName extends Path<TInputs>> = {\n  field: ControllerRenderProps<TInputs, TInputName>;\n  text: string;\n  onChange?: () => void;\n  isDisabled?: boolean;\n}\n\nexport default function CheckboxInput<Inputs extends FieldValues, Name extends Path<Inputs>>(\n  {\n    field,\n    text,\n    onChange,\n    isDisabled,\n  }: Props<Inputs, Name>) {\n\n  const handleChange: typeof field.onChange = React.useCallback((...args) => {\n    field.onChange(...args);\n    onChange?.();\n  }, [ field, onChange ]);\n\n  return (\n    <Checkbox\n      isChecked={ field.value }\n      onChange={ handleChange }\n      ref={ field.ref }\n      colorScheme=\"blue\"\n      size=\"lg\"\n      isDisabled={ isDisabled }\n    >\n      { text }\n    </Checkbox>\n  );\n}\n","import { Box, Text, chakra, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\n\ninterface Props {\n  value: string;\n  currency?: string;\n  exchangeRate?: string | null;\n  className?: string;\n  accuracy?: number;\n  accuracyUsd?: number;\n  decimals?: string | null;\n  isLoading?: boolean;\n}\n\nconst CurrencyValue = ({ value, currency = '', decimals, exchangeRate, className, accuracy, accuracyUsd, isLoading }: Props) => {\n  if (isLoading) {\n    return (\n      <Skeleton className={ className } display=\"inline-block\">0.00 ($0.00)</Skeleton>\n    );\n  }\n\n  if (value === undefined || value === null) {\n    return (\n      <Box as=\"span\" className={ className }>\n        <Text>N/A</Text>\n      </Box>\n    );\n  }\n  const { valueStr: valueResult, usd: usdResult } = getCurrencyValue({ value, accuracy, accuracyUsd, exchangeRate, decimals });\n\n  return (\n    <Box as=\"span\" className={ className } display=\"inline-flex\" rowGap={ 3 } columnGap={ 1 }>\n      <Text display=\"inline-block\">\n        { valueResult }{ currency ? ` ${ currency }` : '' }\n      </Text>\n      { usdResult && <Text as=\"span\" variant=\"secondary\" fontWeight={ 400 }>(${ usdResult })</Text> }\n    </Box>\n  );\n};\n\nexport default React.memo(chakra(CurrencyValue));\n","import { Box, Text, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport EmptySearchResult from 'ui/shared/EmptySearchResult';\n\nimport DataFetchAlert from './DataFetchAlert';\n\ntype FilterProps = {\n  hasActiveFilters: boolean;\n  emptyFilteredText: string;\n};\n\ntype Props = {\n  isError: boolean;\n  items?: Array<unknown>;\n  emptyText: string;\n  actionBar?: React.ReactNode;\n  content: React.ReactNode;\n  className?: string;\n  filterProps?: FilterProps;\n}\n\nconst DataListDisplay = (props: Props) => {\n  if (props.isError) {\n    return <DataFetchAlert className={ props.className }/>;\n  }\n\n  if (props.filterProps?.hasActiveFilters && !props.items?.length) {\n    return (\n      <Box className={ props.className }>\n        { props.actionBar }\n        <EmptySearchResult text={ props.filterProps.emptyFilteredText }/>\n      </Box>\n    );\n  }\n\n  if (!props.items?.length) {\n    return props.emptyText ? <Text className={ props.className }>{ props.emptyText }</Text> : null;\n  }\n\n  return (\n    <Box className={ props.className }>\n      { props.actionBar }\n      { props.content }\n    </Box>\n  );\n};\n\nexport default chakra(DataListDisplay);\n","import {\n  Box,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/react';\nimport { useMutation } from '@tanstack/react-query';\nimport React, { useCallback, useState } from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport FormSubmitAlert from 'ui/shared/FormSubmitAlert';\n\ntype Props = {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  renderContent: () => JSX.Element;\n  mutationFn: () => Promise<unknown>;\n  onSuccess: () => Promise<void>;\n}\n\nconst DeleteModal: React.FC<Props> = ({\n  isOpen,\n  onClose,\n  title,\n  renderContent,\n  mutationFn,\n  onSuccess,\n}) => {\n  const [ isAlertVisible, setAlertVisible ] = useState(false);\n\n  const onModalClose = useCallback(() => {\n    setAlertVisible(false);\n    onClose();\n  }, [ onClose, setAlertVisible ]);\n\n  const mutation = useMutation({\n    mutationFn,\n    onSuccess: async() => {\n      onSuccess();\n      onClose();\n    },\n    onError: () => {\n      setAlertVisible(true);\n    },\n  });\n\n  const onDeleteClick = useCallback(() => {\n    setAlertVisible(false);\n    mutation.mutate();\n  }, [ setAlertVisible, mutation ]);\n\n  const isMobile = useIsMobile();\n\n  return (\n    <Modal isOpen={ isOpen } onClose={ onModalClose } size={ isMobile ? 'full' : 'md' }>\n      <ModalOverlay/>\n      <ModalContent>\n        <ModalHeader fontWeight=\"500\" textStyle=\"h3\">{ title }</ModalHeader>\n        <ModalCloseButton/>\n        <ModalBody>\n          { isAlertVisible && <Box mb={ 4 }><FormSubmitAlert/></Box> }\n          { renderContent() }\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            size=\"lg\"\n            onClick={ onDeleteClick }\n            isLoading={ mutation.isPending }\n            // FIXME: chackra's button is disabled when isLoading\n            isDisabled={ false }\n          >\n              Delete\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default DeleteModal;\n","import { Box, Heading, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  text: string;\n}\n\nconst EmptySearchResult = ({ text }: Props) => {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n    >\n      <IconSvg\n        name=\"empty_search_result\"\n        boxSize={ 60 }\n        display=\"block\"\n      />\n\n      <Heading\n        as=\"h3\"\n        marginBottom={ 2 }\n        fontSize={{ base: '2xl', sm: '3xl' }}\n        fontWeight=\"semibold\"\n      >\n        No results\n      </Heading>\n\n      <Text\n        fontSize={{ base: 'sm' }}\n        variant=\"secondary\"\n        align=\"center\"\n      >\n        { text }\n      </Text>\n    </Box>\n  );\n};\n\nexport default EmptySearchResult;\n","import {\n  Box,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n} from '@chakra-ui/react';\nimport React, { useCallback } from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport FormSubmitAlert from 'ui/shared/FormSubmitAlert';\n\ninterface Props<TData> {\n  isOpen: boolean;\n  onClose: () => void;\n  data?: TData;\n  title: string;\n  text: string;\n  renderForm: () => JSX.Element;\n  isAlertVisible: boolean;\n  setAlertVisible: (isAlertVisible: boolean) => void;\n}\n\nexport default function FormModal<TData>({\n  isOpen,\n  onClose,\n  title,\n  text,\n  renderForm,\n  isAlertVisible,\n  setAlertVisible,\n}: Props<TData>) {\n\n  const onModalClose = useCallback(() => {\n    setAlertVisible(false);\n    onClose();\n  }, [ onClose, setAlertVisible ]);\n\n  const isMobile = useIsMobile();\n\n  return (\n    <Modal isOpen={ isOpen } onClose={ onModalClose } size={ isMobile ? 'full' : 'md' }>\n      <ModalOverlay/>\n      <ModalContent>\n        <ModalHeader fontWeight=\"500\" textStyle=\"h3\">{ title }</ModalHeader>\n        <ModalCloseButton/>\n        <ModalBody>\n          { (isAlertVisible || text) && (\n            <Box marginBottom={{ base: 6, lg: 8 }}>\n              { text && (\n                <Text lineHeight=\"30px\" mb={ 3 }>\n                  { text }\n                </Text>\n              ) }\n              { isAlertVisible && <FormSubmitAlert/> }\n            </Box>\n          ) }\n          { renderForm() }\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { Alert, AlertDescription } from '@chakra-ui/react';\nimport React from 'react';\n\nconst FormSubmitAlert = () => {\n  return (\n    <Alert status=\"error\">\n      <AlertDescription>\n        There has been an error processing your request\n      </AlertDescription>\n    </Alert>\n  );\n};\n\nexport default FormSubmitAlert;\n","import { FormLabel, chakra } from '@chakra-ui/react';\nimport React from 'react';\nimport type { FieldError } from 'react-hook-form';\n\ninterface Props {\n  text: string;\n  icon?: React.ReactNode;\n  error?: Partial<FieldError>;\n  className?: string;\n  isFancy?: boolean;\n  isInModal?: boolean;\n}\n\nconst InputPlaceholder = ({ text, icon, error, className, isFancy, isInModal }: Props) => {\n  let errorMessage = error?.message;\n\n  if (!errorMessage && error?.type === 'pattern') {\n    errorMessage = 'Invalid format';\n  }\n\n  return (\n    <FormLabel\n      className={ className }\n      alignItems=\"center\"\n      { ...(isFancy ? { 'data-fancy': true } : {}) }\n      { ...(isInModal ? { 'data-in-modal': true } : {}) }\n    >\n      { icon }\n      <chakra.span>{ text }</chakra.span>\n      { errorMessage && <chakra.span order={ 3 } whiteSpace=\"pre\"> - { errorMessage }</chakra.span> }\n    </FormLabel>\n  );\n};\n\nexport default chakra(InputPlaceholder);\n","import { Flex, chakra } from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  isAnimated?: boolean;\n}\n\nconst ListItemMobile = ({ children, className, isAnimated }: Props) => {\n  return (\n    <Flex\n      as={ motion.div }\n      initial={ isAnimated ? { opacity: 0, scale: 0.97 } : { opacity: 1, scale: 1 } }\n      animate={{ opacity: 1, scale: 1 }}\n      transitionDuration=\"normal\"\n      transitionTimingFunction=\"linear\"\n      rowGap={ 6 }\n      alignItems=\"flex-start\"\n      flexDirection=\"column\"\n      paddingY={ 6 }\n      borderColor=\"divider\"\n      borderTopWidth=\"1px\"\n      _last={{\n        borderBottomWidth: '1px',\n      }}\n      className={ className }\n      fontSize=\"16px\"\n      lineHeight=\"20px\"\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ListItemMobile);\n","import { Tooltip, IconButton, HStack, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport usePreventFocusAfterModalClosing from 'lib/hooks/usePreventFocusAfterModalClosing';\nimport IconSvg from 'ui/shared/IconSvg';\n\ntype Props = {\n  onEditClick: () => void;\n  onDeleteClick: () => void;\n  isLoading?: boolean;\n}\n\nconst TableItemActionButtons = ({ onEditClick, onDeleteClick, isLoading }: Props) => {\n  const onFocusCapture = usePreventFocusAfterModalClosing();\n\n  if (isLoading) {\n    return (\n      <HStack spacing={ 6 } alignSelf=\"flex-end\">\n        <Skeleton boxSize={ 5 } flexShrink={ 0 } borderRadius=\"sm\"/>\n        <Skeleton boxSize={ 5 } flexShrink={ 0 } borderRadius=\"sm\"/>\n      </HStack>\n    );\n  }\n\n  return (\n    <HStack spacing={ 6 } alignSelf=\"flex-end\">\n      <Tooltip label=\"Edit\">\n        <IconButton\n          aria-label=\"edit\"\n          variant=\"simple\"\n          boxSize={ 5 }\n          onClick={ onEditClick }\n          icon={ <IconSvg name=\"edit\" boxSize={ 5 }/> }\n          onFocusCapture={ onFocusCapture }\n          display=\"inline-block\"\n          flexShrink={ 0 }\n          borderRadius=\"none\"\n        />\n      </Tooltip>\n      <Tooltip label=\"Delete\">\n        <IconButton\n          aria-label=\"delete\"\n          variant=\"simple\"\n          boxSize={ 5 }\n          onClick={ onDeleteClick }\n          icon={ <IconSvg name=\"delete\" boxSize={ 5 }/> }\n          onFocusCapture={ onFocusCapture }\n          display=\"inline-block\"\n          flexShrink={ 0 }\n          borderRadius=\"none\"\n        />\n      </Tooltip>\n    </HStack>\n  );\n};\n\nexport default React.memo(TableItemActionButtons);\n","import {\n  Input,\n  FormControl,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps, FieldError, FieldValues, Path } from 'react-hook-form';\n\nimport InputPlaceholder from 'ui/shared/InputPlaceholder';\n\nconst TAG_MAX_LENGTH = 35;\n\ntype Props<TInputs extends FieldValues, TInputName extends Path<TInputs>> = {\n  field: ControllerRenderProps<TInputs, TInputName>;\n  error?: FieldError;\n  backgroundColor?: string;\n}\n\nfunction TagInput<Inputs extends FieldValues, Name extends Path<Inputs>>({ field, error, backgroundColor }: Props<Inputs, Name>) {\n  return (\n    <FormControl variant=\"floating\" id=\"tag\" isRequired backgroundColor={ backgroundColor }>\n      <Input\n        { ...field }\n        isInvalid={ Boolean(error) }\n        maxLength={ TAG_MAX_LENGTH }\n      />\n      <InputPlaceholder text=\"Private tag (max 35 characters)\" error={ error }/>\n    </FormControl>\n  );\n}\n\nexport default TagInput;\n","import { Skeleton, Tag as ChakraTag } from '@chakra-ui/react';\nimport type { TagProps } from '@chakra-ui/react';\nimport React from 'react';\n\nimport TruncatedTextTooltip from 'ui/shared/TruncatedTextTooltip';\n\ninterface Props extends TagProps {\n  isLoading?: boolean;\n}\n\nconst Tag = ({ isLoading, ...props }: Props, ref: React.ForwardedRef<HTMLDivElement>) => {\n\n  if (props.isTruncated && typeof props.children === 'string') {\n    if (!props.children) {\n      return null;\n    }\n\n    return (\n      <Skeleton isLoaded={ !isLoading } display=\"inline-block\" borderRadius=\"sm\" maxW=\"100%\">\n        <TruncatedTextTooltip label={ props.children }>\n          <ChakraTag { ...props } ref={ ref }/>\n        </TruncatedTextTooltip>\n      </Skeleton>\n    );\n  }\n  return (\n    <Skeleton isLoaded={ !isLoading } display=\"inline-block\" borderRadius=\"sm\" maxW=\"100%\">\n      <ChakraTag { ...props } ref={ ref }/>\n    </Skeleton>\n  );\n};\n\nexport default React.memo(React.forwardRef(Tag));\n","import { Grid, GridItem } from '@chakra-ui/react';\nimport React, { useCallback } from 'react';\nimport { Controller } from 'react-hook-form';\nimport type { Path, ControllerRenderProps, FieldValues, Control } from 'react-hook-form';\n\nimport config from 'configs/app';\nimport CheckboxInput from 'ui/shared/CheckboxInput';\n\n// does it depend on the network?\nconst NOTIFICATIONS = [ 'native', 'ERC-20', 'ERC-721' ] as const;\nconst NOTIFICATIONS_NAMES = [ config.chain.currency.symbol, 'ERC-20', 'ERC-721, ERC-1155 (NFT)' ];\n\ntype Props<Inputs extends FieldValues> = {\n  control: Control<Inputs>;\n}\n\nexport default function AddressFormNotifications<Inputs extends FieldValues, Checkboxes extends Path<Inputs>>({ control }: Props<Inputs>) {\n  // eslint-disable-next-line react/display-name\n  const renderCheckbox = useCallback((text: string) => ({ field }: {field: ControllerRenderProps<Inputs, Checkboxes>}) => (\n    <CheckboxInput<Inputs, Checkboxes> text={ text } field={ field }/>\n  ), []);\n\n  return (\n    <Grid templateColumns={{ base: 'repeat(2, max-content)', lg: 'repeat(3, max-content)' }} gap={{ base: '10px 24px', lg: '20px 24px' }}>\n      { NOTIFICATIONS.map((notification: string, index: number) => {\n        const incomingFieldName = `notification_settings.${ notification }.incoming` as Checkboxes;\n        const outgoingFieldName = `notification_settings.${ notification }.outcoming` as Checkboxes;\n        return (\n          <React.Fragment key={ notification }>\n            <GridItem\n              gridColumnStart={{ base: 1, lg: 1 }}\n              gridColumnEnd={{ base: 3, lg: 1 }}\n              _notFirst={{\n                mt: { base: 3, lg: 0 },\n              }}\n            >\n              { NOTIFICATIONS_NAMES[index] }\n            </GridItem>\n            <GridItem>\n              <Controller\n                name={ incomingFieldName }\n                control={ control }\n\n                render={ renderCheckbox('Incoming') }\n              />\n            </GridItem>\n            <GridItem>\n              <Controller\n                name={ outgoingFieldName }\n                control={ control }\n\n                render={ renderCheckbox('Outgoing') }\n              />\n            </GridItem>\n          </React.Fragment>\n        );\n      }) }\n    </Grid>\n  );\n}\n","import {\n  Box,\n  Button,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { useMutation } from '@tanstack/react-query';\nimport React, { useCallback, useState } from 'react';\nimport type { SubmitHandler, ControllerRenderProps } from 'react-hook-form';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport type { WatchlistAddress, WatchlistErrors } from 'types/api/account';\n\nimport type { ResourceErrorAccount } from 'lib/api/resources';\nimport useApiFetch from 'lib/api/useApiFetch';\nimport getErrorMessage from 'lib/getErrorMessage';\nimport { ADDRESS_REGEXP } from 'lib/validations/address';\nimport AddressInput from 'ui/shared/AddressInput';\nimport CheckboxInput from 'ui/shared/CheckboxInput';\nimport TagInput from 'ui/shared/TagInput';\n\nimport AddressFormNotifications from './AddressFormNotifications';\n\n// does it depend on the network?\nconst NOTIFICATIONS = [ 'native', 'ERC-20', 'ERC-721' ] as const;\n\nconst TAG_MAX_LENGTH = 35;\n\ntype Props = {\n  data?: Partial<WatchlistAddress>;\n  onSuccess: () => Promise<void>;\n  setAlertVisible: (isAlertVisible: boolean) => void;\n  isAdd: boolean;\n}\n\ntype Inputs = {\n  address: string;\n  tag: string;\n  notification: boolean;\n  notification_settings: {\n    'native': {\n      outcoming: boolean;\n      incoming: boolean;\n    };\n    'ERC-721': {\n      outcoming: boolean;\n      incoming: boolean;\n    };\n    'ERC-20': {\n      outcoming: boolean;\n      incoming: boolean;\n    };\n  };\n}\n\ntype Checkboxes = 'notification' |\n'notification_settings.native.outcoming' |\n'notification_settings.native.incoming' |\n'notification_settings.ERC-20.outcoming' |\n'notification_settings.ERC-20.incoming' |\n'notification_settings.ERC-721.outcoming' |\n'notification_settings.ERC-721.incoming';\n\nconst AddressForm: React.FC<Props> = ({ data, onSuccess, setAlertVisible, isAdd }) => {\n  const [ pending, setPending ] = useState(false);\n  const formBackgroundColor = useColorModeValue('white', 'gray.900');\n\n  let notificationsDefault = {} as Inputs['notification_settings'];\n  if (!data?.notification_settings) {\n    NOTIFICATIONS.forEach(n => notificationsDefault[n] = { incoming: true, outcoming: true });\n  } else {\n    notificationsDefault = data.notification_settings;\n  }\n\n  const { control, handleSubmit, formState: { errors, isDirty }, setError } = useForm<Inputs>({\n    defaultValues: {\n      address: data?.address_hash || '',\n      tag: data?.name || '',\n      notification: data?.notification_methods ? data.notification_methods.email : true,\n      notification_settings: notificationsDefault,\n    },\n    mode: 'onTouched',\n  });\n\n  const apiFetch = useApiFetch();\n\n  function updateWatchlist(formData: Inputs) {\n    const body = {\n      name: formData?.tag,\n      address_hash: formData?.address,\n      notification_settings: formData.notification_settings,\n      notification_methods: {\n        email: formData.notification,\n      },\n    };\n    if (!isAdd && data) {\n      // edit address\n      return apiFetch('watchlist', {\n        pathParams: { id: data?.id || '' },\n        fetchParams: { method: 'PUT', body },\n      });\n\n    } else {\n      // add address\n      return apiFetch('watchlist', { fetchParams: { method: 'POST', body } });\n    }\n  }\n\n  const { mutate } = useMutation({\n    mutationFn: updateWatchlist,\n    onSuccess: async() => {\n      await onSuccess();\n      setPending(false);\n    },\n    onError: (error: ResourceErrorAccount<WatchlistErrors>) => {\n      setPending(false);\n      const errorMap = error.payload?.errors;\n      if (errorMap?.address_hash || errorMap?.name) {\n        errorMap?.address_hash && setError('address', { type: 'custom', message: getErrorMessage(errorMap, 'address_hash') });\n        errorMap?.name && setError('tag', { type: 'custom', message: getErrorMessage(errorMap, 'name') });\n      } else if (errorMap?.watchlist_id) {\n        setError('address', { type: 'custom', message: getErrorMessage(errorMap, 'watchlist_id') });\n      } else {\n        setAlertVisible(true);\n      }\n    },\n  });\n\n  const onSubmit: SubmitHandler<Inputs> = (formData) => {\n    setAlertVisible(false);\n    setPending(true);\n    mutate(formData);\n  };\n\n  const renderAddressInput = useCallback(({ field }: {field: ControllerRenderProps<Inputs, 'address'>}) => {\n    return (\n      <AddressInput<Inputs, 'address'>\n        field={ field }\n        backgroundColor={ formBackgroundColor }\n        error={ errors.address }\n      />\n    );\n  }, [ errors, formBackgroundColor ]);\n\n  const renderTagInput = useCallback(({ field }: {field: ControllerRenderProps<Inputs, 'tag'>}) => {\n    return <TagInput<Inputs, 'tag'> field={ field } error={ errors.tag } backgroundColor={ formBackgroundColor }/>;\n  }, [ errors, formBackgroundColor ]);\n\n  // eslint-disable-next-line react/display-name\n  const renderCheckbox = useCallback((text: string) => ({ field }: {field: ControllerRenderProps<Inputs, Checkboxes>}) => (\n    <CheckboxInput<Inputs, Checkboxes> text={ text } field={ field }/>\n  ), []);\n\n  return (\n    <form noValidate onSubmit={ handleSubmit(onSubmit) }>\n      <Box marginBottom={ 5 }>\n        <Controller\n          name=\"address\"\n          control={ control }\n          rules={{\n            pattern: ADDRESS_REGEXP,\n            required: true,\n          }}\n          render={ renderAddressInput }\n        />\n      </Box>\n      <Box marginBottom={ 8 }>\n        <Controller\n          name=\"tag\"\n          control={ control }\n          rules={{\n            maxLength: TAG_MAX_LENGTH,\n            required: true,\n          }}\n          render={ renderTagInput }\n        />\n      </Box>\n      <Text variant=\"secondary\" fontSize=\"sm\" marginBottom={ 5 }>\n        Please select what types of notifications you will receive\n      </Text>\n      <Box marginBottom={ 8 }>\n        <AddressFormNotifications control={ control }/>\n      </Box>\n      <Text variant=\"secondary\" fontSize=\"sm\" marginBottom={{ base: '10px', lg: 5 }}>Notification methods</Text>\n      <Controller\n        name={ 'notification' as Checkboxes }\n        control={ control }\n        render={ renderCheckbox('Email notifications') }\n      />\n      <Box marginTop={ 8 }>\n        <Button\n          size=\"lg\"\n          type=\"submit\"\n          isLoading={ pending }\n          isDisabled={ !isDirty }\n        >\n          { !isAdd ? 'Save changes' : 'Add address' }\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nexport default AddressForm;\n","import React, { useCallback, useState } from 'react';\n\nimport type { WatchlistAddress } from 'types/api/account';\n\nimport FormModal from 'ui/shared/FormModal';\n\nimport AddressForm from './AddressForm';\n\ntype Props = {\n  isAdd: boolean;\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess: () => Promise<void>;\n  data?: Partial<WatchlistAddress>;\n}\n\nconst AddressModal: React.FC<Props> = ({ isOpen, onClose, onSuccess, data, isAdd }) => {\n  const title = !isAdd ? 'Edit watch list address' : 'New address to watch list';\n  const text = isAdd ? 'An email notification can be sent to you when an address on your watch list sends or receives any transactions.' : '';\n\n  const [ isAlertVisible, setAlertVisible ] = useState(false);\n\n  const renderForm = useCallback(() => {\n    return <AddressForm data={ data } onSuccess={ onSuccess } setAlertVisible={ setAlertVisible } isAdd={ isAdd }/>;\n  }, [ data, isAdd, onSuccess ]);\n\n  return (\n    <FormModal<WatchlistAddress>\n      isOpen={ isOpen }\n      onClose={ onClose }\n      title={ title }\n      text={ text }\n      renderForm={ renderForm }\n      isAlertVisible={ isAlertVisible }\n      setAlertVisible={ setAlertVisible }\n    />\n  );\n};\n\nexport default AddressModal;\n","import { Text } from '@chakra-ui/react';\nimport React, { useCallback } from 'react';\n\nimport type { WatchlistAddress } from 'types/api/account';\n\nimport useApiFetch from 'lib/api/useApiFetch';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport DeleteModal from 'ui/shared/DeleteModal';\n\ntype Props = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess: () => Promise<void>;\n  data: Pick<WatchlistAddress, 'address_hash' | 'id'>;\n}\n\nconst DeleteAddressModal: React.FC<Props> = ({ isOpen, onClose, onSuccess, data }) => {\n  const isMobile = useIsMobile();\n  const apiFetch = useApiFetch();\n\n  const mutationFn = useCallback(() => {\n    return apiFetch('watchlist', {\n      pathParams: { id: data.id },\n      fetchParams: { method: 'DELETE' },\n    });\n  }, [ data?.id, apiFetch ]);\n\n  const address = data?.address_hash;\n\n  const renderModalContent = useCallback(() => {\n    const addressString = isMobile ? [ address.slice(0, 4), address.slice(-4) ].join('...') : address;\n    return (\n      <Text>Address <Text fontWeight=\"700\" as=\"span\"> { addressString || 'address' }</Text> will be deleted</Text>\n    );\n  }, [ address, isMobile ]);\n\n  return (\n    <DeleteModal\n      isOpen={ isOpen }\n      onClose={ onClose }\n      title=\"Remove address from watch list\"\n      renderContent={ renderModalContent }\n      mutationFn={ mutationFn }\n      onSuccess={ onSuccess }\n    />\n  );\n};\n\nexport default DeleteAddressModal;\n"],"names":["getCurrencyValue","param","usdResult","value","accuracy","accuracyUsd","decimals","exchangeRate","valueCurr","BigNumber","div","Number","valueResult","dp","toFormat","usdBn","ZERO","exchangeRateBn","times","isEqualTo","usdBnDp","precision","valueStr","usd","getErrorMessage","error","field","join","usePreventFocusAfterModalClosing","React","e","stopPropagation","useRedirectForInvalidAuthToken","state","queryClient","useQueryClient","getQueryState","resourceKey","errorStatus","status","loginUrl","useLoginUrl","apiToken","cookies","API_TOKEN","Sentry","tags","source","window","location","assign","PRIVATE_TAG_ADDRESS","address","ADDRESS_PARAMS","address_hash","ADDRESS_HASH","id","name","PRIVATE_TAG_TX","transaction_hash","TX_HASH","PUBLIC_TAG","additional_comment","addresses","addresses_with_info","company","email","full_name","is_owner","website","WATCH_LIST_ITEM_WITH_TOKEN_INFO","address_balance","exchange_rate","notification_methods","notification_settings","incoming","outcoming","tokens_count","tokens_fiat_value","tokens_overflow","API_KEY","api_key","CUSTOM_ABI","abi","constant","payable","inputs","type","outputs","stateMutability","contract_address","contract_address_hash","VERIFIED_ADDRESS","userId","chainId","contractAddress","verifiedDate","metadata","tokenName","tokenSymbol","TOKEN_INFO_APPLICATION","tokenAddress","updatedAt","requesterName","requesterEmail","projectWebsite","projectEmail","iconUrl","projectDescription","projectSector","TX","timestamp","fee","gas_limit","block","method","confirmations","to","tx_burnt_fee","max_fee_per_gas","result","hash","gas_price","priority_fee","base_fee_per_gas","from","token_transfers","tx_types","gas_used","created_contract","position","nonce","has_error_in_internal_txs","actions","decoded_input","token_transfers_overflow","raw_input","max_priority_fee_per_gas","revert_reason","confirmation_duration","tx_tag","TX_ZKEVM_L2","zkevm_batch_number","zkevm_sequence_hash","zkevm_status","zkevm_verify_hash","TX_RAW_TRACE","WatchlistTable_WatchListAddressItem","item","isLoading","nativeTokenData","config","chain","currency","icon_url","symbol","usdNative","jsx_runtime","jsxs","VStack","spacing","align","fontWeight","jsx","AddressEntity","py","Flex","fontSize","pl","flexWrap","alignItems","rowGap","TokenEntity","token","Skeleton","isLoaded","whiteSpace","display","span","currencyUnits","ether","CurrencyValue","String","HStack","IconSvg","boxSize","borderRadius","concat","nbsp","Text","variant","plus","WatchlistTable_WatchListItem","onEditClick","onDeleteClick","notificationEnabled","setNotificationEnabled","useState","switchDisabled","setSwitchDisabled","onItemEditClick","useCallback","onItemDeleteClick","errorToast","useToast","apiFetch","useApiFetch","showErrorToast","description","colorScheme","isClosable","icon","notificationToast","showNotificationToast","isOn","title","mutate","useMutation","mutationFn","body","prevState","pathParams","fetchParams","onError","onSuccess","onSwitch","ListItemMobile","Box","maxW","WatchListAddressItem","mt","Tag","isTruncated","justifyContent","w","Switch","size","isChecked","onChange","aria-label","isDisabled","TableItemActionButtons","WatchListTableItem","Tr","Td","WatchlistTable_WatchlistTable","data","top","Table","minWidth","TheadSticky","Th","width","Tbody","map","index","WatchlistTableItem","Watchlist","isPlaceholderData","isError","pagination","useQueryWithPages","resourceName","options","placeholderData","items","Array","fill","next_page_params","addressModalProps","useDisclosure","deleteModalProps","addressModalData","setAddressModalData","deleteModalData","setDeleteModalData","onOpen","onAddressModalClose","undefined","onClose","onAddOrEditSuccess","refetchQueries","queryKey","onDeleteModalClose","onDeleteSuccess","setQueryData","getResourceKey","newItems","prevData","filter","AccountPageDescription","content","actionBar","isVisible","ActionBar","Pagination","ml","list","Fragment","base","lg","WatchListItem","WatchlistTable","DataListDisplay","emptyText","Button","onClick","AddressModal","isAdd","DeleteAddressModal","PageTitle","__webpack_exports__","Z","children","allowCut","ref","useRef","needCut","setNeedCut","expanded","setExpanded","calculateCut","textHeight","current","offsetHeight","useEffect","resizeHandler","_debounce","addEventListener","removeEventListener","expand","gradient","useColorModeValue","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","marginBottom","maxHeight","overflow","style","WebkitLineClamp","WebkitBoxOrient","bottom","left","height","background","AddressInput","placeholder","backgroundColor","FormControl","isRequired","Input","isInvalid","Boolean","maxLength","ADDRESS_LENGTH","InputPlaceholder","text","CheckboxInput","handleChange","args","Checkbox","chakra","className","as","columnGap","props","DataFetchAlert","filterProps","hasActiveFilters","length","EmptySearchResult","emptyFilteredText","isOpen","renderContent","isAlertVisible","setAlertVisible","onModalClose","mutation","isMobile","useIsMobile","Modal","ModalOverlay","ModalContent","ModalHeader","textStyle","ModalCloseButton","ModalBody","mb","FormSubmitAlert","ModalFooter","isPending","flexDirection","Heading","sm","FormModal","renderForm","lineHeight","Alert","AlertDescription","isFancy","isInModal","errorMessage","message","FormLabel","order","isAnimated","motion","initial","opacity","scale","animate","transitionDuration","transitionTimingFunction","paddingY","borderColor","borderTopWidth","_last","borderBottomWidth","onFocusCapture","alignSelf","flexShrink","Tooltip","label","IconButton","TruncatedTextTooltip","ChakraTag","NOTIFICATIONS","NOTIFICATIONS_NAMES","AddressFormNotifications","control","renderCheckbox","Grid","templateColumns","gap","notification","incomingFieldName","outgoingFieldName","GridItem","gridColumnStart","gridColumnEnd","_notFirst","Controller","render","AddressModal_AddressForm","pending","setPending","formBackgroundColor","notificationsDefault","forEach","n","handleSubmit","formState","errors","isDirty","setError","useForm","defaultValues","tag","mode","formData","errorMap","payload","watchlist_id","renderAddressInput","renderTagInput","TagInput","form","noValidate","onSubmit","rules","pattern","ADDRESS_REGEXP","required","marginTop","AddressModal_AddressModal","AddressForm","renderModalContent","addressString","slice","DeleteModal"],"sourceRoot":""}