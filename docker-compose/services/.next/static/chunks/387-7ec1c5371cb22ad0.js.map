{"version":3,"file":"static/chunks/387-7ec1c5371cb22ad0.js","mappings":"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","sources":["webpack://_N_E/./lib/getCurrencyValue.ts","webpack://_N_E/./lib/getValueWithUnit.tsx","webpack://_N_E/./lib/hooks/useTimeAgoIncrement.tsx","webpack://_N_E/./stubs/tx.ts","webpack://_N_E/./ui/shared/CurrencyValue.tsx","webpack://_N_E/./ui/shared/SocketNewItemsNotice.tsx","webpack://_N_E/./ui/shared/Utilization/Utilization.tsx","webpack://_N_E/./ui/shared/entities/address/AddressEntityWithTokenFilter.tsx","webpack://_N_E/./ui/shared/address/AddressFromToIcon.tsx","webpack://_N_E/./ui/shared/address/utils.ts","webpack://_N_E/./ui/shared/address/AddressFromTo.tsx","webpack://_N_E/./ui/shared/chakra/Tag.tsx","webpack://_N_E/./ui/shared/statusTag/StatusTag.tsx","webpack://_N_E/./ui/shared/statusTag/TxStatus.tsx","webpack://_N_E/./ui/shared/tx/TxFeeStability.tsx","webpack://_N_E/./ui/shared/AdditionalInfoButton.tsx","webpack://_N_E/./ui/txs/TxAdditionalInfoContent.tsx","webpack://_N_E/./ui/txs/TxAdditionalInfoContainer.tsx","webpack://_N_E/./ui/txs/TxAdditionalInfo.tsx","webpack://_N_E/./node_modules/@chakra-ui/layout/dist/chunk-YGVX4ESO.mjs","webpack://_N_E/<anon>"],"sourcesContent":["import BigNumber from 'bignumber.js';\n\nimport { ZERO } from 'lib/consts';\n\ninterface Params {\n  value: string;\n  exchangeRate?: string | null;\n  accuracy?: number;\n  accuracyUsd?: number;\n  decimals?: string | null;\n}\n\nexport default function getCurrencyValue({ value, accuracy, accuracyUsd, decimals, exchangeRate }: Params) {\n  const valueCurr = BigNumber(value).div(BigNumber(10 ** Number(decimals || '18')));\n  const valueResult = accuracy ? valueCurr.dp(accuracy).toFormat() : valueCurr.toFormat();\n\n  let usdResult: string | undefined;\n  let usdBn = ZERO;\n\n  if (exchangeRate) {\n    const exchangeRateBn = new BigNumber(exchangeRate);\n    usdBn = valueCurr.times(exchangeRateBn);\n    if (accuracyUsd && !usdBn.isEqualTo(0)) {\n      const usdBnDp = usdBn.dp(accuracyUsd);\n      usdResult = usdBnDp.isEqualTo(0) ? usdBn.precision(accuracyUsd).toFormat() : usdBnDp.toFormat();\n    } else {\n      usdResult = usdBn.toFormat();\n    }\n  }\n\n  return { valueStr: valueResult, usd: usdResult, usdBn };\n}\n","import BigNumber from 'bignumber.js';\n\nimport type { Unit } from 'types/unit';\n\nimport { WEI, GWEI } from 'lib/consts';\n\nexport default function getValueWithUnit(value: string | number, unit: Unit = 'wei') {\n  let unitBn: BigNumber.Value;\n  switch (unit) {\n    case 'wei':\n      unitBn = WEI;\n      break;\n    case 'gwei':\n      unitBn = GWEI;\n      break;\n    default:\n      unitBn = new BigNumber(1);\n  }\n\n  const valueBn = new BigNumber(value);\n  const valueCurr = valueBn.dividedBy(unitBn);\n  return valueCurr;\n}\n","import React from 'react';\n\nimport { DAY, HOUR, MINUTE, SECOND } from 'lib/consts';\nimport dayjs from 'lib/date/dayjs';\n\nfunction getUnits(diff: number) {\n  if (diff < MINUTE) {\n    return [ SECOND, MINUTE ];\n  }\n\n  if (diff < HOUR) {\n    return [ MINUTE, HOUR ];\n  }\n\n  if (diff < DAY) {\n    return [ HOUR, DAY ];\n  }\n\n  return [ DAY, 2 * DAY ];\n}\n\nfunction getUpdateParams(ts: string) {\n  const timeDiff = Date.now() - new Date(ts).getTime();\n  const [ unit, higherUnit ] = getUnits(timeDiff);\n\n  if (unit === DAY) {\n    return { interval: DAY };\n  }\n\n  const leftover = unit - timeDiff % unit;\n\n  return {\n    startTimeout: unit === SECOND ?\n      0 :\n      // here we assume that in current dayjs locale time difference is rounded by Math.round function\n      // so we have to update displayed value whenever time comes over the middle of the unit interval\n      // since it will be rounded to the upper bound\n      (leftover < unit / 2 ? leftover + unit / 2 : leftover - unit / 2) + SECOND,\n    endTimeout: higherUnit - timeDiff + SECOND,\n    interval: unit,\n  };\n}\n\nexport default function useTimeAgoIncrement(ts: string | null, isEnabled?: boolean) {\n  const [ value, setValue ] = React.useState(ts ? dayjs(ts).fromNow() : null);\n\n  React.useEffect(() => {\n    if (ts !== null) {\n      const timeouts: Array<number> = [];\n      const intervals: Array<number> = [];\n\n      const startIncrement = () => {\n        const { startTimeout, interval, endTimeout } = getUpdateParams(ts);\n        if (!startTimeout && !endTimeout) {\n          return;\n        }\n\n        let intervalId: number;\n\n        const startTimeoutId = window.setTimeout(() => {\n          setValue(dayjs(ts).fromNow());\n\n          intervalId = window.setInterval(() => {\n            setValue(dayjs(ts).fromNow());\n          }, interval);\n\n          intervals.push(intervalId);\n        }, startTimeout);\n\n        const endTimeoutId = window.setTimeout(() => {\n          window.clearInterval(intervalId);\n          startIncrement();\n        }, endTimeout);\n\n        timeouts.push(startTimeoutId);\n        timeouts.push(endTimeoutId);\n      };\n\n      isEnabled && startIncrement();\n\n      return () => {\n        timeouts.forEach(window.clearTimeout);\n        intervals.forEach(window.clearInterval);\n      };\n    }\n  }, [ isEnabled, ts ]);\n\n  return value;\n}\n","import type { RawTracesResponse } from 'types/api/rawTrace';\nimport type { Transaction } from 'types/api/transaction';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const TX_HASH = '0x3ed9d81e7c1001bdda1caa1dc62c0acbbe3d2c671cdc20dc1e65efdaa4186967';\n\nexport const TX: Transaction = {\n  timestamp: '2022-11-11T11:11:11.000000Z',\n  fee: {\n    type: 'actual',\n    value: '2100000000000000',\n  },\n  gas_limit: '21000',\n  block: 9004925,\n  status: 'ok',\n  method: 'placeholder',\n  confirmations: 71,\n  type: 0,\n  exchange_rate: '1828.71',\n  to: ADDRESS_PARAMS,\n  tx_burnt_fee: null,\n  max_fee_per_gas: null,\n  result: 'success',\n  hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  gas_price: '100000000000',\n  priority_fee: null,\n  base_fee_per_gas: '24',\n  from: ADDRESS_PARAMS,\n  token_transfers: null,\n  tx_types: [\n    'coin_transfer',\n  ],\n  gas_used: '21000',\n  created_contract: null,\n  position: 0,\n  nonce: 295929,\n  has_error_in_internal_txs: false,\n  actions: [],\n  decoded_input: null,\n  token_transfers_overflow: false,\n  raw_input: '0x',\n  value: '42000420000000000000',\n  max_priority_fee_per_gas: null,\n  revert_reason: null,\n  confirmation_duration: [\n    0,\n    14545,\n  ],\n  tx_tag: null,\n};\n\nexport const TX_ZKEVM_L2: Transaction = {\n  ...TX,\n  zkevm_batch_number: 12345,\n  zkevm_sequence_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  zkevm_status: 'Confirmed by Sequencer',\n  zkevm_verify_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n};\n\nexport const TX_RAW_TRACE: RawTracesResponse = [];\n","import { Box, Text, chakra, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\n\ninterface Props {\n  value: string;\n  currency?: string;\n  exchangeRate?: string | null;\n  className?: string;\n  accuracy?: number;\n  accuracyUsd?: number;\n  decimals?: string | null;\n  isLoading?: boolean;\n}\n\nconst CurrencyValue = ({ value, currency = '', decimals, exchangeRate, className, accuracy, accuracyUsd, isLoading }: Props) => {\n  if (isLoading) {\n    return (\n      <Skeleton className={ className } display=\"inline-block\">0.00 ($0.00)</Skeleton>\n    );\n  }\n\n  if (value === undefined || value === null) {\n    return (\n      <Box as=\"span\" className={ className }>\n        <Text>N/A</Text>\n      </Box>\n    );\n  }\n  const { valueStr: valueResult, usd: usdResult } = getCurrencyValue({ value, accuracy, accuracyUsd, exchangeRate, decimals });\n\n  return (\n    <Box as=\"span\" className={ className } display=\"inline-flex\" rowGap={ 3 } columnGap={ 1 }>\n      <Text display=\"inline-block\">\n        { valueResult }{ currency ? ` ${ currency }` : '' }\n      </Text>\n      { usdResult && <Text as=\"span\" variant=\"secondary\" fontWeight={ 400 }>(${ usdResult })</Text> }\n    </Box>\n  );\n};\n\nexport default React.memo(chakra(CurrencyValue));\n","import { Alert, Link, Text, chakra, useTheme, useColorModeValue, Skeleton, Tr, Td } from '@chakra-ui/react';\nimport { transparentize } from '@chakra-ui/theme-tools';\nimport React from 'react';\n\ninterface InjectedProps {\n  content: React.ReactNode;\n}\n\ninterface Props {\n  type?: 'transaction' | 'token_transfer' | 'deposit' | 'block';\n  children?: (props: InjectedProps) => JSX.Element;\n  className?: string;\n  url: string;\n  alert?: string;\n  num?: number;\n  isLoading?: boolean;\n}\n\nconst SocketNewItemsNotice = chakra(({ children, className, url, num, alert, type = 'transaction', isLoading }: Props) => {\n  const theme = useTheme();\n\n  const alertContent = (() => {\n    if (alert) {\n      return alert;\n    }\n\n    let name;\n\n    switch (type) {\n      case 'token_transfer':\n        name = 'token transfer';\n        break;\n      case 'deposit':\n        name = 'deposit';\n        break;\n      case 'block':\n        name = 'block';\n        break;\n      default:\n        name = 'transaction';\n        break;\n    }\n\n    if (!num) {\n      return `scanning new ${ name }s...`;\n    }\n\n    return (\n      <>\n        <Link href={ url }>{ num.toLocaleString() } more { name }{ num > 1 ? 's' : '' }</Link>\n        <Text whiteSpace=\"pre\"> ha{ num > 1 ? 've' : 's' } come in</Text>\n      </>\n    );\n  })();\n\n  const color = useColorModeValue('blackAlpha.800', 'whiteAlpha.800');\n  const bgColor = useColorModeValue('orange.50', transparentize('orange.200', 0.16)(theme));\n\n  const content = !isLoading ? (\n    <Alert\n      className={ className }\n      status=\"warning\"\n      px={ 4 }\n      py=\"6px\"\n      fontWeight={ 400 }\n      fontSize=\"sm\"\n      lineHeight={ 5 }\n      bgColor={ bgColor }\n      color={ color }\n    >\n      { alertContent }\n    </Alert>\n  ) : <Skeleton className={ className } h=\"33px\"/>;\n\n  return children ? children({ content }) : content;\n});\n\nexport default SocketNewItemsNotice;\n\nexport const Desktop = ({ ...props }: Props) => {\n  return (\n    <SocketNewItemsNotice\n      borderRadius={ props.isLoading ? 'sm' : 0 }\n      h={ props.isLoading ? 5 : 'auto' }\n      maxW={ props.isLoading ? '215px' : undefined }\n      w=\"100%\"\n      mx={ props.isLoading ? 4 : 0 }\n      my={ props.isLoading ? '6px' : 0 }\n      { ...props }\n    >\n      { ({ content }) => <Tr><Td colSpan={ 100 } p={ 0 }>{ content }</Td></Tr> }\n    </SocketNewItemsNotice>\n  );\n};\n\nexport const Mobile = ({ ...props }: Props) => {\n  return (\n    <SocketNewItemsNotice\n      borderBottomRadius={ 0 }\n      { ...props }\n    />\n  );\n};\n","import { Box, Flex, chakra, useColorModeValue, Skeleton } from '@chakra-ui/react';\nimport clamp from 'lodash/clamp';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  value: number;\n  colorScheme?: 'green' | 'gray';\n  isLoading?: boolean;\n}\n\nconst WIDTH = 50;\n\nconst Utilization = ({ className, value, colorScheme = 'green', isLoading }: Props) => {\n  const valueString = (clamp(value * 100 || 0, 0, 100)).toLocaleString(undefined, { maximumFractionDigits: 2 }) + '%';\n  const colorGrayScheme = useColorModeValue('gray.500', 'gray.400');\n  const color = colorScheme === 'gray' ? colorGrayScheme : 'green.500';\n\n  return (\n    <Flex className={ className } alignItems=\"center\" columnGap={ 2 }>\n      <Skeleton isLoaded={ !isLoading } w={ `${ WIDTH }px` } h=\"4px\" borderRadius=\"full\" overflow=\"hidden\">\n        <Box bg={ useColorModeValue('blackAlpha.200', 'whiteAlpha.200') } h=\"100%\">\n          <Box bg={ color } w={ valueString } h=\"100%\"/>\n        </Box>\n      </Skeleton>\n      <Skeleton isLoaded={ !isLoading } color={ color } fontWeight=\"bold\">\n        <span>\n          { valueString }\n        </span>\n      </Skeleton>\n    </Flex>\n  );\n};\n\nexport default React.memo(chakra(Utilization));\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport * as AddressEntity from './AddressEntity';\n\ninterface Props extends AddressEntity.EntityProps {\n  tokenHash: string;\n}\n\nconst AddressEntityWithTokenFilter = (props: Props) => {\n  const defaultHref = route({\n    pathname: '/address/[hash]',\n    query: {\n      ...props.query,\n      hash: props.address.hash,\n      tab: 'token_transfers',\n      token: props.tokenHash,\n      scroll_to_tabs: 'true',\n    },\n  });\n\n  return (\n    <AddressEntity.default { ...props } href={ props.href ?? defaultHref }/>\n  );\n};\n\nexport default chakra(AddressEntityWithTokenFilter);\n","import { Tooltip, chakra, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport type { TxCourseType } from './utils';\n\ninterface Props {\n  isLoading?: boolean;\n  type: TxCourseType;\n  className?: string;\n}\n\nconst AddressFromToIcon = ({ isLoading, type, className }: Props) => {\n  const styles = {\n    'in': {\n      color: useColorModeValue('green.500', 'green.200'),\n      bgColor: useColorModeValue('green.50', 'green.800'),\n    },\n    out: {\n      color: useColorModeValue('yellow.600', 'yellow.500'),\n      bgColor: useColorModeValue('orange.50', 'yellow.900'),\n    },\n    self: {\n      color: useColorModeValue('blackAlpha.400', 'whiteAlpha.400'),\n      bgColor: useColorModeValue('blackAlpha.50', 'whiteAlpha.50'),\n    },\n    unspecified: {\n      color: useColorModeValue('gray.500', 'gray.300'),\n      bgColor: 'transparent',\n    },\n  };\n  const labels = {\n    'in': 'Incoming txn',\n    out: 'Outgoing txn',\n    self: 'Txn to the same address',\n  };\n\n  const icon = (\n    <IconSvg\n      name=\"arrows/east\"\n      { ...(styles[type]) }\n      className={ className }\n      isLoading={ isLoading }\n      boxSize={ 5 }\n      flexShrink={ 0 }\n      borderRadius=\"sm\"\n    />\n  );\n\n  if (type === 'unspecified') {\n    return icon;\n  }\n\n  return (\n    <Tooltip label={ labels[type] }>\n      { icon }\n    </Tooltip>\n  );\n};\n\nexport default React.memo(chakra(AddressFromToIcon));\n","export type TxCourseType = 'in' | 'out' | 'self' | 'unspecified';\n\nexport function getTxCourseType(from: string, to: string | undefined, current?: string): TxCourseType {\n  if (current === undefined) {\n    return 'unspecified';\n  }\n\n  if (to && from === to && from === current) {\n    return 'self';\n  }\n\n  if (from === current) {\n    return 'out';\n  }\n\n  if (to && to === current) {\n    return 'in';\n  }\n\n  return 'unspecified';\n}\n","import type { ThemeTypings } from '@chakra-ui/react';\nimport { Flex, chakra, useBreakpointValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressParam } from 'types/api/addressParams';\n\nimport type { EntityProps } from 'ui/shared/entities/address/AddressEntity';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport AddressEntityWithTokenFilter from 'ui/shared/entities/address/AddressEntityWithTokenFilter';\n\nimport AddressFromToIcon from './AddressFromToIcon';\nimport { getTxCourseType } from './utils';\n\ntype Mode = 'compact' | 'long';\n\ninterface Props {\n  from: AddressParam;\n  to: AddressParam | null;\n  current?: string;\n  mode?: Mode | Partial<Record<ThemeTypings['breakpoints'], Mode>>;\n  className?: string;\n  isLoading?: boolean;\n  tokenHash?: string;\n  truncation?: EntityProps['truncation'];\n  noIcon?: boolean;\n}\n\nconst AddressFromTo = ({ from, to, current, mode: modeProp, className, isLoading, tokenHash = '', truncation, noIcon }: Props) => {\n  const mode = useBreakpointValue(\n    {\n      base: (typeof modeProp === 'object' ? modeProp.base : modeProp),\n      lg: (typeof modeProp === 'object' ? modeProp.lg : modeProp),\n      xl: (typeof modeProp === 'object' ? modeProp.xl : modeProp),\n    },\n  ) ?? 'long';\n\n  const Entity = tokenHash ? AddressEntityWithTokenFilter : AddressEntity;\n\n  if (mode === 'compact') {\n    return (\n      <Flex className={ className } flexDir=\"column\" rowGap={ 3 }>\n        <Flex alignItems=\"center\" columnGap={ 2 }>\n          <AddressFromToIcon\n            isLoading={ isLoading }\n            type={ getTxCourseType(from.hash, to?.hash, current) }\n            transform=\"rotate(90deg)\"\n          />\n          <Entity\n            address={ from }\n            isLoading={ isLoading }\n            noLink={ current === from.hash }\n            noCopy={ current === from.hash }\n            noIcon={ noIcon }\n            tokenHash={ tokenHash }\n            truncation={ truncation }\n            maxW={ truncation === 'constant' ? undefined : 'calc(100% - 28px)' }\n            w=\"min-content\"\n          />\n        </Flex>\n        { to ? (\n          <Entity\n            address={ to }\n            isLoading={ isLoading }\n            noLink={ current === to.hash }\n            noCopy={ current === to.hash }\n            noIcon={ noIcon }\n            tokenHash={ tokenHash }\n            truncation={ truncation }\n            maxW={ truncation === 'constant' ? undefined : 'calc(100% - 28px)' }\n            w=\"min-content\"\n            ml=\"28px\"\n          />\n        ) : <span>-</span> }\n      </Flex>\n    );\n  }\n\n  const isOutgoing = current === from.hash;\n  const iconSizeWithMargins = (5 + (isOutgoing ? 4 : 2) + 3) * 4;\n\n  return (\n    <Flex className={ className } alignItems=\"center\">\n      <Entity\n        address={ from }\n        isLoading={ isLoading }\n        noLink={ isOutgoing }\n        noCopy={ isOutgoing }\n        noIcon={ noIcon }\n        tokenHash={ tokenHash }\n        truncation={ truncation }\n        maxW={ truncation === 'constant' ? undefined : `calc(50% - ${ iconSizeWithMargins / 2 }px)` }\n        mr={ isOutgoing ? 4 : 2 }\n      />\n      <AddressFromToIcon\n        isLoading={ isLoading }\n        type={ getTxCourseType(from.hash, to?.hash, current) }\n      />\n      { to ? (\n        <Entity\n          address={ to }\n          isLoading={ isLoading }\n          noLink={ current === to.hash }\n          noCopy={ current === to.hash }\n          noIcon={ noIcon }\n          tokenHash={ tokenHash }\n          truncation={ truncation }\n          maxW={ truncation === 'constant' ? undefined : `calc(50% - ${ iconSizeWithMargins / 2 }px)` }\n          ml={ 3 }\n        />\n      ) : <span>-</span> }\n    </Flex>\n  );\n};\n\nexport default chakra(AddressFromTo);\n","import { Skeleton, Tag as ChakraTag } from '@chakra-ui/react';\nimport type { TagProps } from '@chakra-ui/react';\nimport React from 'react';\n\nimport TruncatedTextTooltip from 'ui/shared/TruncatedTextTooltip';\n\ninterface Props extends TagProps {\n  isLoading?: boolean;\n}\n\nconst Tag = ({ isLoading, ...props }: Props, ref: React.ForwardedRef<HTMLDivElement>) => {\n\n  if (props.isTruncated && typeof props.children === 'string') {\n    if (!props.children) {\n      return null;\n    }\n\n    return (\n      <Skeleton isLoaded={ !isLoading } display=\"inline-block\" borderRadius=\"sm\" maxW=\"100%\">\n        <TruncatedTextTooltip label={ props.children }>\n          <ChakraTag { ...props } ref={ ref }/>\n        </TruncatedTextTooltip>\n      </Skeleton>\n    );\n  }\n  return (\n    <Skeleton isLoaded={ !isLoading } display=\"inline-block\" borderRadius=\"sm\" maxW=\"100%\">\n      <ChakraTag { ...props } ref={ ref }/>\n    </Skeleton>\n  );\n};\n\nexport default React.memo(React.forwardRef(Tag));\n","import { TagLabel, Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Tag from 'ui/shared/chakra/Tag';\nimport type { IconName } from 'ui/shared/IconSvg';\nimport IconSvg from 'ui/shared/IconSvg';\n\nexport type StatusTagType = 'ok' | 'error' | 'pending';\n\nexport interface Props {\n  type: 'ok' | 'error' | 'pending';\n  text: string;\n  errorText?: string | null;\n  isLoading?: boolean;\n}\n\nconst StatusTag = ({ type, text, errorText, isLoading }: Props) => {\n  let icon: IconName;\n  let colorScheme;\n\n  switch (type) {\n    case 'ok':\n      icon = 'status/success';\n      colorScheme = 'green';\n      break;\n    case 'error':\n      icon = 'status/error';\n      colorScheme = 'red';\n      break;\n    case 'pending':\n      icon = 'status/pending';\n      // FIXME: it's not gray on mockups\n      // need to implement new color scheme or redefine colors here\n      colorScheme = 'gray';\n      break;\n  }\n\n  return (\n    <Tooltip label={ errorText }>\n      <Tag colorScheme={ colorScheme } display=\"inline-flex\" isLoading={ isLoading }>\n        <IconSvg boxSize={ 2.5 } name={ icon } mr={ 2 }/>\n        <TagLabel>{ text }</TagLabel>\n      </Tag>\n    </Tooltip>\n  );\n};\n\nexport default StatusTag;\n","import React from 'react';\n\nimport type { Transaction } from 'types/api/transaction';\n\nimport type { StatusTagType } from './StatusTag';\nimport StatusTag from './StatusTag';\n\nexport interface Props {\n  status: Transaction['status'];\n  errorText?: string | null;\n  isLoading?: boolean;\n}\n\nconst TxStatus = ({ status, errorText, isLoading }: Props) => {\n  let text;\n  let type: StatusTagType;\n\n  switch (status) {\n    case 'ok':\n      text = 'Success';\n      type = 'ok';\n      break;\n    case 'error':\n      text = 'Failed';\n      type = 'error';\n      break;\n    case null:\n      text = 'Pending';\n      type = 'pending';\n      break;\n  }\n\n  return <StatusTag type={ type } text={ text } errorText={ errorText } isLoading={ isLoading }/>;\n};\n\nexport default TxStatus;\n","import { Skeleton, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Transaction } from 'types/api/transaction';\nimport type { ExcludeUndefined } from 'types/utils';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\n\ninterface Props {\n  data: ExcludeUndefined<Transaction['stability_fee']>;\n  isLoading?: boolean;\n  hideUsd?: boolean;\n  accuracy?: number;\n  className?: string;\n}\n\nconst TxFeeStability = ({ data, isLoading, hideUsd, accuracy, className }: Props) => {\n\n  const { valueStr, usd } = getCurrencyValue({\n    value: data.total_fee,\n    exchangeRate: data.token.exchange_rate,\n    decimals: data.token.decimals,\n    accuracy,\n  });\n\n  return (\n    <Skeleton whiteSpace=\"pre\" isLoaded={ !isLoading } display=\"flex\" className={ className }>\n      <span>{ valueStr } </span>\n      { valueStr !== '0' && <TokenEntity token={ data.token } noCopy onlySymbol w=\"auto\" ml={ 1 }/> }\n      { usd && !hideUsd && <chakra.span color=\"text_secondary\"> (${ usd })</chakra.span> }\n    </Skeleton>\n  );\n};\n\nexport default React.memo(chakra(TxFeeStability));\n","import {\n  useColorModeValue,\n  chakra,\n  Button,\n  Skeleton,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  isOpen?: boolean;\n  isLoading?: boolean;\n  className?: string;\n  onClick?: () => void;\n}\n\nconst AdditionalInfoButton = ({ isOpen, onClick, className, isLoading }: Props, ref: React.ForwardedRef<HTMLButtonElement>) => {\n\n  const infoBgColor = useColorModeValue('blue.50', 'gray.600');\n\n  if (isLoading) {\n    return <Skeleton boxSize={ 6 } borderRadius=\"sm\" flexShrink={ 0 }/>;\n  }\n\n  return (\n    <Button\n      variant=\"unstyled\"\n      display=\"inline-flex\"\n      alignItems=\"center\"\n      className={ className }\n      ref={ ref }\n      background={ isOpen ? infoBgColor : 'unset' }\n      borderRadius=\"8px\"\n      w=\"24px\"\n      h=\"24px\"\n      onClick={ onClick }\n      cursor=\"pointer\"\n      flexShrink={ 0 }\n    >\n      <IconSvg\n        name=\"info\"\n        boxSize={ 5 }\n        color=\"link\"\n        _hover={{ color: 'link_hovered' }}\n      />\n    </Button>\n  );\n};\n\nexport default chakra(React.forwardRef(AdditionalInfoButton));\n","import { Box, Heading, Text, Flex } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { Transaction } from 'types/api/transaction';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\nimport getValueWithUnit from 'lib/getValueWithUnit';\nimport { currencyUnits } from 'lib/units';\nimport CurrencyValue from 'ui/shared/CurrencyValue';\nimport LinkInternal from 'ui/shared/LinkInternal';\nimport TextSeparator from 'ui/shared/TextSeparator';\nimport TxFeeStability from 'ui/shared/tx/TxFeeStability';\nimport Utilization from 'ui/shared/Utilization/Utilization';\n\nconst TxAdditionalInfoContent = ({ tx }: { tx: Transaction }) => {\n  const sectionProps = {\n    borderBottom: '1px solid',\n    borderColor: 'divider',\n    paddingBottom: 4,\n  };\n\n  const sectionTitleProps = {\n    color: 'gray.500',\n    fontWeight: 600,\n    marginBottom: 3,\n    fontSize: 'sm',\n  };\n\n  return (\n    <>\n      <Heading as=\"h4\" size=\"sm\" mb={ 6 }>Additional info </Heading>\n      { !config.UI.views.tx.hiddenFields?.tx_fee && (\n        <Box { ...sectionProps } mb={ 4 }>\n          { (tx.stability_fee !== undefined || tx.fee.value !== null) && (\n            <>\n              <Text { ...sectionTitleProps }>Transaction fee</Text>\n              { tx.stability_fee ? (\n                <TxFeeStability data={ tx.stability_fee }/>\n              ) : (\n                <Flex>\n                  <CurrencyValue\n                    value={ tx.fee.value }\n                    currency={ config.UI.views.tx.hiddenFields?.fee_currency ? '' : currencyUnits.ether }\n                    exchangeRate={ tx.exchange_rate }\n                    accuracyUsd={ 2 }\n                    flexWrap=\"wrap\"\n                    rowGap={ 0 }\n                  />\n                </Flex>\n              ) }\n            </>\n          ) }\n        </Box>\n      ) }\n      { tx.gas_used !== null && (\n        <Box { ...sectionProps } mb={ 4 }>\n          <Text { ...sectionTitleProps }>Gas limit & usage by transaction</Text>\n          <Flex>\n            <Text>{ BigNumber(tx.gas_used).toFormat() }</Text>\n            <TextSeparator/>\n            <Text>{ BigNumber(tx.gas_limit).toFormat() }</Text>\n            <Utilization ml={ 4 } value={ Number(BigNumber(tx.gas_used).dividedBy(BigNumber(tx.gas_limit)).toFixed(2)) }/>\n          </Flex>\n        </Box>\n      ) }\n      { !config.UI.views.tx.hiddenFields?.gas_fees &&\n        (tx.base_fee_per_gas !== null || tx.max_fee_per_gas !== null || tx.max_priority_fee_per_gas !== null) && (\n        <Box { ...sectionProps } mb={ 4 }>\n          <Text { ...sectionTitleProps }>Gas fees ({ currencyUnits.gwei })</Text>\n          { tx.base_fee_per_gas !== null && (\n            <Box>\n              <Text as=\"span\" fontWeight=\"500\">Base: </Text>\n              <Text fontWeight=\"600\" as=\"span\">{ getValueWithUnit(tx.base_fee_per_gas, 'gwei').toFormat() }</Text>\n            </Box>\n          ) }\n          { tx.max_fee_per_gas !== null && (\n            <Box mt={ 1 }>\n              <Text as=\"span\" fontWeight=\"500\">Max: </Text>\n              <Text fontWeight=\"600\" as=\"span\">{ getValueWithUnit(tx.max_fee_per_gas, 'gwei').toFormat() }</Text>\n            </Box>\n          ) }\n          { tx.max_priority_fee_per_gas !== null && (\n            <Box mt={ 1 }>\n              <Text as=\"span\" fontWeight=\"500\">Max priority: </Text>\n              <Text fontWeight=\"600\" as=\"span\">{ getValueWithUnit(tx.max_priority_fee_per_gas, 'gwei').toFormat() }</Text>\n            </Box>\n          ) }\n        </Box>\n      ) }\n      <Box { ...sectionProps } mb={ 4 }>\n        <Text { ...sectionTitleProps }>Others</Text>\n        <Box>\n          <Text as=\"span\" fontWeight=\"500\">Txn type: </Text>\n          <Text fontWeight=\"600\" as=\"span\">{ tx.type }</Text>\n          { tx.type === 2 && <Text fontWeight=\"400\" as=\"span\" ml={ 1 } color=\"gray.500\">(EIP-1559)</Text> }\n        </Box>\n        <Box mt={ 1 }>\n          <Text as=\"span\" fontWeight=\"500\">Nonce: </Text>\n          <Text fontWeight=\"600\" as=\"span\">{ tx.nonce }</Text>\n        </Box>\n        <Box mt={ 1 }>\n          <Text as=\"span\" fontWeight=\"500\">Position: </Text>\n          <Text fontWeight=\"600\" as=\"span\">{ tx.position }</Text>\n        </Box>\n      </Box>\n      <LinkInternal fontSize=\"sm\" href={ route({ pathname: '/tx/[hash]', query: { hash: tx.hash } }) }>More details</LinkInternal>\n    </>\n  );\n};\n\nexport default React.memo(TxAdditionalInfoContent);\n","import { Box, Divider, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\n\nimport TxAdditionalInfoContent from './TxAdditionalInfoContent';\n\ninterface Props {\n  hash: string;\n}\n\nconst TxAdditionalInfoContainer = ({ hash }: Props) => {\n  const { data, isError, isPending } = useApiQuery('tx', {\n    pathParams: { hash },\n    queryOptions: {\n      refetchOnMount: false,\n    },\n  });\n\n  if (isPending) {\n    return (\n      <Box>\n        <Skeleton w=\"130px\" h=\"24px\" borderRadius=\"full\" mb={ 6 }/>\n        <Box>\n          <Skeleton w=\"110px\" h=\"16px\" borderRadius=\"full\" mb={ 3 }/>\n          <Skeleton w=\"100%\" h=\"16px\" borderRadius=\"full\"/>\n        </Box>\n        <Divider my={ 4 }/>\n        <Box>\n          <Skeleton w=\"110px\" h=\"16px\" borderRadius=\"full\" mb={ 3 }/>\n          <Skeleton w=\"100%\" h=\"16px\" borderRadius=\"full\"/>\n        </Box>\n        <Divider my={ 4 }/>\n        <Box>\n          <Skeleton w=\"110px\" h=\"16px\" borderRadius=\"full\" mb={ 3 }/>\n          <Skeleton w=\"100%\" h=\"16px\" borderRadius=\"full\"/>\n        </Box>\n        <Divider my={ 4 }/>\n        <Box>\n          <Skeleton w=\"110px\" h=\"16px\" borderRadius=\"full\" mb={ 3 }/>\n          <Skeleton w=\"75%\" h=\"16px\" borderRadius=\"full\"/>\n          <Skeleton w=\"75%\" h=\"16px\" borderRadius=\"full\" mt={ 1 }/>\n          <Skeleton w=\"75%\" h=\"16px\" borderRadius=\"full\" mt={ 1 }/>\n        </Box>\n        <Divider my={ 4 }/>\n        <Skeleton w=\"80px\" h=\"16px\" borderRadius=\"full\"/>\n      </Box>\n    );\n  }\n\n  if (isError) {\n    return <DataFetchAlert/>;\n  }\n\n  return <TxAdditionalInfoContent tx={ data }/>;\n};\n\nexport default React.memo(TxAdditionalInfoContainer);\n","import {\n  chakra,\n  Modal,\n  ModalContent,\n  ModalCloseButton,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Transaction } from 'types/api/transaction';\n\nimport AdditionalInfoButton from 'ui/shared/AdditionalInfoButton';\n\nimport TxAdditionalInfoContainer from './TxAdditionalInfoContainer';\nimport TxAdditionalInfoContent from './TxAdditionalInfoContent';\n\ntype Props =\n  ({\n    hash: string;\n    tx?: undefined;\n  } |\n  {\n    hash?: undefined;\n    tx: Transaction;\n  }) & {\n    isMobile?: boolean;\n    isLoading?: boolean;\n    className?: string;\n  }\n\nconst TxAdditionalInfo = ({ hash, tx, isMobile, isLoading, className }: Props) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const content = hash !== undefined ? <TxAdditionalInfoContainer hash={ hash }/> : <TxAdditionalInfoContent tx={ tx }/>;\n\n  if (isMobile) {\n    return (\n      <>\n        <AdditionalInfoButton onClick={ onOpen } isLoading={ isLoading } className={ className }/>\n        <Modal isOpen={ isOpen } onClose={ onClose } size=\"full\">\n          <ModalContent paddingTop={ 4 }>\n            <ModalCloseButton/>\n            { content }\n          </ModalContent>\n        </Modal>\n      </>\n    );\n  }\n  return (\n    <Popover placement=\"right-start\" openDelay={ 300 } isLazy>\n      { ({ isOpen }) => (\n        <>\n          <PopoverTrigger>\n            <AdditionalInfoButton isOpen={ isOpen } isLoading={ isLoading } className={ className }/>\n          </PopoverTrigger>\n          <PopoverContent border=\"1px solid\" borderColor=\"divider\">\n            <PopoverBody>\n              { content }\n            </PopoverBody>\n          </PopoverContent>\n        </>\n      ) }\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(TxAdditionalInfo));\n","// src/divider.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = forwardRef(function Divider2(props, ref) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props);\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props);\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    chakra.hr,\n    {\n      ref,\n      \"aria-orientation\": orientation,\n      ...rest,\n      __css: {\n        ...styles,\n        border: \"0\",\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css\n      },\n      className: cx(\"chakra-divider\", className)\n    }\n  );\n});\nDivider.displayName = \"Divider\";\n\nexport {\n  Divider\n};\n"],"names":["getCurrencyValue","param","usdResult","value","accuracy","accuracyUsd","decimals","exchangeRate","valueCurr","BigNumber","div","Number","valueResult","dp","toFormat","usdBn","ZERO","exchangeRateBn","times","isEqualTo","usdBnDp","precision","valueStr","usd","getValueWithUnit","unitBn","unit","WEI","GWEI","valueBn","dividedBy","useTimeAgoIncrement","ts","isEnabled","setValue","React","dayjs","fromNow","timeouts","intervals","startIncrement","intervalId","startTimeout","interval","endTimeout","getUpdateParams","timeDiff","Date","now","getTime","higherUnit","MINUTE","SECOND","diff","HOUR","DAY","leftover","startTimeoutId","window","setTimeout","setInterval","push","endTimeoutId","clearInterval","forEach","clearTimeout","TX_HASH","TX","timestamp","fee","type","gas_limit","block","status","method","confirmations","exchange_rate","to","ADDRESS_PARAMS","tx_burnt_fee","max_fee_per_gas","result","hash","gas_price","priority_fee","base_fee_per_gas","from","token_transfers","tx_types","gas_used","created_contract","position","nonce","has_error_in_internal_txs","actions","decoded_input","token_transfers_overflow","raw_input","max_priority_fee_per_gas","revert_reason","confirmation_duration","tx_tag","TX_ZKEVM_L2","zkevm_batch_number","zkevm_sequence_hash","zkevm_status","zkevm_verify_hash","TX_RAW_TRACE","__webpack_exports__","Z","chakra","currency","className","isLoading","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Skeleton","display","Box","as","Text","jsxs","rowGap","columnGap","concat","variant","fontWeight","SocketNewItemsNotice","children","url","num","alert","theme","useTheme","alertContent","name","Fragment","Link","href","toLocaleString","whiteSpace","color","useColorModeValue","bgColor","transparentize","content","h","Alert","px","py","fontSize","lineHeight","ZP","Desktop","props","borderRadius","maxW","undefined","w","mx","my","Tr","Td","colSpan","p","Mobile","borderBottomRadius","colorScheme","valueString","lodash_clamp__WEBPACK_IMPORTED_MODULE_1___default","maximumFractionDigits","colorGrayScheme","Flex","alignItems","isLoaded","overflow","bg","span","address_AddressEntityWithTokenFilter","defaultHref","route","pathname","query","address","tab","token","tokenHash","scroll_to_tabs","jsx_runtime","AddressEntity","address_AddressFromToIcon","styles","out","self","unspecified","icon","IconSvg","boxSize","flexShrink","Tooltip","label","labels","getTxCourseType","current","address_AddressFromTo","useBreakpointValue","mode","modeProp","truncation","noIcon","base","lg","xl","Entity","AddressEntityWithTokenFilter","flexDir","AddressFromToIcon","transform","noLink","noCopy","ml","isOutgoing","iconSizeWithMargins","mr","ref","isTruncated","TruncatedTextTooltip","ChakraTag","text","errorText","Tag","TagLabel","StatusTag","data","hideUsd","total_fee","TokenEntity","onlySymbol","shared_AdditionalInfoButton","isOpen","onClick","infoBgColor","Button","background","cursor","_hover","txs_TxAdditionalInfoContent","config","tx","sectionProps","borderBottom","borderColor","paddingBottom","sectionTitleProps","marginBottom","Heading","size","mb","UI","views","hiddenFields","tx_fee","stability_fee","TxFeeStability","CurrencyValue","fee_currency","currencyUnits","ether","flexWrap","TextSeparator","Utilization","toFixed","gas_fees","gwei","mt","LinkInternal","txs_TxAdditionalInfoContainer","isError","isPending","useApiQuery","pathParams","queryOptions","refetchOnMount","Divider","DataFetchAlert","TxAdditionalInfoContent","txs_TxAdditionalInfo","isMobile","onOpen","onClose","useDisclosure","TxAdditionalInfoContainer","AdditionalInfoButton","Modal","ModalContent","paddingTop","ModalCloseButton","Popover","placement","openDelay","isLazy","PopoverTrigger","PopoverContent","border","PopoverBody","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__","G","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderWidth","borderStyle","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_2__","mq","orientation","__css","rest","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__","Lr","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__","m","hr","dividerStyles","vertical","height","horizontal","width","_chakra_ui_shared_utils__WEBPACK_IMPORTED_MODULE_5__","cx","displayName"],"sourceRoot":""}