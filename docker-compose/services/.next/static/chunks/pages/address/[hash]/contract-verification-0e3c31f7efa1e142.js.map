{"version":3,"file":"static/chunks/pages/address/[hash]/contract-verification-0e3c31f7efa1e142.js","mappings":"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","sources":["webpack://_N_E/?e6b4","webpack://_N_E/./ui/pages/ContractVerificationForAddress.tsx","webpack://_N_E/./pages/address/[hash]/contract-verification.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/address/[hash]/contract-verification\",\n      function () {\n        return require(\"private-next-pages/address/[hash]/contract-verification.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/address/[hash]/contract-verification\"])\n      });\n    }\n  ","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { SmartContractVerificationMethod } from 'types/api/contract';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport ContractVerificationForm from 'ui/contractVerification/ContractVerificationForm';\nimport useFormConfigQuery from 'ui/contractVerification/useFormConfigQuery';\nimport ContentLoader from 'ui/shared/ContentLoader';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport PageTitle from 'ui/shared/Page/PageTitle';\n\nconst ContractVerificationForAddress = () => {\n  const appProps = useAppContext();\n  const router = useRouter();\n\n  const hash = getQueryParamString(router.query.hash);\n  const method = getQueryParamString(router.query.method) as SmartContractVerificationMethod;\n\n  const contractQuery = useApiQuery('contract', {\n    pathParams: { hash },\n    queryOptions: {\n      enabled: Boolean(hash),\n    },\n  });\n\n  throwOnResourceLoadError(contractQuery);\n\n  const configQuery = useFormConfigQuery(Boolean(hash));\n\n  React.useEffect(() => {\n    if (method && hash) {\n      router.replace({ pathname: '/address/[hash]/contract-verification', query: { hash } }, undefined, { scroll: false, shallow: true });\n    }\n  // onMount only\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ ]);\n\n  const isVerifiedContract = contractQuery.data?.is_verified && !contractQuery.data.is_partially_verified;\n\n  React.useEffect(() => {\n    if (isVerifiedContract) {\n      router.push({ pathname: '/address/[hash]', query: { hash, tab: 'contract' } }, undefined, { scroll: false, shallow: true });\n    }\n  }, [ hash, isVerifiedContract, router ]);\n\n  const content = (() => {\n    if (configQuery.isError || !hash || contractQuery.isError) {\n      return <DataFetchAlert/>;\n    }\n\n    if (configQuery.isPending || contractQuery.isPending || isVerifiedContract) {\n      return <ContentLoader/>;\n    }\n\n    return (\n      <ContractVerificationForm\n        method={ method && configQuery.data.verification_options.includes(method) ? method : undefined }\n        config={ configQuery.data }\n        hash={ hash }\n      />\n    );\n  })();\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.includes('/address');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to contract',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  return (\n    <>\n      <PageTitle\n        title=\"New smart contract verification\"\n        backLink={ backLink }\n      />\n      <AddressEntity\n        address={{ hash, is_contract: true, implementation_name: null }}\n        noLink\n        fontFamily=\"heading\"\n        fontSize=\"lg\"\n        fontWeight={ 500 }\n        mb={ 12 }\n      />\n      { content }\n    </>\n  );\n};\n\nexport default ContractVerificationForAddress;\n","import type { NextPage } from 'next';\nimport React from 'react';\n\nimport type { Props } from 'nextjs/getServerSideProps';\nimport PageNextJs from 'nextjs/PageNextJs';\n\nimport ContractVerificationForAddress from 'ui/pages/ContractVerificationForAddress';\n\nconst Page: NextPage<Props> = (props: Props) => {\n  return (\n    <PageNextJs pathname=\"/address/[hash]/contract-verification\" query={ props }>\n      <ContractVerificationForAddress/>\n    </PageNextJs>\n  );\n};\n\nexport default Page;\n\nexport { base as getServerSideProps } from 'nextjs/getServerSideProps';\n"],"names":["window","__NEXT_P","push","__webpack_require__","pages_ContractVerificationForAddress","contractQuery","appProps","useAppContext","router","useRouter","hash","getQueryParamString","query","method","useApiQuery","pathParams","queryOptions","enabled","Boolean","throwOnResourceLoadError","configQuery","useFormConfigQuery","React","replace","pathname","undefined","scroll","shallow","isVerifiedContract","data","is_verified","is_partially_verified","tab","content","isError","jsx_runtime","jsx","DataFetchAlert","isPending","ContentLoader","ContractVerificationForm","verification_options","includes","config","backLink","hasGoBackLink","referrer","label","url","jsxs","Fragment","PageTitle","title","AddressEntity","address","is_contract","implementation_name","noLink","fontFamily","fontSize","fontWeight","mb","contract_verification","PageNextJs","props","ContractVerificationForAddress"],"sourceRoot":""}