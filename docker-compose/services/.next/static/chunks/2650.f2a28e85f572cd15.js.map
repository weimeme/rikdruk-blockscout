{"version":3,"file":"static/chunks/2650.f2a28e85f572cd15.js","mappings":"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","sources":["webpack://_N_E/./ui/marketplace/useMarketplaceWallet.tsx","webpack://_N_E/./ui/pages/MarketplaceApp.tsx","webpack://_N_E/ignored|/Users/yzw/Downloads/frontend/node_modules/bn.js/lib|buffer","webpack://_N_E/<anon>"],"sourcesContent":["import type { TypedData } from 'abitype';\nimport { useCallback } from 'react';\nimport type { Account, SignTypedDataParameters } from 'viem';\nimport { useAccount, useSendTransaction, useSwitchNetwork, useNetwork, useSignMessage, useSignTypedData } from 'wagmi';\n\nimport config from 'configs/app';\n\ntype SendTransactionArgs = {\n  chainId?: number;\n  mode?: 'prepared';\n  to: string;\n};\n\nexport type SignTypedDataArgs<\n  TTypedData extends\n  | TypedData\n  | {\n    [key: string]: unknown;\n  } = TypedData,\n  TPrimaryType extends string = string,\n> = SignTypedDataParameters<TTypedData, TPrimaryType, Account>;\n\nexport default function useMarketplaceWallet() {\n  const { address } = useAccount();\n  const { chain } = useNetwork();\n  const { sendTransactionAsync } = useSendTransaction();\n  const { signMessageAsync } = useSignMessage();\n  const { signTypedDataAsync } = useSignTypedData();\n  const { switchNetworkAsync } = useSwitchNetwork({ chainId: Number(config.chain.id) });\n\n  const switchNetwork = useCallback(async() => {\n    if (Number(config.chain.id) !== chain?.id) {\n      await switchNetworkAsync?.();\n    }\n  }, [ chain, switchNetworkAsync ]);\n\n  const sendTransaction = useCallback(async(transaction: SendTransactionArgs) => {\n    await switchNetwork();\n    const tx = await sendTransactionAsync(transaction);\n    return tx.hash;\n  }, [ sendTransactionAsync, switchNetwork ]);\n\n  const signMessage = useCallback(async(message: string) => {\n    await switchNetwork();\n    const signature = await signMessageAsync({ message });\n    return signature;\n  }, [ signMessageAsync, switchNetwork ]);\n\n  const signTypedData = useCallback(async(typedData: SignTypedDataArgs) => {\n    await switchNetwork();\n    if (typedData.domain) {\n      typedData.domain.chainId = Number(typedData.domain.chainId);\n    }\n    const signature = await signTypedDataAsync(typedData);\n    return signature;\n  }, [ signTypedDataAsync, switchNetwork ]);\n\n  return {\n    address,\n    sendTransaction,\n    signMessage,\n    signTypedData,\n  };\n}\n","import { Box, Center, useColorMode } from '@chakra-ui/react';\nimport { useQuery } from '@tanstack/react-query';\nimport { DappscoutIframeProvider, useDappscoutIframe } from 'dappscout-iframe';\nimport { useRouter } from 'next/router';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport type { MarketplaceAppOverview } from 'types/client/marketplace';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\nimport type { ResourceError } from 'lib/api/resources';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport useApiFetch from 'lib/hooks/useFetch';\nimport * as metadata from 'lib/metadata';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport ContentLoader from 'ui/shared/ContentLoader';\n\nimport useMarketplaceWallet from '../marketplace/useMarketplaceWallet';\n\nconst feature = config.features.marketplace;\nconst configUrl = feature.isEnabled ? feature.configUrl : '';\n\nconst IFRAME_SANDBOX_ATTRIBUTE = 'allow-forms allow-orientation-lock ' +\n'allow-pointer-lock allow-popups-to-escape-sandbox ' +\n'allow-same-origin allow-scripts ' +\n'allow-top-navigation-by-user-activation allow-popups';\n\nconst IFRAME_ALLOW_ATTRIBUTE = 'clipboard-read; clipboard-write;';\n\ntype Props = {\n  address: string | undefined;\n  data: MarketplaceAppOverview | undefined;\n  isPending: boolean;\n};\n\nconst MarketplaceAppContent = ({ address, data, isPending }: Props) => {\n  const { iframeRef, isReady } = useDappscoutIframe();\n\n  const [ iframeKey, setIframeKey ] = useState(0);\n  const [ isFrameLoading, setIsFrameLoading ] = useState(isPending);\n  const { colorMode } = useColorMode();\n\n  useEffect(() => {\n    setIframeKey((key) => key + 1);\n  }, [ address ]);\n\n  const handleIframeLoad = useCallback(() => {\n    setIsFrameLoading(false);\n  }, []);\n\n  useEffect(() => {\n    if (data && !isFrameLoading) {\n      const message = {\n        blockscoutColorMode: colorMode,\n        blockscoutRootUrl: config.app.baseUrl + route({ pathname: '/' }),\n        blockscoutAddressExplorerUrl: config.app.baseUrl + route({ pathname: '/address/[hash]', query: { hash: '' } }),\n        blockscoutTransactionExplorerUrl: config.app.baseUrl + route({ pathname: '/tx/[hash]', query: { hash: '' } }),\n        blockscoutNetworkName: config.chain.name,\n        blockscoutNetworkId: Number(config.chain.id),\n        blockscoutNetworkCurrency: config.chain.currency,\n        blockscoutNetworkRpc: config.chain.rpcUrl,\n      };\n\n      iframeRef?.current?.contentWindow?.postMessage(message, data.url);\n    }\n  }, [ isFrameLoading, data, colorMode, iframeRef ]);\n\n  return (\n    <Center\n      h=\"100vh\"\n      mx={{ base: -4, lg: -6 }}\n    >\n      { (isFrameLoading) && (\n        <ContentLoader/>\n      ) }\n\n      { (data && isReady) && (\n        <Box\n          key={ iframeKey }\n          allow={ IFRAME_ALLOW_ATTRIBUTE }\n          ref={ iframeRef }\n          sandbox={ IFRAME_SANDBOX_ATTRIBUTE }\n          as=\"iframe\"\n          h=\"100%\"\n          w=\"100%\"\n          display={ isFrameLoading ? 'none' : 'block' }\n          src={ data.url }\n          title={ data.title }\n          onLoad={ handleIframeLoad }\n        />\n      ) }\n    </Center>\n  );\n};\n\nconst MarketplaceApp = () => {\n  const { address, sendTransaction, signMessage, signTypedData } = useMarketplaceWallet();\n\n  const apiFetch = useApiFetch();\n  const router = useRouter();\n  const id = getQueryParamString(router.query.id);\n\n  const query = useQuery<unknown, ResourceError<unknown>, MarketplaceAppOverview>({\n    queryKey: [ 'marketplace-apps', id ],\n    queryFn: async() => {\n      const result = await apiFetch<Array<MarketplaceAppOverview>, unknown>(configUrl, undefined, { resource: 'marketplace-apps' });\n      if (!Array.isArray(result)) {\n        throw result;\n      }\n      const item = result.find((app: MarketplaceAppOverview) => app.id === id);\n      if (!item) {\n        throw { status: 404 };\n      }\n\n      return item;\n    },\n    enabled: feature.isEnabled,\n  });\n  const { data, isPending } = query;\n\n  useEffect(() => {\n    if (data) {\n      metadata.update(\n        { pathname: '/apps/[id]', query: { id: data.id } },\n        { app_name: data.title },\n      );\n    }\n  }, [ data ]);\n\n  throwOnResourceLoadError(query);\n\n  return (\n    <DappscoutIframeProvider\n      address={ address }\n      appUrl={ data?.url }\n      rpcUrl={ config.chain.rpcUrl }\n      sendTransaction={ sendTransaction }\n      signMessage={ signMessage }\n      signTypedData={ signTypedData }\n    >\n      <MarketplaceAppContent address={ address } data={ data } isPending={ isPending }/>\n    </DappscoutIframeProvider>\n  );\n};\n\nexport default MarketplaceApp;\n","/* (ignored) */"],"names":["feature","config","features","marketplace","configUrl","isEnabled","MarketplaceAppContent","address","data","isPending","param","iframeRef","isReady","useDappscoutIframe","iframeKey","setIframeKey","useState","isFrameLoading","setIsFrameLoading","colorMode","useColorMode","useEffect","key","handleIframeLoad","useCallback","message","blockscoutColorMode","blockscoutRootUrl","app","baseUrl","route","pathname","blockscoutAddressExplorerUrl","query","hash","blockscoutTransactionExplorerUrl","blockscoutNetworkName","chain","name","blockscoutNetworkId","Number","id","blockscoutNetworkCurrency","currency","blockscoutNetworkRpc","rpcUrl","current","contentWindow","postMessage","url","jsx_runtime","jsxs","Center","h","mx","base","lg","jsx","ContentLoader","Box","allow","ref","sandbox","as","w","display","src","title","onLoad","pages_MarketplaceApp","sendTransaction","signMessage","signTypedData","useMarketplaceWallet","useAccount","useNetwork","sendTransactionAsync","useSendTransaction","signMessageAsync","useSignMessage","signTypedDataAsync","useSignTypedData","switchNetworkAsync","useSwitchNetwork","chainId","switchNetwork","transaction","tx","signature","typedData","domain","apiFetch","useApiFetch","router","useRouter","getQueryParamString","useQuery","queryKey","queryFn","result","undefined","resource","Array","isArray","item","find","status","enabled","metadata","app_name","throwOnResourceLoadError","DappscoutIframeProvider","appUrl"],"sourceRoot":""}