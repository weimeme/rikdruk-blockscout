{"version":3,"file":"static/chunks/8735-a64387636a33913e.js","mappings":"uIAAe,SAASA,MAAMC,CAAY,EACxC,OAAO,IAAIC,QAAQ,GAAaC,OAAOC,UAAU,CAACC,EAASJ,GAC7D,kSCsBAK,EAAeC,EAAAA,IAAU,CAACC,CAAAA,EAAAA,EAAAA,CAAAA,EAdU,OAAC,CAAEC,SAAAA,CAAQ,CAAEC,UAAAA,CAAS,CAAS,CAAAC,EAC3DC,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,IAEXC,EAAgBC,MAAMC,OAAO,CAACP,GAAYA,CAAQ,CAAC,EAAE,CAAGA,EACxDQ,EAAiBF,MAAMC,OAAO,CAACP,GAAYA,CAAQ,CAAC,EAAE,CAAG,KAE/D,MACE,GAAAS,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACC,EAAAA,CAAQA,CAAAA,CAACZ,UAAYA,EAAYa,UAAW,CAAEC,GAAI,CAAEC,KAAM,EAAGC,GAAI,CAAE,CAAE,WAAKZ,IACzEF,GAAY,CAACK,EAAiB,KAAO,GAAAC,EAAAG,GAAA,EAACC,EAAAA,CAAQA,CAAAA,CAACK,SAAS,KAAKjB,UAAYA,EAAYkB,MAAM,0BAAmBX,MAGtH,ICkCAY,EAAetB,EAAAA,IAAU,CAxCgB,OAAC,CAAEuB,WAAAA,CAAU,CAAS,CAAAnB,EACvD,CAAEoB,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IAEzBC,EAAgB3B,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAAyD,CAAAxB,EACjGyB,EAAQ,YAAaL,EAAUM,MAAM,CAAGN,EAAUM,MAAM,CAACC,OAAO,CAAGC,KAAAA,EAEzE,MACE,GAAArB,EAAAC,IAAA,EAACqB,EAAAA,EAAWA,CAAAA,CAACC,QAAQ,WAAWC,GAAKP,EAAMQ,IAAI,CAAGC,WAAU,GAACC,KAAM,CAAEpB,KAAM,KAAMC,GAAI,IAAK,YACxF,GAAAR,EAAAG,GAAA,EAACyB,EAAAA,CAAKA,CAAAA,CACF,GAAGX,CAAK,CACVY,SAAQ,GACRC,UAAYC,CAAAA,CAAQb,EACpBc,UAAYC,EAAAA,CAAcA,CAC1BC,WAAarB,EAAUsB,YAAY,EAAIvB,EACvCwB,aAAa,QAEf,GAAApC,EAAAG,GAAA,EAACkC,EAAAA,CAAgBA,CAAAA,CAACC,KAAK,mCAAmCpB,MAAQA,MAGxE,EAAG,CAAEL,EAAUM,MAAM,CAAEN,EAAUsB,YAAY,CAAEvB,EAAY,EAE3D,MACE,GAAAZ,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACoC,EAA2BA,UAC1B,GAAAvC,EAAAG,GAAA,EAACb,EAAAA,CAAMA,CAACkD,IAAI,EAACC,WAAa,IAAMhC,SAAS,KAAKiC,WAAW,mBAAU,iCAIrE,GAAA1C,EAAAG,GAAA,EAACoC,EAA2BA,CAACI,GAAK,WAChC,GAAA3C,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAK,UACLX,QAAUA,EACV+B,OAAS7B,EACT8B,MAAO,CAAEjB,SAAU,GAAMkB,QAASC,EAAAA,CAAcA,QAK1D,gJCiFAC,EAAe5D,EAAAA,IAAU,CAtGe,OAAC,CAAEyB,QAAAA,CAAO,CAAEoB,WAAAA,CAAU,CAAEgB,QAAAA,CAAO,CAAS,CAAAzD,EACxE0D,EAAYC,CAAAA,EAAAA,EAAAA,EAAAA,EAAkB,WAAY,YAC1C1D,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,IAEX0D,EAAUhE,EAAAA,OAAa,CAAC,IAAM6D,EAAQI,GAAG,CAAC,GAAa,EAC3DC,MAAOC,EACPC,MAAOC,EAAAA,EAAa,CAACF,EAAO,CAC9B,GAAK,CAAEN,EAAS,EAEVlC,EAAgB3B,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAAwD,CAAAxB,EACtG,MACE,GAAAO,EAAAG,GAAA,EAACwD,EAAAA,CAAWA,CAAAA,CACR,GAAG1C,CAAK,CACVoC,QAAUA,EACV1B,KAAOjC,EAAW,KAAO,KACzBkE,YAAY,sCACZ1B,WAAaA,EACbR,WAAU,GACVmC,QAAU,IAGhB,EAAG,CAAE3B,EAAYxC,EAAU2D,EAAS,EAE9BS,EAAwBzE,EAAAA,WAAiB,CAAC,IAC9C,OAAQmE,GACN,IAAK,iBACH,MAAO,GAAAxD,EAAAG,GAAA,EAAC4D,EAAAA,EAAQA,CAAAA,UAAgB,+CAATP,EACzB,KAAK,aACH,MAAO,GAAAxD,EAAAG,GAAA,EAAC4D,EAAAA,EAAQA,CAAAA,UAAgB,8CAATP,EACzB,KAAK,WACH,MAAO,GAAAxD,EAAAC,IAAA,EAAC8D,EAAAA,EAAQA,CAAAA,WAAgB,wBAAqB,GAAA/D,EAAAG,GAAA,EAAC6D,EAAAA,CAAIA,CAAAA,CAACC,KAAK,wBAAwBC,OAAO,kBAAS,aAAe,MAAhGV,EACzB,KAAK,iBACH,MACE,GAAAxD,EAAAC,IAAA,EAAC8D,EAAAA,EAAQA,CAAAA,WACP,GAAA/D,EAAAG,GAAA,EAACqC,OAAAA,UAAK,wBACN,GAAAxC,EAAAG,GAAA,EAAC6D,EAAAA,CAAIA,CAAAA,CACHC,KAAK,oFACLC,OAAO,kBACR,wBAGD,GAAAlE,EAAAG,GAAA,EAACqC,OAAAA,UAAK,aARQgB,EAWpB,KAAK,aACH,MAAO,GAAAxD,EAAAG,GAAA,EAAC4D,EAAAA,EAAQA,CAAAA,UAAgB,mCAATP,EACzB,KAAK,mBACH,MAAO,GAAAxD,EAAAG,GAAA,EAAC4D,EAAAA,EAAQA,CAAAA,UAAgB,2CAATP,EACzB,KAAK,uBACH,MACE,GAAAxD,EAAAC,IAAA,EAAC8D,EAAAA,EAAQA,CAAAA,WACP,GAAA/D,EAAAG,GAAA,EAACqC,OAAAA,UAAK,0CACN,GAAAxC,EAAAG,GAAA,EAAC6D,EAAAA,CAAIA,CAAAA,CACHC,KAAK,4GACLC,OAAO,kBACR,wBAGD,GAAAlE,EAAAG,GAAA,EAACqC,OAAAA,UAAK,aARQgB,EAWtB,CACF,EAAG,EAAE,EAEL,MACE,GAAAxD,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAC,IAAA,EAACkE,MAAAA,WACC,GAAAnE,EAAAC,IAAA,EAACX,EAAAA,CAAMA,CAACkD,IAAI,EAACC,WAAa,IAAMhC,SAAS,KAAKiC,WAAW,oBAAU,kCAChCQ,EAAQkB,MAAM,CAAE,oCAEnD,GAAApE,EAAAC,IAAA,EAACoE,EAAAA,CAAOA,CAAAA,CAACC,QAAQ,QAAQC,OAAM,GAACC,UAAY9E,EAAW,aAAe,cAAgB+E,OAAS,CAAE,GAAI,EAAG,WACtG,GAAAzE,EAAAG,GAAA,EAACuE,EAAAA,CAAcA,CAAAA,UACb,GAAA1E,EAAAG,GAAA,EAACb,EAAAA,CAAMA,CAACkD,IAAI,EAACmC,QAAQ,eAAeC,GAAK,EAAIC,OAAO,UAAUC,cAAc,SAASC,EAAE,gBACrF,GAAA/E,EAAAG,GAAA,EAAC6E,EAAAA,CAAOA,CAAAA,CAACvD,KAAK,OAAOwD,QAAU,EAAIvE,MAAM,OAAOwE,OAAQ,CAAExE,MAAO,cAAe,QAGpF,GAAAV,EAAAG,GAAA,EAACgF,EAAAA,CAAMA,CAAAA,UACL,GAAAnF,EAAAC,IAAA,EAACmF,EAAAA,CAAcA,CAAAA,CAACC,QAAUlC,EAAYmC,EAAG,CAAE/E,KAAM,QAASC,GAAI,OAAQ,YACpE,GAAAR,EAAAG,GAAA,EAACoF,EAAAA,CAAYA,CAAAA,CAACF,QAAUlC,IACxB,GAAAnD,EAAAG,GAAA,EAACqF,EAAAA,CAAWA,CAAAA,CAAC9E,MAAM,iBACjB,GAAAV,EAAAC,IAAA,EAACwF,EAAAA,EAAQA,CAAAA,WACP,GAAAzF,EAAAC,IAAA,EAACuC,OAAAA,WAAK,kCAAiCU,EAAQkB,MAAM,CAAE,eACvD,GAAApE,EAAAG,GAAA,EAACuF,EAAAA,EAAWA,CAAAA,UACRxC,EAAQI,GAAG,CAACQ,qBAQ5B,GAAA9D,EAAAG,GAAA,EAACgE,MAAAA,CAAAA,GACD,GAAAnE,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAK,SACLX,QAAUA,EACV+B,OAAS7B,EACT8B,MAAO,CAAEjB,SAAU,EAAK,MAIhC,cC5GA8D,EAAetG,EAAAA,IAAU,CAjBU,OAAC,CAAEuG,MAAAA,CAAK,CAAErG,SAAAA,CAAQ,CAAS,CAAAE,EACtDoG,EAAMxG,EAAAA,MAAY,CAAiB,MAMzC,OAJAA,EAAAA,SAAe,CAAC,SACdwG,CAAW,QAAXA,CAAAA,EAAAA,EAAIC,OAAO,GAAXD,KAAAA,IAAAA,GAAAA,EAAaE,cAAc,CAAC,CAAEC,SAAU,QAAS,EACnD,EAAG,EAAE,EAGH,GAAAhG,EAAAC,IAAA,EAACgG,UAAAA,CAAQJ,IAAMA,YACb,GAAA7F,EAAAG,GAAA,EAAC+F,EAAAA,CAAIA,CAAAA,CAACzD,WAAa,IAAMhC,SAAS,KAAKiC,WAAW,UAAUpC,GAAK,GAAKqC,GAAK,WAAMiD,IACjF,GAAA5F,EAAAG,GAAA,EAACgG,EAAAA,CAAIA,CAAAA,CAACC,UAAU,OAAOC,OAAQ,CAAE9F,KAAM,EAAGC,GAAI,CAAE,EAAG8F,gBAAiB,CAAE/F,KAAM,MAAOC,GAAI,mCAAoC,WACvHjB,MAIV,oCCXAgH,EAAejH,CAAAA,EAAAA,EAAAA,CAAAA,EAJI,OAAC,CAAEkH,QAAAA,CAAO,CAAEhH,UAAAA,CAAS,CAAS,CAAAC,EAC/C,MAAO,GAAAO,EAAAG,GAAA,EAACsG,EAAAA,EAAGA,CAAAA,CAACjH,UAAYA,EAAYkB,MAAM,QAAQD,SAAS,KAAKH,GAAK,EAAIoG,UAAU,sBAAeF,GACpG,GC2CAG,EAAetH,EAAAA,IAAU,CAzCwB,KAC/C,GAAM,CAAEwB,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IAEzBC,EAAgB3B,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAAkE,CAAAxB,EAC1GyB,EAAQ,qBAAsBL,EAAUM,MAAM,CAAGN,EAAUM,MAAM,CAACyF,gBAAgB,CAAGvF,KAAAA,EAE3F,MACE,GAAArB,EAAAC,IAAA,EAACqB,EAAAA,EAAWA,CAAAA,CAACC,QAAQ,WAAWC,GAAKP,EAAMQ,IAAI,CAAGE,KAAM,CAAEpB,KAAM,KAAMC,GAAI,IAAK,EAAGkB,WAAU,aAC1F,GAAA1B,EAAAG,GAAA,EAAC0G,EAAAA,CAAQA,CAAAA,CACL,GAAG5F,CAAK,CACVe,UAAY,IACZE,WAAarB,EAAUsB,YAAY,CACnCL,UAAYC,CAAAA,CAAQb,EACpBW,SAAQ,KAEV,GAAA7B,EAAAG,GAAA,EAACkC,EAAAA,CAAgBA,CAAAA,CAACC,KAAK,sCACrBpB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOsF,OAAO,GAAI,GAAAxG,EAAAG,GAAA,EAAC2G,EAAUA,CAACN,QAAUtF,MAAAA,EAAAA,KAAAA,EAAAA,EAAOsF,OAAO,KAG9D,EAAG,CAAE3F,EAAUM,MAAM,CAAEN,EAAUsB,YAAY,CAAE,EAE/C,MACE,GAAAnC,EAAAC,IAAA,EAACsC,EAA2BA,WAC1B,GAAAvC,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAK,mBACLX,QAAUA,EACV+B,OAAS7B,EACT8B,MAAO,CAAEjB,SAAU,EAAK,IAE1B,GAAA7B,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACqC,OAAAA,UAAK,sBACN,GAAAxC,EAAAG,GAAA,EAAC6D,EAAAA,CAAIA,CAAAA,CAACC,KAAK,2DAA2DC,OAAO,kBAAS,yBACtF,GAAAlE,EAAAG,GAAA,EAACqC,OAAAA,UAAK,+IACN,GAAAxC,EAAAG,GAAA,EAACqC,OAAAA,UAAK,uBACN,GAAAxC,EAAAG,GAAA,EAAC6D,EAAAA,CAAIA,CAAAA,CAACC,KAAK,0BAA0BC,OAAO,kBAAS,gBACrD,GAAAlE,EAAAG,GAAA,EAACqC,OAAAA,UAAK,WAId,GCRAuE,EAAe1H,EAAAA,IAAU,CAhCuB,KAC9C,GAAM,CAAE2H,EAAMC,EAAS,CAAG5H,EAAAA,QAAc,CAAC,IACnC,CAAEwB,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAEoG,WAAAA,CAAU,CAAE,CAAGnG,CAAAA,EAAAA,EAAAA,EAAAA,IAErCoG,EAAuB9H,EAAAA,WAAiB,CAAC,KAC7C,GAAS6H,EAAW,oBACpBD,EAAQG,GAAQ,CAACA,EACnB,EAAG,CAAEJ,EAAME,EAAY,EAEjBlG,EAAgB3B,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAA6E,CAAAxB,QAC3H,GAAAO,EAAAG,GAAA,EAACkH,EAAAA,CAAaA,CAAAA,CACZ/E,KAAK,mDACLrB,MAAQA,EACRiB,WAAarB,EAAUsB,YAAY,CACnCmF,SAAWH,GACZ,EACA,CAAEtG,EAAUsB,YAAY,CAAEgF,EAAsB,EAEnD,MACE,GAAAnH,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACoC,EAA2BA,UAC1B,GAAAvC,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAK,8BACLX,QAAUA,EACV+B,OAAS7B,MAGX,CAACgG,GAAQ,GAAAhH,EAAAG,GAAA,EAACoH,EAAwCA,CAAAA,KAG1D,GCeAC,EAAenI,EAAAA,IAAU,CAxCa,OAAC,CAAEoI,QAAAA,CAAO,CAAS,CAAAhI,EACjD,CAAEoB,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IAEzBC,EAAgB3B,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAAsD,CAAAxB,EAC9FyB,EAAQ,SAAUL,EAAUM,MAAM,CAAGN,EAAUM,MAAM,CAACuG,IAAI,CAAGrG,KAAAA,EAEnE,MACE,GAAArB,EAAAC,IAAA,EAACqB,EAAAA,EAAWA,CAAAA,CAACC,QAAQ,WAAWC,GAAKP,EAAMQ,IAAI,CAAGC,WAAU,GAACC,KAAM,CAAEpB,KAAM,KAAMC,GAAI,IAAK,YACxF,GAAAR,EAAAG,GAAA,EAAC0G,EAAAA,CAAQA,CAAAA,CACL,GAAG5F,CAAK,CACVa,UAAYC,CAAAA,CAAQb,EACpBgB,WAAarB,EAAUsB,YAAY,CACnCN,SAAQ,KAEV,GAAA7B,EAAAG,GAAA,EAACkC,EAAAA,CAAgBA,CAAAA,CAACC,KAAK,kBACrBpB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOsF,OAAO,GAAI,GAAAxG,EAAAG,GAAA,EAAC2G,EAAUA,CAACN,QAAUtF,MAAAA,EAAAA,KAAAA,EAAAA,EAAOsF,OAAO,KAG9D,EAAG,CAAE3F,EAAUM,MAAM,CAAEN,EAAUsB,YAAY,CAAE,EAE/C,MACE,GAAAnC,EAAAC,IAAA,EAACsC,EAA2BA,WAC1B,GAAAvC,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAK,OACLX,QAAUA,EACV+B,OAAS7B,EACT8B,MAAO,CAAEjB,SAAU,EAAK,IAExB4F,EAAU,KACV,GAAAzH,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACqC,OAAAA,UAAK,4HACN,GAAAxC,EAAAG,GAAA,EAAC6D,EAAAA,CAAIA,CAAAA,CAACC,KAAK,mDAAmDC,OAAO,kBAAS,2BAC9E,GAAAlE,EAAAG,GAAA,EAACqC,OAAAA,UAAK,aACN,GAAAxC,EAAAG,GAAA,EAAC6D,EAAAA,CAAIA,CAAAA,CAACC,KAAK,kDAAkDC,OAAO,kBAAS,2BAKvF,+CC8CAyD,EAAetI,EAAAA,IAAU,CA9EiB,OAAC,CAAEoI,QAAAA,CAAO,CAAS,CAAAhI,EACrD,CAAEmI,EAAWC,EAAc,CAAGxI,EAAAA,QAAc,CAAC,IAC7C,CAAEwB,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAEgH,UAAAA,CAAS,CAAEZ,WAAAA,CAAU,CAAE,CAAGnG,CAAAA,EAAAA,EAAAA,EAAAA,IAChDrB,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,IACXoI,EAAcC,CAAAA,EAAAA,EAAAA,EAAAA,IACdC,EAASF,EAAYG,YAAY,CAAkCC,CAAAA,EAAAA,EAAAA,CAAAA,EAAe,iCAElFhB,EAAuB9H,EAAAA,WAAiB,CAAC,KAC7C,GAAIuI,EAAW,CACb,IAAM3G,EAAQ6G,EAAU,WACxB7G,CAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOsC,KAAK,CAAC6E,QAAQ,CAAC,aAAclB,EAAW,WAAY,CAAEmB,aAAc,IAAK,EAClF,CACAR,EAAaT,GAAQ,CAACA,EACxB,EAAG,CAAEU,EAAWF,EAAWV,EAAY,EAEjC7D,EAAUhE,EAAAA,OAAa,CAAC,SAC3BoI,QAAD,QAACA,CAAAA,EAAAA,EAAUQ,MAAAA,EAAAA,KAAAA,EAAAA,EAAQK,uBAAuB,CAAGL,MAAAA,EAAAA,KAAAA,EAAAA,EAAQM,0BAA0B,GAA9Ed,KAAAA,IAAAA,EAAAA,KAAAA,EAADe,EAAkFlF,GAAG,CAAC,GAAa,EAAEG,MAAOgF,EAAQlF,MAAOkF,CAAO,MAAO,EAAE,EAC1I,CAAER,MAAAA,EAAAA,KAAAA,EAAAA,EAAQM,0BAA0B,CAAEN,MAAAA,EAAAA,KAAAA,EAAAA,EAAQK,uBAAuB,CAAEb,EAAS,EAE7EiB,EAAcrJ,EAAAA,WAAiB,CAAC,MAAMsJ,GACnCtF,EACJuF,MAAM,CAAC,OAAC,CAAEnF,MAAAA,CAAK,CAAE,CAAAhE,QAAK,CAACkJ,GAAclF,EAAMoF,WAAW,GAAGT,QAAQ,CAACO,EAAWE,WAAW,GAAE,GAC1FD,MAAM,CAAC,OAAC,CAAEnF,MAAAA,CAAK,CAAE,CAAAhE,QAAKmI,EAAAA,GAAmB,CAACnE,EAAM2E,QAAQ,CAAC,UAAS,GAClEU,KAAK,CAAC,EA7BS,IA8BjB,CAAElB,EAAWvE,EAAS,EAEnBrC,EAAgB3B,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAA0D,CAAAxB,EAClGyB,EAAQ,aAAcL,EAAUM,MAAM,CAAGN,EAAUM,MAAM,CAAC4H,QAAQ,CAAG1H,KAAAA,EAE3E,MACE,GAAArB,EAAAG,GAAA,EAACwD,EAAAA,CAAWA,CAAAA,CACR,GAAG1C,CAAK,CACVyH,YAAcA,EACdM,eAAc,GACdrH,KAAOjC,EAAW,KAAO,KACzBkE,YAAY,+CACZqF,gBAAkB,GAAAjJ,EAAAG,GAAA,EAAC6E,EAAAA,CAAOA,CAAAA,CAACvD,KAAK,WAChCS,WAAarB,EAAUsB,YAAY,CACnCjB,MAAQA,EACRQ,WAAU,GACVmC,QAAO,IAGb,EAAG,CAAEhD,EAAUM,MAAM,CAAEN,EAAUsB,YAAY,CAAEzC,EAAUgJ,EAAa,EAEtE,MACE,GAAA1I,EAAAC,IAAA,EAACsC,EAA2BA,WAC1B,GAAAvC,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACI,CAACuH,GACD,GAAAzH,EAAAG,GAAA,EAAC+I,EAAAA,CAAQA,CAAAA,CACPvH,KAAK,KACLgB,GAAK,EACL2E,SAAWH,EACXjF,WAAarB,EAAUsB,YAAY,UACpC,2BAIH,GAAAnC,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAK,WACLX,QAAUA,EACV+B,OAAS7B,EACT8B,MAAO,CAAEjB,SAAU,EAAK,OAG1B4F,EAAU,KACV,GAAAzH,EAAAC,IAAA,EAACX,EAAAA,CAAMA,CAAC6E,GAAG,EAAC7D,GAAI,CAAEC,KAAM,EAAGC,GAAI,CAAE,YAC/B,GAAAR,EAAAG,GAAA,EAACqC,OAAAA,UAAM,0CACP,GAAAxC,EAAAG,GAAA,EAACgJ,EAAAA,CAAIA,CAAAA,CAACzI,MAAM,0BAAiB,0BAC7B,GAAAV,EAAAG,GAAA,EAACqC,OAAAA,UAAK,mGACN,GAAAxC,EAAAG,GAAA,EAACgJ,EAAAA,CAAIA,CAAAA,CAACzI,MAAM,0BAAiB,kBAC7B,GAAAV,EAAAG,GAAA,EAACqC,OAAAA,UAAK,oBAKhB,GC7BA4G,GAAe/J,EAAAA,IAAU,CAlDmB,OAAC,CAAEoI,QAAAA,CAAO,CAAS,CAAAhI,EACvD,CAAEoB,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IACzBrB,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,IACXoI,EAAcC,CAAAA,EAAAA,EAAAA,EAAAA,IACdC,EAASF,EAAYG,YAAY,CAAkCC,CAAAA,EAAAA,EAAAA,CAAAA,EAAe,iCAElF9E,EAAUhE,EAAAA,OAAa,CAAC,SAC3BoI,QAAD,QAACA,CAAAA,EAAAA,EAAUQ,MAAAA,EAAAA,KAAAA,EAAAA,EAAQoB,kBAAkB,CAAGpB,MAAAA,EAAAA,KAAAA,EAAAA,EAAQqB,qBAAqB,GAApE7B,KAAAA,IAAAA,EAAAA,KAAAA,EAADe,EAAwElF,GAAG,CAAC,GAAa,EAAEG,MAAOgF,EAAQlF,MAAOkF,CAAO,MAAO,EAAE,EAChI,CAAER,MAAAA,EAAAA,KAAAA,EAAAA,EAAQqB,qBAAqB,CAAErB,MAAAA,EAAAA,KAAAA,EAAAA,EAAQoB,kBAAkB,CAAE5B,EAAS,EAEnEzG,EAAgB3B,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAA6D,CAAAxB,EACrGyB,EAAQ,gBAAiBL,EAAUM,MAAM,CAAGN,EAAUM,MAAM,CAACoI,WAAW,CAAGlI,KAAAA,EAEjF,MACE,GAAArB,EAAAG,GAAA,EAACwD,EAAAA,CAAWA,CAAAA,CACR,GAAG1C,CAAK,CACVoC,QAAUA,EACV1B,KAAOjC,EAAW,KAAO,KACzBkE,YAAY,cACZ1B,WAAarB,EAAUsB,YAAY,CACnCjB,MAAQA,EACRQ,WAAU,IAGhB,EAAG,CAAEb,EAAUM,MAAM,CAAEN,EAAUsB,YAAY,CAAEzC,EAAU2D,EAAS,EAElE,MACE,GAAArD,EAAAC,IAAA,EAACsC,EAA2BA,WAC1B,GAAAvC,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAK,cACLX,QAAUA,EACV+B,OAAS7B,EACT8B,MAAO,CAAEjB,SAAU,EAAK,IAE1B,GAAA7B,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACqC,OAAAA,UAAK,6IACN,GAAAxC,EAAAG,GAAA,EAAC6D,EAAAA,CAAIA,CAAAA,CACHC,KAAOwD,EACL,gFACA,iFAEFvD,OAAO,kBACR,6BAMT,GCvCAsF,GAAenK,EAAAA,IAAU,CAlBc,KACrC,GAAM,CAAEwB,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IAEzBC,EAAgB3B,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAAwD,CAAAxB,QACtG,GAAAO,EAAAG,GAAA,EAACkH,EAAAA,CAAaA,CAAAA,CAAuB/E,KAAK,kBAAkBrB,MAAQA,EAAQiB,WAAarB,EAAUsB,YAAY,EAAG,EACjH,CAAEtB,EAAUsB,YAAY,CAAE,EAE7B,MACE,GAAAnC,EAAAG,GAAA,EAACoC,EAA2BA,UAC1B,GAAAvC,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAK,SACLX,QAAUA,EACV+B,OAAS7B,KAIjB,yBC6GAyI,GAAepK,EAAAA,IAAU,CA3GoB,OAAC,CAAEyB,QAAAA,CAAO,CAAE4I,MAAAA,CAAK,CAAEC,aAAAA,CAAY,CAAEC,gBAAAA,CAAe,CAAEC,mBAAAA,CAAkB,CAAE3I,MAAAA,CAAK,CAAEgB,WAAAA,CAAU,CAAS,CAAAzC,EACrIoG,EAAMxG,EAAAA,MAAY,CAAiB,MAEnCyK,EAAoBzK,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAA4E,CAAAxB,EAC9H,MACE,GAAAO,EAAAC,IAAA,EAACqB,EAAAA,EAAWA,CAAAA,CAACC,QAAQ,WAAWC,GAAKP,EAAMQ,IAAI,CAAGC,WAAU,GAACC,KAAM,CAAEpB,KAAM,KAAMC,GAAI,IAAK,YACxF,GAAAR,EAAAG,GAAA,EAACyB,EAAAA,CAAKA,CAAAA,CACF,GAAGX,CAAK,CACVY,SAAQ,GACRC,UAAYC,CAAAA,CAAQb,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOO,IAAI,EAC/BS,WAAaA,EACbF,UAAY,IACZI,aAAa,QAEf,GAAApC,EAAAG,GAAA,EAACkC,EAAAA,CAAgBA,CAAAA,CAACC,KAAK,2BAA2BpB,MAAQA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOO,IAAI,KAG3E,EAAG,CAAEP,MAAAA,EAAAA,KAAAA,EAAAA,EAAOO,IAAI,CAAES,EAAY,EAExB6H,EAAuB1K,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAA+E,CAAAxB,EACpI,MACE,GAAAO,EAAAC,IAAA,EAACqB,EAAAA,EAAWA,CAAAA,CAACC,QAAQ,WAAWC,GAAKP,EAAMQ,IAAI,CAAGC,WAAU,GAACC,KAAM,CAAEpB,KAAM,KAAMC,GAAI,IAAK,YACxF,GAAAR,EAAAG,GAAA,EAACyB,EAAAA,CAAKA,CAAAA,CACF,GAAGX,CAAK,CACVa,UAAYC,CAAAA,CAAQb,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOE,OAAO,EAClCc,WAAaA,EACbL,SAAQ,GACRO,aAAa,QAEf,GAAApC,EAAAG,GAAA,EAACkC,EAAAA,CAAgBA,CAAAA,CAACC,KAAK,0BAA0BpB,MAAQA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOE,OAAO,KAG7E,EAAG,CAAEF,MAAAA,EAAAA,KAAAA,EAAAA,EAAOE,OAAO,CAAEc,EAAY,EAE3B8H,EAAuB3K,EAAAA,WAAiB,CAAC,KAC7CuK,EAAgBF,EAClB,EAAG,CAAEA,EAAOE,EAAiB,EAEvBK,EAA0B5K,EAAAA,WAAiB,CAAC,KAChDwK,EAAmBH,EACrB,EAAG,CAAEA,EAAOG,EAAoB,EAMhC,OAJAxK,EAAAA,SAAe,CAAC,SACdwG,CAAW,QAAXA,CAAAA,EAAAA,EAAIC,OAAO,GAAXD,KAAAA,IAAAA,GAAAA,EAAaE,cAAc,CAAC,CAAEC,SAAU,QAAS,EACnD,EAAG,EAAE,EAGH,GAAAhG,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACoC,EAA2BA,UAC1B,GAAAvC,EAAAC,IAAA,EAACiK,GAAAA,CAAIA,CAAAA,CAACC,WAAW,SAASC,eAAe,gBAAgBvE,IAAMA,EAAMvF,GAAKoJ,IAAAA,EAAc,EAAI,YAC1F,GAAA1J,EAAAC,IAAA,EAACiG,EAAAA,CAAIA,CAAAA,CAAC3E,QAAQ,YAAYd,SAAS,eAAK,oBAAmBiJ,EAAQ,KACnE,GAAA1J,EAAAC,IAAA,EAACiK,GAAAA,CAAIA,CAAAA,CAAC9D,UAAY,YACduD,EAAe,GACf,GAAA3J,EAAAG,GAAA,EAACkK,GAAAA,CAAUA,CAAAA,CACTC,aAAW,SACX/I,QAAQ,UACR+D,EAAE,OACFP,EAAE,OACFwF,QAAUN,EACVO,KAAO,GAAAxK,EAAAG,GAAA,EAAC6E,EAAAA,CAAOA,CAAAA,CAACvD,KAAK,QAAQ6D,EAAE,OAAOP,EAAE,SACxC7C,WAAaA,IAGfyH,EA9EA,IA+EA,GAAA3J,EAAAG,GAAA,EAACkK,GAAAA,CAAUA,CAAAA,CACTC,aAAW,MACX/I,QAAQ,UACR+D,EAAE,OACFP,EAAE,OACFwF,QAAUP,EACVQ,KAAO,GAAAxK,EAAAG,GAAA,EAAC6E,EAAAA,CAAOA,CAAAA,CAACvD,KAAK,OAAO6D,EAAE,OAAOP,EAAE,SACvC7C,WAAaA,YAMvB,GAAAlC,EAAAC,IAAA,EAACsC,EAA2BA,WAC1B,GAAAvC,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAO,aAAqBgJ,MAAA,CAAPf,EAAO,SAC5B5I,QAAUA,EACV+B,OAASiH,EACThH,MAAO,CAAEjB,SAAU,EAAK,IAExB6H,IAAAA,EACA,GAAA1J,EAAAG,GAAA,EAAAH,EAAAE,QAAA,WAAE,0GAGA,QAEN,GAAAF,EAAAC,IAAA,EAACsC,EAA2BA,WAC1B,GAAAvC,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAO,aAAqBgJ,MAAA,CAAPf,EAAO,YAC5B5I,QAAUA,EACV+B,OAASkH,EACTjH,MAAO,CAAEjB,SAAU,GAAMkB,QAASC,EAAAA,CAAcA,IAEhD0G,IAAAA,EACA,GAAA1J,EAAAG,GAAA,EAAAH,EAAAE,QAAA,WAAE,+GAGA,UAIZ,GC/DAwK,GAAerL,EAAAA,IAAU,CA7DkB,KACzC,GAAM,CAAEwB,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAEgH,UAAAA,CAAS,CAAE,CAAG/G,CAAAA,EAAAA,EAAAA,EAAAA,IACpC,CAAE4J,OAAAA,CAAM,CAAEC,OAAAA,CAAM,CAAEC,OAAAA,CAAM,CAAEC,OAAAA,CAAM,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,EAAc,CACvDtJ,KAAM,YACNX,QAAAA,CACF,GACM,CAAEkK,EAAWC,EAAc,CAAG5L,EAAAA,QAAc,CAACsL,EAAOvG,MAAM,CAAG,GAE7Db,EAAQuE,EAAU,aAExBoD,CAAAA,EAAAA,EAAAA,CAAAA,EAAgB,KACT3H,GAASA,IAAAA,EAAMa,MAAM,EACxB6G,EAAa,GAEjB,EAAG,CAAE1H,EAAO,EAEZ,IAAM4D,EAAuB9H,EAAAA,WAAiB,CAAC,KACxC2L,EAGHH,IAFAD,EAAO,CAAEnJ,KAAM,GAAIL,QAAS,EAAG,GAIjC6J,EAAa7D,GAAQ,CAACA,EACxB,EAAG,CAAEwD,EAAQI,EAAWH,EAAQ,EAE1BM,EAAsB9L,EAAAA,WAAiB,CAAC,IAC5CyL,EAAOpB,EAAQ,EAAG,CAAEjI,KAAM,GAAIL,QAAS,EAAG,EAC5C,EAAG,CAAE0J,EAAQ,EAEPM,EAAyB/L,EAAAA,WAAiB,CAAC,IAC/CwL,EAAOnB,EACT,EAAG,CAAEmB,EAAQ,EAEb,MACE,GAAA7K,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACoC,EAA2BA,UAC1B,GAAAvC,EAAAG,GAAA,EAAC+I,EAAAA,CAAQA,CAAAA,CACPvH,KAAK,KACL2F,SAAWH,EACX7G,GAAK,EACL4B,WAAarB,EAAUsB,YAAY,UACpC,6BAIDwI,EAAOrH,GAAG,CAAC,CAACrC,EAAOyI,SAQyB7I,QAP5C,GAAAb,EAAAG,GAAA,EAACkL,GAAoCA,CAEnC3B,MAAQA,EACR5I,QAAUA,EACV6I,aAAegB,EAAOvG,MAAM,CAC5BwF,gBAAkBuB,EAClBtB,mBAAqBuB,EACrBlK,MAAQ,cAAeL,EAAUM,MAAM,QAAGN,CAAAA,EAAAA,EAAUM,MAAM,CAACmK,SAAS,GAA1BzK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAA4B,CAAC6I,EAAM,CAAGrI,KAAAA,EAChFa,WAAarB,EAAUsB,YAAY,EAP7BlB,EAAMO,EAAE,MAYxB,GCZA+J,GAAelM,EAAAA,IAAU,CAxCa,OAAC,CAAEmM,KAAAA,CAAI,CAAE5K,WAAAA,CAAU,CAAS,CAAAnB,EAC1D,CAAEoB,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IAEzBC,EAAgB3B,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAAsD,CAAAxB,EAC9FyB,EAAQ,SAAUL,EAAUM,MAAM,CAAGN,EAAUM,MAAM,CAACM,IAAI,CAAGJ,KAAAA,EAEnE,MACE,GAAArB,EAAAC,IAAA,EAACqB,EAAAA,EAAWA,CAAAA,CAACC,QAAQ,WAAWC,GAAKP,EAAMQ,IAAI,CAAGC,WAAU,GAACC,KAAM,CAAEpB,KAAM,KAAMC,GAAI,IAAK,YACxF,GAAAR,EAAAG,GAAA,EAACyB,EAAAA,CAAKA,CAAAA,CACF,GAAGX,CAAK,CACVY,SAAQ,GACRC,UAAYC,CAAAA,CAAQb,EACpBc,UAAY,IACZE,WAAarB,EAAUsB,YAAY,EAAIvB,EACvCwB,aAAa,QAEf,GAAApC,EAAAG,GAAA,EAACkC,EAAAA,CAAgBA,CAAAA,CAACC,KAAK,gBAAgBpB,MAAQA,MAGrD,EAAG,CAAEL,EAAUM,MAAM,CAAEN,EAAUsB,YAAY,CAAEvB,EAAY,EAE3D,MACE,GAAAZ,EAAAC,IAAA,EAACsC,EAA2BA,WAC1B,GAAAvC,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAK,OACLX,QAAUA,EACV+B,OAAS7B,EACT8B,MAAO,CAAEjB,SAAU,EAAK,IAExB2J,EAAO,GAAAxL,EAAAG,GAAA,EAACqC,OAAAA,UAAOgJ,IACf,GAAAxL,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACqC,OAAAA,UAAK,gEACN,GAAAxC,EAAAG,GAAA,EAACgJ,EAAAA,CAAIA,CAAAA,CAACzI,MAAM,0BAAoB,6BAChC,GAAAV,EAAAC,IAAA,EAACuC,OAAAA,WAAK,KAAE,GAAAxC,EAAAG,GAAA,EAACb,EAAAA,CAAMA,CAACkD,IAAI,EAACC,WAAa,aAAM,eAAwB,iCAK1E,GCiBAgJ,GAAepM,EAAAA,IAAU,CA5DqB,KAC5C,GAAM,CAAE2L,EAAWC,EAAc,CAAG5L,EAAAA,QAAc,CAAC,IAC7C,CAAEwB,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IAEzBG,EAAQ,sBAAuBL,EAAUM,MAAM,CAAGN,EAAUM,MAAM,CAACuK,iBAAiB,CAAGrK,KAAAA,EAEvF8F,EAAuB9H,EAAAA,WAAiB,CAAC,KAC7C4L,EAAa7D,GAAQ,CAACA,EACxB,EAAG,EAAE,EAECuE,EAAwBtM,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAAyE,CAAAxB,QAC/H,GAAAO,EAAAG,GAAA,EAAC+J,GAAAA,CAAIA,CAAAA,CAAC0B,WAAa,WACjB,GAAA5L,EAAAG,GAAA,EAACkH,EAAAA,CAAaA,CAAAA,CACZ/E,KAAK,uBACLrB,MAAQA,EACRqG,SAAWH,EACXjF,WAAarB,EAAUsB,YAAY,IAEjC,EACL,CAAEtB,EAAUsB,YAAY,CAAEgF,EAAsB,EAE7C0E,EAAqBxM,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAAmE,CAAAxB,EACtH,MACE,GAAAO,EAAAG,GAAA,EAACyB,EAAAA,CAAKA,CAAAA,CACF,GAAGX,CAAK,CACVY,SAAQ,GACRK,WAAarB,EAAUsB,YAAY,CACnCC,aAAa,MACb0J,KAAK,SACLlI,YAAY,oBACZjC,KAAK,KACLoK,KAAK,QACLC,KAAK,QACLJ,WAAa,EACb9J,UAAYC,CAAAA,CAAQb,GAG1B,EAAG,CAAEA,EAAOL,EAAUsB,YAAY,CAAE,EAEpC,MACE,GAAAnC,EAAAG,GAAA,EAACoC,EAA2BA,UAC1B,GAAAvC,EAAAC,IAAA,EAACiK,GAAAA,CAAIA,CAAAA,CAAC9D,UAAY,EAAIrB,EAAG,CAAExE,KAAM,OAAQC,GAAI,MAAO,YAClD,GAAAR,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAK,0BACLX,QAAUA,EACV+B,OAAS8I,IAETX,GACA,GAAAhL,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAK,oBACLX,QAAUA,EACV+B,OAASgJ,EACT/I,MAAO,CAAEjB,SAAU,EAAK,QAMpC,GCxCAoK,GAAe5M,EAAAA,IAAU,CAfqB,OAAC,CAAE4I,OAAAA,CAAM,CAA+C,CAAAxI,EACpG,MACE,GAAAO,EAAAC,IAAA,EAACiM,EAA0BA,CAACtG,MAAM,uEAC9B,CAACqC,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAQkE,qCAAqC,GAAI,GAAAnM,EAAAG,GAAA,EAACiM,GAA6BA,CAAAA,GAChFnE,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAQkE,qCAAqC,GAAI,GAAAnM,EAAAG,GAAA,EAACkM,GAA8BA,CAAAA,GAClF,GAAArM,EAAAG,GAAA,EAACmM,EAAiCA,CAAAA,GAClC,GAAAtM,EAAAG,GAAA,EAACoM,GAAmCA,CAAAA,GACpC,GAAAvM,EAAAG,GAAA,EAACqM,GAAqCA,CAAAA,GACtC,GAAAxM,EAAAG,GAAA,EAACsM,EAA6BA,CAAAA,GAC5B,CAACxE,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAQkE,qCAAqC,GAAI,GAAAnM,EAAAG,GAAA,EAACuM,EAAuCA,CAAAA,GAC5F,GAAA1M,EAAAG,GAAA,EAACwM,GAAkCA,CAAAA,KAGzC,yBC1BO,eAAeC,kBAAkBC,CAA0C,EAChF,IAAMC,EAA0C,EAAE,CAG5CC,EAA+D,EAAE,CAGvE,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAqBzI,MAAM,CAAE4I,IAAK,CAIpD,IAAMC,EAAOJ,CAAoB,CAACG,EAAE,CAACE,gBAAgB,EACrDD,CAAAA,GAAQF,EAAMI,IAAI,CAACF,EACrB,CAEA,KAAOF,EAAM3I,MAAM,CAAG,GAAG,CACvB,IAAMgJ,EAAQL,EAAMM,KAAK,GACrBD,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOE,MAAM,EACfR,EAAYK,IAAI,CAACC,GACRA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOG,WAAW,GAAI,iBAAkBH,GACjDL,EAAMI,IAAI,IAAI,MAAMK,wBAAwBJ,EAAMK,YAAY,IAElE,CACA,OAAOX,CACT,CAIA,eAAeU,wBAAwBE,CAAgC,EACrE,IAAMC,EAAsC,EAAE,CAC1CC,EAAc,MAAMC,mBAAmBH,GAE3C,KAAOE,GAAeA,EAAYxJ,MAAM,CAAG,GACzCuJ,EAAQR,IAAI,IAAIS,GAChBA,EAAc,MAAMC,mBAAmBH,GAEzC,OAAOC,CACT,CAKA,eAAeE,mBAAmBH,CAAgC,EAChE,GAAI,CACF,OAAO,MAAM,IAAI1O,QAAQ,CAACG,EAAS2O,KACjCJ,EAAgBE,WAAW,CACzB,IACEzO,EAAQ4O,EACV,EACAD,EAEJ,EACF,CAAE,MAAOE,EAAK,CAAC,CACjB,CAEO,SAASC,uBAAuBb,CAA0B,EAC/D,OAAO,IAAIpO,QAAQ,IACjBoO,EAAMc,IAAI,CAAC,MAAMA,IAEf/O,EAAQ+O,EACV,EACF,EACF,CCgBA,IAAAC,GAAe9O,EAAAA,IAAU,CAACC,CAAAA,EAAAA,EAAAA,CAAAA,EAlEF,OAAC,CAAE8O,OAAAA,CAAM,CAAE7O,SAAAA,CAAQ,CAAEC,UAAAA,CAAS,CAAE0C,WAAAA,CAAU,CAAS,CAAAzC,EACnE,CAAE4O,EAAYC,EAAe,CAAGjP,EAAAA,QAAc,CAAC,IAE/CkP,EAAalP,EAAAA,WAAiB,CAAC,MAAMmP,IAGzC,GAFAA,EAAMC,cAAc,GAEhBvM,EACF,OAGF,IAAM4K,EAAc,MAAMF,kBAAkB4B,EAAME,YAAY,CAACC,KAAK,EAC9DC,EAAQ,MAAM5P,QAAQ6P,GAAG,CAAC/B,EAAYxJ,GAAG,CAAC2K,yBAEhDG,EAAOQ,GACPN,EAAc,GAChB,EAAG,CAAEpM,EAAYkM,EAAQ,EAEnBU,EAAiBzP,EAAAA,WAAiB,CAAC,IACvCmP,EAAMC,cAAc,EACtB,EAAG,EAAE,EAECM,EAAkB1P,EAAAA,WAAiB,CAAC,IACxCmP,EAAMC,cAAc,GACpBH,EAAc,GAChB,EAAG,EAAE,EAECU,EAAkB3P,EAAAA,WAAiB,CAAC,IACxCmP,EAAMC,cAAc,GACpBH,EAAc,GAChB,EAAG,EAAE,EAECW,EAAc5P,EAAAA,WAAiB,CAAC,IAChC6C,IACFsM,EAAMC,cAAc,GACpBD,EAAMU,eAAe,GAEzB,EAAG,CAAEhN,EAAY,EAEXiN,EAAsB/L,CAAAA,EAAAA,EAAAA,EAAAA,EAAkB,iBAAkB,kBAGhE,MACE,GAAApD,EAAAG,GAAA,EAACiP,GAAAA,CAAMA,CAAAA,CACL5P,UAAYA,EACZ8F,EAAE,OACF+J,KAAK,QACLC,YAAY,MACZC,YAAcrN,EAAaiN,EARXd,EAAa,eAAiB,OAS9CnJ,OAAQ,CACNqK,YAAarN,EAAaiN,EAAsB,cAClD,EACAK,aAAa,OACbC,YAAY,SACZ5K,OAAO,UACP6K,UAAU,SACVnF,QAAU0E,EACVb,OAASG,EACToB,WAAab,EACbc,YAAcb,EACdc,YAAcb,WAEZzP,GAGR,2BCRAuQ,gBArDkB,QAOX7O,KAPoE,CAAE1B,SAAAA,CAAQ,CAAEwQ,OAAAA,CAAM,CAAEC,SAAAA,CAAQ,CAAE/O,MAAAA,CAAK,CAAwB,CAAAxB,EAC9HoG,EAAMxG,EAAAA,MAAY,CAAmB,MAE3CA,EAAAA,SAAe,CAAC,SACG4B,EAA6B4E,CAA1C,EAACmK,GAAY/O,CAAAA,OAAAA,CAAAA,EAAAA,EAAMsC,KAAK,GAAXtC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAamD,MAAM,IAAK,WAAKyB,CAAAA,EAAAA,EAAIC,OAAO,GAAXD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAatC,KAAK,GAC9DsC,CAAAA,EAAIC,OAAO,CAACvC,KAAK,CAAG,GAExB,EAAG,CAAa,OAAXtC,CAAAA,EAAAA,EAAMsC,KAAK,GAAXtC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAamD,MAAM,CAAE4L,EAAU,EAEpC,IAAM1I,EAAWjI,EAAAA,WAAiB,CAAC,IACjC4B,EAAMqG,QAAQ,CAAC,IAAMrG,EAAMsC,KAAK,EAAI,EAAE,IAAMqL,EAAO,CACrD,EAAG,CAAE3N,EAAO,EAENgP,EAAoB5Q,EAAAA,WAAiB,CAAC,IAC1C,IAAM6Q,EAAW1B,EAAMtK,MAAM,CAAC0K,KAAK,CACnC,GAAI,CAACsB,EACH,OAGF,IAAMtB,EAAQ/O,MAAMsQ,IAAI,CAACD,GACzB5I,EAASsH,GACT3N,EAAMmP,MAAM,EACd,EAAG,CAAE9I,EAAUrG,EAAO,EAEhBgO,EAAc5P,EAAAA,WAAiB,CAAC,SACpCwG,CAAW,QAAXA,CAAAA,EAAAA,EAAIC,OAAO,GAAXD,KAAAA,IAAAA,GAAAA,EAAawK,KAAK,EACpB,EAAG,EAAE,EAECC,EAAkBjR,EAAAA,WAAiB,CAAC,KACxC4B,EAAMmP,MAAM,EACd,EAAG,CAAEnP,EAAO,EAENsP,EAAgBlR,EAAAA,OAAa,CAAC,IAAO,EACzCiI,SAAAA,CACF,GAAI,CAAEA,EAAU,EAEVkJ,EAAU,mBAAOjR,EAA0BA,EAASgR,GAAiBhR,EAE3E,MACE,GAAAS,EAAAC,IAAA,EAACwQ,GAAAA,CAAUA,CAAAA,CAAClG,QAAU0E,EAAcmB,OAASE,YAC3C,GAAAtQ,EAAAG,GAAA,EAACuQ,GAAAA,EAAmBA,CAAAA,CAClB5E,KAAK,OACLxE,SAAW2I,EACXpK,IAAMA,EACNkK,OAASA,EACTC,SAAWA,EACXvO,KAAOR,EAAMQ,IAAI,GAEjB+O,IAGR,cC7DA,IAAMG,GAAuC,CAC3C,QAAS,aACT,OAAQ,YACR,OAAQ,WACV,EAgGA,IAAAC,GAAevR,EAAAA,IAAU,CAACC,CAAAA,EAAAA,EAAAA,CAAAA,EA5EN,OAAC,CAAE4O,KAAAA,CAAI,CAAE1O,UAAAA,CAAS,CAAEkK,MAAAA,CAAK,CAAEmH,SAAAA,CAAQ,CAAE3O,WAAAA,CAAU,CAAEhB,MAAAA,CAAK,CAAS,CAAAzB,EAC3EqR,EAAezR,EAAAA,WAAiB,CAAC,IACrCmP,EAAMU,eAAe,GACrB2B,MAAAA,GAAAA,EAAWnH,EACb,EAAG,CAAEA,EAAOmH,EAAU,EAEhBE,EAA2B1R,EAAAA,WAAiB,CAAC,IACjDmP,EAAMU,eAAe,EAEvB,EAAG,EAAE,EAEC8B,EAAgBC,SA7BEC,CAAgB,EACxC,IAAMC,EAASD,EAASE,KAAK,CAAC,YAC9B,IAAID,EAAO/M,MAAM,CACR,GAGF,IAAM+M,CAAM,CAACA,EAAO/M,MAAM,CAAG,EAAE,EAuBC8J,EAAKzM,IAAI,EAC1C4P,EAAWV,EAAU,CAACK,EAAc,EAAI,oBACxCM,EAAYlO,CAAAA,EAAAA,EAAAA,EAAAA,EAAkB,WAAY,YAEhD,MACE,GAAApD,EAAAC,IAAA,EAACiK,GAAAA,CAAIA,CAAAA,CACH8B,KAAK,QACLuF,SAAS,SACT/R,UAAYA,EACZ2K,WAAW,SACXuF,UAAU,iBAEV,GAAA1P,EAAAG,GAAA,EAAC6E,EAAAA,CAAOA,CAAAA,CACNvD,KAAO4P,EACPpM,QAAQ,OACRvE,MAAQQ,EAAQ,QAAUoQ,EAC1BE,GAAK,EACLlC,YAAY,MACZE,aAAa,KACbD,YAAcnM,CAAAA,EAAAA,EAAAA,EAAAA,EAAkB,iBAAkB,kBAClDqO,EAAI,IAEN,GAAAzR,EAAAC,IAAA,EAACwG,EAAAA,EAAGA,CAAAA,CAACuF,KAAK,qCACR,GAAAhM,EAAAC,IAAA,EAACiK,GAAAA,CAAIA,CAAAA,CAACC,WAAW,mBACf,GAAAnK,EAAAG,GAAA,EAAC+F,EAAAA,CAAIA,CAAAA,CACHzD,WAAa,IACb8O,SAAS,SACTG,aAAa,WACbC,WAAW,SACXjR,MAAQQ,EAAQ,QAAU,mBAExBgN,EAAKzM,IAAI,GAEXM,CAAAA,CAAQb,GACR,GAAAlB,EAAAG,GAAA,EAACyR,GAAAA,CAAOA,CAAAA,CACNnO,MAAQvC,EACRsD,UAAU,MACVwH,KAAK,iBAEL,GAAAhM,EAAAG,GAAA,EAACsG,EAAAA,EAAGA,CAAAA,CAAC5B,OAAO,UAAUF,QAAQ,UAAU4F,QAAUwG,EAA2BnM,GAAK,WAChF,GAAA5E,EAAAG,GAAA,EAAC6E,EAAAA,CAAOA,CAAAA,CAACvD,KAAK,OAAOwD,QAAU,EAAIvE,MAAM,cAI/C,GAAAV,EAAAG,GAAA,EAACkK,GAAAA,CAAUA,CAAAA,CACTC,aAAW,SACXE,KAAO,GAAAxK,EAAAG,GAAA,EAAC6E,EAAAA,CAAOA,CAAAA,CAACvD,KAAK,QAAQwD,QAAU,IACvCA,QAAU,EACV1D,QAAQ,SACRoD,QAAQ,eACRiH,WAAa,EACbhH,GAAG,OACH2F,QAAUuG,EACV5O,WAAaA,EACb2P,UAAU,kBAGd,GAAA7R,EAAAG,GAAA,EAAC+F,EAAAA,CAAIA,CAAAA,CAAC3E,QAAQ,YAAYjB,GAAK,WAC3B4N,EAAKvM,IAAI,CAACmQ,cAAc,CAACzQ,KAAAA,EAAW,CAAE0Q,SAAU,UAAWC,sBAAuB,EAAGC,KAAM,OAAQC,YAAa,SAAUC,MAAO,MAAO,UAKpJ,IC2EAC,GAAe/S,EAAAA,IAAU,CAzJgB,QAYlB6B,EACHA,KAbsB,CAAEmR,UAAAA,CAAS,CAAErC,SAAAA,CAAQ,CAAEnO,SAAAA,CAAQ,CAAE+D,MAAAA,CAAK,CAAE4F,KAAAA,CAAI,CAAE/J,KAAAA,EAAO,SAAS,CAAS,CAAAhC,EACzG,CAAE6S,SAAAA,CAAQ,CAAExK,UAAAA,CAAS,CAAEhH,QAAAA,CAAO,CAAED,UAAAA,CAAS,CAAE0R,YAAAA,CAAW,CAAE,CAAGxR,CAAAA,EAAAA,EAAAA,EAAAA,IAE3DG,EACJ,YAAIO,GAAsB,YAAaZ,EAAUM,MAAM,CAC9CN,EAAUM,MAAM,CAACqR,OAAO,CAG7B/Q,eAAAA,GAAyB,eAAgBZ,EAAUM,MAAM,CACpDN,EAAUM,MAAM,CAACsR,UAAU,QAGhCC,EAAc,CAACxR,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAO4K,IAAI,GAAX5K,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAayR,UAAU,CAAC,UAAmBtR,KAAAA,EAARH,EAClD0R,EAAY1R,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAO4K,IAAI,GAAX5K,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAayR,UAAU,CAAC,UAAWzR,EAAQG,KAAAA,EAEvDwR,EAAmBxT,EAAAA,WAAiB,CAAC,IACzC,GAAIqK,KAAUrI,IAAVqI,EACF,OAGF,IAAMnG,EAAQuE,EAAUrG,GAAMqH,KAAK,GACnCvF,EAAMuP,MAAM,CAACpJ,EAAO,GACpB4I,EAAS7Q,EAAM8B,GACfgP,EAAY9Q,EAEd,EAAG,CAAEqG,EAAWrG,EAAM6Q,EAAUC,EAAa,EAEvCQ,EAAqB1T,EAAAA,WAAiB,CAAC,IAEzC,GAAAW,EAAAC,IAAA,EAACkE,MAAAA,WACC,GAAAnE,EAAAG,GAAA,EAAC+F,EAAAA,CAAIA,CAAAA,CAACzD,WAAa,IAAM/B,MAAM,iBAAiBiC,GAAK,WAAMiD,IAC3D,GAAA5F,EAAAC,IAAA,EAAC+S,EAAAA,CAAMA,CAAAA,CAACrR,KAAK,KAAKJ,QAAQ,oBAAU,YACrByO,EAAW,IAAM,GAAI,uBAIvC,CAAEA,EAAUpK,EAAO,EAEhBqN,EAAc5T,EAAAA,WAAiB,CAAC,QAClBuT,EAAlB,IAAMM,EAAYN,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAWpM,OAAO,GAAlBoM,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoBxB,KAAK,CAAC,KAE5C,MACE,GAAApR,EAAAG,GAAA,EAACsG,EAAAA,EAAGA,CAAAA,CACF9B,QAAQ,OACRwO,oBAAqB,CAAE5S,KAAM,iBAAkBC,GAAI,+BAAgC,EACnF4F,UAAY,EACZC,OAAS,EACTf,EAAE,gBAEAsJ,EAAMtL,GAAG,CAAC,CAAC4K,EAAMxE,IACjB,GAAA1J,EAAAG,GAAA,EAACsG,EAAAA,EAAGA,CAAAA,UACF,GAAAzG,EAAAG,GAAA,EAACiT,GAAWA,CACVlF,KAAOA,EACPlC,KAAK,UACL6E,SAAWgC,EACXnJ,MAAQA,EACRxH,WAAarB,EAAUsB,YAAY,CACnCjB,MAAQgS,MAAAA,EAAAA,KAAAA,EAAAA,CAAW,CAACxJ,EAAM,IAPnBwE,EAAKzM,IAAI,CAAGyM,EAAKmF,YAAY,CAAG3J,KAanD,EAAG,CAAE7I,EAAUsB,YAAY,CAAE0Q,EAAkBD,EAAW,EAEpD5R,EAAgB3B,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAA2D,CAAAxB,EACnG6T,EAAWrS,EAAMsC,KAAK,EAAItC,EAAMsC,KAAK,CAACa,MAAM,CAAG,EAE/CmP,EACJ,CAAIb,MAAAA,EAAAA,KAAAA,EAAAA,EAAa5G,IAAI,IAAK,WACjB,GAAA9L,EAAAG,GAAA,EAAC2G,EAAUA,CAACN,QAAQ,sBAGzBkM,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAalM,OAAO,EACf,GAAAxG,EAAAG,GAAA,EAAC2G,EAAUA,CAACN,QAAUkM,EAAYlM,OAAO,GAG3C,KAGT,MACE,GAAAxG,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACqT,gBAASA,CAA0BzD,OAASsC,EAAUoB,IAAI,CAAC,KAAOzD,SAAWA,EAAW/O,MAAQA,WAC7F,OAAC,CAAEqG,SAAAA,CAAQ,CAAE,CAAA7H,QACb,GAAAO,EAAAG,GAAA,EAAC+J,GAAAA,CAAIA,CAAAA,CACHwJ,QAAQ,SACRvJ,WAAW,aACX9D,OAAS,EACTf,EAAE,gBAEF,GAAAtF,EAAAG,GAAA,EAACwT,GAAeA,CAACvF,OAAS9G,EAAWmK,EAAG,CAAElR,KAAM,EAAGC,GAAI,CAAE,EAAG0B,WAAarB,EAAUsB,YAAY,UAC3FmR,EAAWL,EAAYhS,EAAMsC,KAAK,EAAIwP,OAEtC,IAGRQ,IAGR,EAAG,CAAElB,EAAWrC,EAAU0C,EAAa7R,EAAUsB,YAAY,CAAE8Q,EAAaF,EAAoB,EAE1Fa,EAAmBvU,EAAAA,WAAiB,CAAC,MAAMkE,IAC/C,GAAI1D,MAAMC,OAAO,CAACyD,GAAQ,CACxB,IAAMsQ,EAAY,4CAAkEpJ,MAAA,CAArB4H,EAAUoB,IAAI,CAAC,KAAM,KAC9EtS,EAASoC,EAAMD,GAAG,CAAC,OAAC,CAAE7B,KAAAA,CAAI,CAAE,CAAAhC,SAAK4S,EAAUyB,IAAI,CAAC,GAASrS,EAAKsS,QAAQ,CAACC,IAAQ,GAAKH,CAAQ,GAClG,GAAI1S,EAAO2S,IAAI,CAAC,GAAU7G,KAAAA,GACxB,OAAO9L,EAAOsS,IAAI,CAAC,IAEvB,CACA,MAAO,EACT,EAAG,CAAEpB,EAAW,EAEV4B,EAAmB5U,EAAAA,WAAiB,CAAC,MAAMkE,IAC/C,GAAI1D,MAAMC,OAAO,CAACyD,GAAQ,CACxB,IAAM2Q,EAAkB,GAAKC,GAAAA,EAAEA,CACzBhT,EAASoC,EAAMD,GAAG,CAAC,OAAC,CAAE3B,KAAAA,CAAI,CAAE,CAAAlC,SAAKkC,EAAOuS,EAAkB,0CAA4C,EAAC,GAC7G,GAAI/S,EAAO2S,IAAI,CAAC,GAAU7G,KAAAA,GACxB,OAAO9L,EAAOsS,IAAI,CAAC,IAEvB,CACA,MAAO,EACT,EAAG,EAAE,EAECW,EAAmB/U,EAAAA,WAAiB,CAAC,MAAMkE,GAC/C,CAAI,EAACyM,GAAYnQ,MAAMC,OAAO,CAACyD,EAAAA,IAAUA,CAAAA,EAAMa,MAAM,CAAG,IAC/C,+BAIR,CAAE4L,EAAU,EAETlN,EAAQzD,EAAAA,OAAa,CAAC,IAAO,EACjCwC,SAAAA,EACAwS,SAAU,CACRC,UAAWV,EACXW,UAAWN,EACXO,SAAUJ,CACZ,CACF,GAAI,CAAEH,EAAkBL,EAAkBQ,EAAkBvS,EAAU,EAEtE,MACE,GAAA7B,EAAAC,IAAA,EAACsC,EAA2BA,WAC1B,GAAAvC,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAOA,EACPX,QAAUA,EACV+B,OAAS7B,EACT8B,MAAQA,IAER0I,EAAO,GAAAxL,EAAAG,GAAA,EAACqC,OAAAA,UAAOgJ,IAAgB,OAGvC,GCxKA,IAAMiJ,GAAa,CAAE,OAAiB,OAAiB,CAoBvD,IAAAC,GAAerV,EAAAA,IAAU,CAlBiB,IAEtC,GAAAW,EAAAC,IAAA,EAACiM,EAA0BA,CAACtG,MAAM,kEAChC,GAAA5F,EAAAG,GAAA,EAACmM,EAAiCA,CAAAA,GAClC,GAAAtM,EAAAG,GAAA,EAACoM,GAAmCA,CAAAA,GACpC,GAAAvM,EAAAG,GAAA,EAACqM,GAAqCA,CAAAA,GACtC,GAAAxM,EAAAG,GAAA,EAACwU,GAAgCA,CAC/BtC,UAAYoC,GACZzE,SAAQ,GACRnO,SAAQ,GACR+D,MAAM,+BACN4F,KAAK,sDAEP,GAAAxL,EAAAG,GAAA,EAACwM,GAAkCA,CAAAA,OCXzC,IAAMiI,GAAwB,eA8D9B,IAAAC,GAAexV,EAAAA,IAAU,CA5DsB,SAMQwB,EALrD,GAAM,CAAEwC,EAASyR,EAAY,CAAGzV,EAAAA,QAAc,CAAgB,EAAE,EAC1D,CAAEwB,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAEiU,MAAAA,CAAK,CAAE,CAAGhU,CAAAA,EAAAA,EAAAA,EAAAA,IAChCrB,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,IAEX6S,EAAUuC,EAAM,WAChBC,EAAe,YAAanU,EAAUM,MAAM,QAAGN,CAAAA,EAAAA,EAAUM,MAAM,CAACqR,OAAO,GAAxB3R,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA0B2F,OAAO,CAAGnF,KAAAA,EAEzF6J,CAAAA,EAAAA,EAAAA,CAAAA,EAAgB,KACd,GAAI,CAAC8J,EACH,OAGF,IAAMC,EAAcD,EAAaE,KAAK,CAACN,IACjCO,EAAgBF,MAAAA,EAAAA,KAAAA,EAAAA,CAAa,CAAC,EAAE,CAAC7D,KAAK,CAAC,KAC7C,GAAI,CAACvR,MAAMC,OAAO,CAACqV,IAAkBA,IAAAA,EAAc/Q,MAAM,CACvD,OAGF,IAAMgR,EAAaD,EAAc7R,GAAG,CAAC,CAACmF,EAAQiB,IAAW,EAAEjG,MAAOgF,EAAQlF,MAAO8R,OAAO3L,EAAQ,EAAG,IACnGoL,EAAWM,EACb,EAAG,CAAEJ,EAAc,EAEnB9J,CAAAA,EAAAA,EAAAA,CAAAA,EAAgB,KACd4J,EAAW,EAAE,CACf,EAAG,CAAEtC,EAAS,EAEd,IAAMxR,EAAgB3B,EAAAA,WAAiB,CAAC,OAAC,CAAE4B,MAAAA,CAAK,CAAgE,CAAAxB,EACxGyB,EAAQ,mBAAoBL,EAAUM,MAAM,CAAGN,EAAUM,MAAM,CAACmU,cAAc,CAAGjU,KAAAA,EAEvF,MACE,GAAArB,EAAAG,GAAA,EAACwD,EAAAA,CAAWA,CAAAA,CACR,GAAG1C,CAAK,CACVoC,QAAUA,EACV1B,KAAOjC,EAAW,KAAO,KACzBkE,YAAY,gBACZ1B,WAAarB,EAAUsB,YAAY,CACnCjB,MAAQA,EACRQ,WAAU,GACVmC,QAAU,IAGhB,EAAG,CAAEhD,EAAUM,MAAM,CAAEN,EAAUsB,YAAY,CAAEzC,EAAU2D,EAAS,SAElE,IAAIA,EAAQe,MAAM,CACT,KAIP,GAAApE,EAAAG,GAAA,EAACoC,EAA2BA,UAC1B,GAAAvC,EAAAG,GAAA,EAACyC,EAAAA,EAAUA,CAAAA,CACTnB,KAAK,iBACLX,QAAUA,EACV+B,OAAS7B,EACT8B,MAAO,CAAEjB,SAAU,EAAK,KAIhC,GCnEA,IAAM4S,GAAa,CAAE,QAAkB,OAAiB,CAiBxD,IAAAc,GAAelW,EAAAA,IAAU,CAfY,IAEjC,GAAAW,EAAAC,IAAA,EAACiM,EAA0BA,CAACtG,MAAM,0DAChC,GAAA5F,EAAAG,GAAA,EAACwU,GAAgCA,CAC/BtC,UAAYoC,GACZzE,SAAQ,GACRnO,SAAQ,GACR+D,MAAM,4BACN4F,KAAK,6GAEP,GAAAxL,EAAAG,GAAA,EAACqV,GAAsCA,CAAAA,OCR7C,IAAMf,GAAa,CAAE,QAAkB,CAkBvC,IAAAgB,GAAepW,EAAAA,IAAU,CAhBiB,OAAC,CAAE4I,OAAAA,CAAM,CAA+C,CAAAxI,EAChG,MACE,GAAAO,EAAAC,IAAA,EAACiM,EAA0BA,CAACtG,MAAM,sEAC9B,CAACqC,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAQkE,qCAAqC,GAAI,GAAAnM,EAAAG,GAAA,EAACiM,GAA6BA,CAAAA,GAClF,GAAApM,EAAAG,GAAA,EAACmM,EAAiCA,CAAAA,GAClC,GAAAtM,EAAAG,GAAA,EAACwU,GAAgCA,CAC/BtC,UAAYoC,GACZ7O,MAAM,sBACN4F,KAAK,2EACL3J,SAAQ,KAER,CAACoG,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAQkE,qCAAqC,GAAI,GAAAnM,EAAAG,GAAA,EAACuM,EAAuCA,CAAAA,KAGlG,GCHAgJ,GAAerW,EAAAA,IAAU,CAZiB,OAAC,CAAE4I,OAAAA,CAAM,CAA+C,CAAAxI,EAChG,MACE,GAAAO,EAAAC,IAAA,EAACiM,EAA0BA,CAACtG,MAAM,uDAChC,GAAA5F,EAAAG,GAAA,EAACiM,GAA6BA,CAACZ,KAAK,mFACpC,GAAAxL,EAAAG,GAAA,EAACmM,EAAiCA,CAAC7E,QAAO,KACxCQ,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAQkE,qCAAqC,GAAI,GAAAnM,EAAAG,GAAA,EAACoM,GAAmCA,CAAC9E,QAAO,KAC/F,GAAAzH,EAAAG,GAAA,EAACsM,EAA6BA,CAAChF,QAAO,KACpC,CAACQ,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAQkE,qCAAqC,GAAI,GAAAnM,EAAAG,GAAA,EAACoH,EAAwCA,CAAAA,KAGnG,GCbA,IAAMoO,GAAqB,CAAE,MAAgB,CACvCC,GAAkB,CAAE,MAAgB,QAAkB,CAqC5D,IAAAC,GAAexW,EAAAA,IAAU,CAnCsB,KAE7C,IAAMyW,EACJ,GAAA9V,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACqC,OAAAA,UAAK,aACN,GAAAxC,EAAAG,GAAA,EAAC6D,EAAAA,CAAIA,CAAAA,CAACC,KAAK,uDAAuDC,OAAO,kBAAS,wBAClF,GAAAlE,EAAAG,GAAA,EAACqC,OAAAA,UAAK,wCAIV,MACE,GAAAxC,EAAAC,IAAA,EAACiM,EAA0BA,CAACtG,MAAM,+DAChC,GAAA5F,EAAAG,GAAA,EAACmM,EAAiCA,CAAC7E,QAAO,KAC1C,GAAAzH,EAAAG,GAAA,EAACoM,GAAmCA,CAAC9E,QAAO,KAC5C,GAAAzH,EAAAG,GAAA,EAACwU,GAAgCA,CAC/BlT,KAAK,UACL4Q,UAAYsD,GACZ/P,MAAM,0BACN4F,KAAQ,oMAIR3J,SAAQ,KAEV,GAAA7B,EAAAG,GAAA,EAACwU,GAAgCA,CAC/BlT,KAAK,aACL4Q,UAAYuD,GACZ5F,SAAQ,GACRpK,MAAM,4BACN4F,KAAOsK,MAIf,GCtCA,IAAMrB,GAAa,CAAE,QAAkB,CAgBvC,IAAAsB,GAAe1W,EAAAA,IAAU,CAdsB,IAE3C,GAAAW,EAAAC,IAAA,EAACiM,EAA0BA,CAACtG,MAAM,mEAChC,GAAA5F,EAAAG,GAAA,EAACmM,EAAiCA,CAAC7E,QAAO,KAC1C,GAAAzH,EAAAG,GAAA,EAACwU,GAAgCA,CAC/BtC,UAAYoC,GACZ7O,MAAM,sBACN4F,KAAK,2EACL3J,SAAQ,SCiMhBmU,GAAe3W,EAAAA,IAAU,CA7KQ,OAAC,CAAEmE,OAAQyS,CAAe,CAAEhO,OAAAA,CAAM,CAAEiO,KAAAA,CAAI,CAAS,CAAAzW,EAC1E0W,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,EAAoB,CAClCC,KAAM,SACNC,cAAeL,EAAkBM,CAAAA,EAAAA,EAAAA,EAAAA,EAAiBN,EAAiBhO,EAAQiO,GAAQ7U,KAAAA,CACrF,GACM,CAAEP,QAAAA,CAAO,CAAE0V,aAAAA,CAAY,CAAEzB,MAAAA,CAAK,CAAElU,UAAAA,CAAS,CAAE4V,SAAAA,CAAQ,CAAEC,MAAAA,CAAK,CAAEC,cAAAA,CAAa,CAAE,CAAGR,EAC9ES,EAAwBvX,EAAAA,MAAY,GACpCwX,EAAgBxX,EAAAA,MAAY,GAE5ByX,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,IACXC,EAAQC,CAAAA,EAAAA,EAAAA,CAAAA,IAERC,EAA0C7X,EAAAA,WAAiB,CAAC,MAAM8X,IACtE,IAAMC,EAAOC,CAAAA,EAAAA,EAAAA,EAAAA,EAAmBF,GAEhC,GAAI,CAACjB,EACH,GAAI,CACF,IAAMoB,EAAW,MAAMR,EAAoC,WAAY,CACrES,WAAY,CAAErB,KAAMiB,EAAK/V,OAAO,CAACyH,WAAW,EAAG,CACjD,GAEM2O,EAAqB,gBAAiBF,GAAYA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUG,WAAW,GAAI,CAACH,EAASI,qBAAqB,CAChH,GAAIF,EAEF,OADAf,EAAS,UAAW,CAAEjQ,QAAS,oCAAqC,GAC7DxH,QAAQG,OAAO,EAE1B,CAAE,MAAO+B,EAAO,CACd,IAAMyW,EAAaC,CAAAA,EAAAA,EAAAA,CAAAA,EAAsB1W,GAGzC,OADAuV,EAAS,UAAW,CAAEjQ,QADNmR,MAAAA,EAAqB,kCAAoC,sBAC3C,GACvB3Y,QAAQG,OAAO,EACxB,CAGF,GAAI,CACF,MAAM2X,EAAS,4BAA6B,CAC1CS,WAAY,CAAE/T,OAAQ2T,EAAK3T,MAAM,CAACD,KAAK,CAAE2S,KAAMiB,EAAK/V,OAAO,CAACyH,WAAW,EAAG,EAC1EgP,YAAa,CACXrU,OAAQ,OACR4T,KAAAA,CACF,CACF,EACF,CAAE,MAAOlW,EAAO,CACd,MACF,CAEA,OAAO,IAAIlC,QAAQ,IACjB4X,EAAsB9Q,OAAO,CAAG3G,CAClC,EACF,EAAG,CAAE2X,EAAUZ,EAAMO,EAAU,EAEzBrV,EAAU2T,EAAM,WAChB+C,EAAenB,EAAc,WAE7BoB,EAAwE1Y,EAAAA,WAAiB,CAAC,MAAM2Y,IACpG,GAAIA,UAAAA,EAAQC,MAAM,CAAc,KAI9BrB,EAHA,IAAMzV,EAAS+W,CAAAA,EAAAA,EAAAA,EAAAA,EAAmBF,EAAQ7W,MAAM,EAChDA,EAAOyH,MAAM,CAAC7G,SAASoW,OAAO,CAAC,OAAC,CAAElX,EAAOC,EAAO,CAAAzB,SAAKgX,EAASxV,EAAOC,EAAK,GAC1E,MAAMpC,CAAAA,EAAAA,EAAAA,CAAAA,EAAM,KACiB,OAA7B8X,CAAAA,EAAAA,EAAsB9Q,OAAO,GAA7B8Q,KAAAA,IAAAA,GAAAA,EAAAA,IAAAA,CAAAA,EAAgC,MAChC,MACF,CAEAI,EAAM,CACJoB,SAAU,YACVxS,MAAO,UACPyS,YAAa,qCACbJ,OAAQ,UACR1W,QAAS,SACT+W,WAAY,EACd,GAEAC,EAAAA,EAAiB,CACfA,EAAAA,EAAmB,CAACC,qBAAqB,CACzC,CAAEC,OAAQ,WAAYC,OAAQ7B,EAAc/Q,OAAO,EAAI,EAAG,EAC1D,CAAE6S,iBAAkB,EAAK,GAG3B1Z,OAAO2Z,QAAQ,CAACC,MAAM,CAACC,CAAAA,EAAAA,EAAAA,CAAAA,EAAM,CAAEC,SAAU,kBAAmBC,MAAO,CAAE9C,KAAM9U,EAAS6X,IAAK,UAAW,CAAE,GACxG,EAAG,CAAExC,EAAUO,EAAO5V,EAAS,EAEzB8X,EAAoB7Z,EAAAA,WAAiB,CAAC,SAK1CuX,EAJA,GAAI,CAAC/V,EAAUsB,YAAY,CACzB,MAG2B,QAA7ByU,CAAAA,EAAAA,EAAsB9Q,OAAO,GAA7B8Q,KAAAA,IAAAA,GAAAA,EAAAA,IAAAA,CAAAA,EAAgC,MAEhC,IAAMuC,EAAU,cAChB,CAACnC,EAAMoC,QAAQ,CAACD,IAAYnC,EAAM,CAChCxV,GAAI2X,EACJf,SAAU,YACVxS,MAAO,QACPyS,YAAa,8DACbJ,OAAQ,QACR1W,QAAS,SACT+W,WAAY,EACd,EAIF,EAAG,CAAEtB,EAAO,EAENqC,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,EAAiB,CAC/BC,MAAO,aAAsC9O,MAAA,CAAxBrJ,MAAAA,EAAAA,KAAAA,EAAAA,EAASyH,WAAW,IACzC2Q,cAAeN,EACfO,cAAeP,EACfhX,WAAYH,CAAAA,CAAQX,CAAAA,GAAW0W,EAAa5W,KAAK,CACnD,GACAwY,CAAAA,EAAAA,EAAAA,CAAAA,EAAiB,CACfL,QAAAA,EACA7K,MAAO,sBACPmL,QAAS5B,CACX,GAEA,IAAM7U,EAAU7D,EAAAA,OAAa,CAAC,IACrB,EACL,iBAAkB,GAAAW,EAAAG,GAAA,EAACyZ,GAAqCA,CAAC3R,OAASA,IAClE,iBAAkB,GAAAjI,EAAAG,GAAA,EAAC0Z,GAAiCA,CAAC5R,OAASA,IAC9D6R,SAAU,GAAA9Z,EAAAG,GAAA,EAAC4Z,GAA4BA,CAAAA,GACvC,aAAc,GAAA/Z,EAAAG,GAAA,EAAC6Z,GAAiCA,CAAAA,GAChD,aAAc,GAAAha,EAAAG,GAAA,EAAC8Z,GAAiCA,CAAChS,OAASA,IAC1D,mBAAoB,GAAAjI,EAAAG,GAAA,EAAC+Z,GAAsCA,CAAAA,GAC3D,uBAAwB,GAAAla,EAAAG,GAAA,EAACga,GAAsCA,CAAAA,EACjE,GACC,CAAElS,EAAQ,EACPzE,EAASuR,EAAM,UACfvE,EAAUtN,CAAO,CAACM,MAAAA,EAAAA,KAAAA,EAAAA,EAAQD,KAAK,CAAC,EAAI,KACpC6W,EAAc5W,MAAAA,EAAAA,KAAAA,EAAAA,EAAQD,KAAK,CAajC,MAXA2H,CAAAA,EAAAA,EAAAA,CAAAA,EAAgB,KACd,GAAIkP,EAAa,CACf1D,EAAMH,CAAAA,EAAAA,EAAAA,EAAAA,EAAiB6D,EAAanS,EAAQ7G,GAAW8U,IAEvD,IAAMmE,EAAa3W,EAAAA,EAAa,CAAC0W,EAAY,CAC7C7B,EAAAA,EAAiB,CAACA,EAAAA,EAAmB,CAACC,qBAAqB,CAAE,CAAEC,OAAQ,kBAAmBC,OAAQ2B,CAAW,GAC7GxD,EAAc/Q,OAAO,CAAGuU,CAC1B,CAEF,EAAG,CAAED,EAAa,EAGhB,GAAApa,EAAAG,GAAA,EAACma,EAAAA,EAAYA,CAAAA,CAAG,GAAGnE,CAAO,UACxB,GAAAnW,EAAAC,IAAA,EAACX,EAAAA,CAAMA,CAACib,IAAI,EACVC,WAAU,GACVC,SAAWjE,EAAaU,aAExB,GAAAlX,EAAAC,IAAA,EAACkG,EAAAA,CAAIA,CAAAA,CAACuU,GAAG,UAAUtU,UAAU,OAAOC,OAAQ,CAAE9F,KAAM,EAAGC,GAAI,CAAE,EAAG8F,gBAAiB,CAAE/F,KAAM,MAAOC,GAAI,sCAAuC,YACvI,CAAC0V,GAAQ,GAAAlW,EAAAG,GAAA,EAACwa,EAAgCA,CAAAA,GAC5C,GAAA3a,EAAAG,GAAA,EAACya,EAA+BA,CAC9B9Z,QAAUA,EACVoC,QAAU+E,EAAO4S,oBAAoB,CACrC3Y,WAAarB,EAAUsB,YAAY,MAGrCqO,EACAzO,CAAAA,CAAQyB,GACR,GAAAxD,EAAAG,GAAA,EAAC6S,EAAAA,CAAMA,CAAAA,CACLzR,QAAQ,QACRI,KAAK,KACLmK,KAAK,SACLxL,GAAK,GACLwa,UAAYja,EAAUsB,YAAY,CAClC4Y,YAAY,4BACb,yBAOX,kGC3Me,SAASC,mBAAmBC,CAAgB,EACzD,MAAOC,CAAAA,EAAAA,EAAAA,CAAAA,EAAY,+BAAgC,CACjDC,aAAc,CACZC,OAAQ,GACC,EACL,GAAGjE,CAAI,CACP0D,qBAAsB1D,EAAK0D,oBAAoB,CAACjS,MAAM,CAACyS,EAAAA,EAAyBA,EAAEC,IAAI,CAACC,EAAAA,EAAuBA,CAChH,GAEFN,QAAAA,CACF,CACF,EACF,gRCCO,IAAMO,EAAyE,CACpF,iBACA,iBACA,WACA,aACA,aACA,mBACA,uBACD,CAEY9X,EAAiE,CAC5E,iBAAkB,mCAClB,iBAAkB,iCAClBoW,SAAU,sBACV,aAAc,8BACd,aAAc,mBACd,mBAAoB,2BACpB,uBAAwB,6BAC1B,EAEa2B,EAAsE,CACjF,iBAAkB,CAChBra,QAAS,GACToC,OAAQ,CACND,MAAO,iBACPE,MAAOC,CAAa,CAAC,iBAAiB,EAExCgY,OAAQ,GACRja,KAAM,GACNsH,SAAU,KACVQ,YAAa,KACboS,wBAAyB,GACzBjQ,kBAAmB,MACnBhE,KAAM,GACNkU,4BAA6B,GAC7BhV,iBAAkB,GAClB0E,UAAW,EAAE,EAEf,iBAAkB,CAChBlK,QAAS,GACToC,OAAQ,CACND,MAAO,iBACPE,MAAOC,CAAa,CAAC,iBAAiB,EAExCjC,KAAM,GACNsH,SAAU,KACVyJ,QAAS,EAAE,CACXoJ,4BAA6B,GAC7BhV,iBAAkB,EACpB,EACAkT,SAAU,CACR1Y,QAAS,GACToC,OAAQ,CACND,MAAO,WACPE,MAAOC,EAAcoW,QAAQ,EAE/BtH,QAAS,EAAE,EAEb,aAAc,CACZpR,QAAS,GACToC,OAAQ,CACND,MAAO,aACPE,MAAOC,CAAa,CAAC,aAAa,EAEpCqF,SAAU,KACVQ,YAAa,KACboS,wBAAyB,GACzBjQ,kBAAmB,MACnB8G,QAAS,EAAE,CACXlH,UAAW,EAAE,EAEf,aAAc,CACZlK,QAAS,GACToC,OAAQ,CACND,MAAO,aACPE,MAAOC,CAAa,CAAC,aAAa,EAEpCjC,KAAM,GACNsH,SAAU,KACVQ,YAAa,KACb7B,KAAM,GACNd,iBAAkB,EACpB,EACA,mBAAoB,CAClBxF,QAAS,GACToC,OAAQ,CACND,MAAO,mBACPE,MAAOC,CAAa,CAAC,mBAAmB,EAE1CqF,SAAU,KACVQ,YAAa,KACbiJ,QAAS,EAAE,EAEb,uBAAwB,CACtBpR,QAAS,GACToC,OAAQ,CACND,MAAO,uBACPE,MAAOC,CAAa,CAAC,uBAAuB,EAE9CqF,SAAU,KACVyJ,QAAS,EAAE,CAEf,EAEO,SAAS+D,iBAAiB/S,CAAuC,CAAEyE,CAAuC,CAAEiO,CAAa,EAC9H,IAAMI,EAAgB,CAAE,GAAGmF,CAAc,CAACjY,EAAO,CAAEpC,QAAS8U,CAAK,EAmBjE,MAjBI,gBAAiBI,IACf9S,CAAAA,mBAAAA,GAA+BA,eAAAA,CAAW,GAC5C8S,CAAAA,EAAc/M,WAAW,CAAGtB,EAAOqB,qBAAqB,CAACuS,IAAI,CAAC,GAAWtY,YAAAA,GAAuB,CAAEE,MAAO,UAAWF,MAAO,SAAU,EAAI,MAG5H,qBAAXC,GACF8S,CAAAA,EAAc/M,WAAW,CAAGtB,EAAOoB,kBAAkB,CAACwS,IAAI,CAAC,GAAWtY,YAAAA,GAAuB,CAAEE,MAAO,UAAWF,MAAO,SAAU,EAAI,OAItI0E,EAAOkE,qCAAqC,EAC1C3I,CAAAA,mBAAAA,GAA+BA,mBAAAA,CAAW,IAC5C,SAAU8S,GAAkBA,CAAAA,EAAc7U,IAAI,CAAGJ,KAAAA,CAAAA,EACjD,gCAAiCiV,GAAkBA,CAAAA,EAAcsF,2BAA2B,CAAG,KAI5FtF,CACT,CAEO,SAAS+E,0BAA0B7X,CAAe,EACvD,QAAOA,CAAAA,GAAUgY,EAA+BpT,QAAQ,CAAC5E,EAAAA,CAC3D,CAEO,SAAS+X,wBAAwBO,CAAwC,CAAEC,CAAwC,EACxH,IAAMC,EAASR,EAA+BS,OAAO,CAACH,GAChDI,EAASV,EAA+BS,OAAO,CAACF,UAEtD,EAAaG,EACJ,EAGLF,EAASE,EACJ,GAGF,CACT,CAEO,SAAS7E,mBAAmBF,CAAgB,MAKzBgF,EAOLA,EAgDKA,EACLA,EA5DnB,OAAQhF,EAAK3T,MAAM,CAACD,KAAK,EACvB,IAAK,iBAEH,MAAO,CACL6Y,iBAAgB,OAAED,CAAAA,EAAAA,EAAMpT,QAAQ,GAAdoT,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgB5Y,KAAK,CACvC8Y,YAAaF,EAAMzU,IAAI,CACvBiU,wBAAyBQ,EAAMR,uBAAuB,CACtDW,gBAAiBH,EAAMT,MAAM,CAC7BhQ,kBAAmByQ,EAAMzQ,iBAAiB,CAC1C6Q,cAAeJ,EAAM1a,IAAI,EAAIJ,KAAAA,EAC7BiK,UAAWkR,qBAAqBL,EAAM7Q,SAAS,EAC/C/B,YAAW,OAAE4S,CAAAA,EAAAA,EAAM5S,WAAW,GAAjB4S,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmB5Y,KAAK,CACrCqY,4BAA6BO,EAAMP,2BAA2B,CAC9DhV,iBAAkBuV,EAAMvV,gBAAgB,CAI5C,KAAK,iBAAkB,CAGrB,IAAMwQ,EAAO,IAAIqF,SAOjB,OANAN,EAAMpT,QAAQ,EAAIqO,EAAKsF,GAAG,CAAC,mBAAoBP,EAAMpT,QAAQ,CAACxF,KAAK,EACnE6T,EAAKsF,GAAG,CAAC,gBAAiBP,EAAM1a,IAAI,EACpC2V,EAAKsF,GAAG,CAAC,8BAA+BrH,OAAOtT,CAAAA,CAAQoa,EAAMP,2BAA2B,GACxFxE,EAAKsF,GAAG,CAAC,mBAAoBP,EAAMvV,gBAAgB,EACnD+V,mBAAmBvF,EAAM+E,EAAM3J,OAAO,CAAE,SAEjC4E,CACT,CAEA,IAAK,WAAY,CAEf,IAAMA,EAAO,IAAIqF,SAIjB,OAHAE,mBAAmBvF,EAAM+E,EAAM3J,OAAO,CAAE,SACxC2J,EAAM7G,cAAc,EAAI8B,EAAKsF,GAAG,CAAC,wBAAyBP,EAAM7G,cAAc,CAAC/R,KAAK,EAE7E6T,CACT,CAEA,IAAK,aAAc,CAGjB,IAAMA,EAAO,IAAIqF,QACjBN,CAHchF,EAGRpO,QAAQ,EAAIqO,EAAKsF,GAAG,CAAC,mBAAoBP,EAAMpT,QAAQ,CAACxF,KAAK,EACnE4Y,EAAM5S,WAAW,EAAI6N,EAAKsF,GAAG,CAAC,cAAeP,EAAM5S,WAAW,CAAChG,KAAK,EACpE6T,EAAKsF,GAAG,CAAC,0BAA2BrH,OAAOtT,CAAAA,CAAQoa,EAAMR,uBAAuB,GAChFQ,EAAMR,uBAAuB,EAAIvE,EAAKsF,GAAG,CAAC,oBAAqBP,EAAMzQ,iBAAiB,EAEtF,IAAMJ,EAAYkR,qBAAqBL,EAAM7Q,SAAS,EAItD,OAHAA,GAAa8L,EAAKsF,GAAG,CAAC,YAAaE,KAAKC,SAAS,CAACvR,IAClDqR,mBAAmBvF,EAAM+E,EAAM3J,OAAO,CAAE,SAEjC4E,CACT,CAEA,IAAK,aAGH,MAAO,CACLgF,iBAAgB,OAAED,CAAAA,EAAAA,EAAMpT,QAAQ,GAAdoT,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgB5Y,KAAK,CACvCgG,YAAW,OAAE4S,CAAAA,EAAAA,EAAM5S,WAAW,GAAjB4S,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmB5Y,KAAK,CACrC8Y,YAAaF,EAAMzU,IAAI,CACvB6U,cAAeJ,EAAM1a,IAAI,CACzBmF,iBAAkBuV,EAAMvV,gBAAgB,CAI5C,KAAK,mBAAoB,CAGvB,IAAMwQ,EAAO,IAAIqF,SAMjB,OALAN,EAAMpT,QAAQ,EAAIqO,EAAKsF,GAAG,CAAC,mBAAoBP,EAAMpT,QAAQ,CAACxF,KAAK,EACnE4Y,EAAM5S,WAAW,EAAI6N,EAAKsF,GAAG,CAAC,cAAeP,EAAM5S,WAAW,CAAChG,KAAK,EACpEoZ,mBAAmBvF,EAAM+E,EAAM3J,OAAO,CAAE,SACxCmK,mBAAmBvF,EAAM+E,EAAM1J,UAAU,CAAE,cAEpC2E,CACT,CAEA,IAAK,uBAAwB,CAG3B,IAAMA,EAAO,IAAIqF,SAIjB,OAHAN,EAAMpT,QAAQ,EAAIqO,EAAKsF,GAAG,CAAC,mBAAoBP,EAAMpT,QAAQ,CAACxF,KAAK,EACnEoZ,mBAAmBvF,EAAM+E,EAAM3J,OAAO,CAAE,SAEjC4E,CACT,CAEA,QACE,MAAO,CAAC,CAEZ,CACF,CAEA,SAASoF,qBAAqBlR,CAA6C,EACzE,GAAI,GAAcA,IAAAA,EAAUlH,MAAM,CAIlC,OAAOkH,EAAUwR,MAAM,CAAyB,CAACC,EAAQ9P,KACvD8P,CAAM,CAAC9P,EAAKxL,IAAI,CAAC,CAAGwL,EAAK7L,OAAO,CACzB2b,GACN,CAAC,EACN,CAEA,SAASJ,mBAAmBvF,CAAc,CAAExI,CAA8B,CAAEoO,CAAiC,EAC3G,GAAKpO,EAIL,IAAK,IAAIlF,EAAQ,EAAGA,EAAQkF,EAAMxK,MAAM,CAAEsF,IAAS,CACjD,IAAMwE,EAAOU,CAAK,CAAClF,EAAM,CACzB0N,EAAKsF,GAAG,CAAC,GAAmBhT,MAAAA,CAAfsT,EAAW,KAAWvS,MAAA,CAAPf,EAAO,KAAIwE,EAAMA,EAAKzM,IAAI,CACxD,CACF,CAEA,IAAMwb,EAA+F,CACnGC,qBAAsB,OACtBtO,MAAO,UACP6D,WAAY,aACZ2J,iBAAkB,WAClBe,sBAAuB,mBACvB1b,KAAM,MACR,EAEO,SAASyW,mBAAmB/W,CAAsC,EACvE,OAAOic,OAAOzP,OAAO,CAACxM,GAAQmC,GAAG,CAAC,OAAC,CAAE+Z,EAAK9Z,EAAO,CAAA9D,EAE/C,GAAKwd,CAAuB,CADfI,EACqB,CAIlC,MAAO,CAAEJ,CAAuB,CALnBI,EAKyB,CAAE,CAAE7W,QAASjD,EAAMkQ,IAAI,CAAC,IAAK,EAAG,EAE1E,0GC9Re,SAASpM,cACtB5H,CAKsB,KALtB,CACEwB,MAAAA,CAAK,CACLqB,KAAAA,CAAI,CACJgF,SAAAA,CAAQ,CACRpF,WAAAA,CAAU,CACU,CALtBzC,EAOM6d,EAAsCje,EAAAA,WAAiB,CAAC,sCAAIke,EAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAChEtc,EAAMqG,QAAQ,IAAIiW,GAClBjW,MAAAA,GAAAA,GACF,EAAG,CAAErG,EAAOqG,EAAU,EAEtB,MACE,GAAAkW,EAAArd,GAAA,EAAC+I,EAAAA,CAAQA,CAAAA,CACPuU,UAAYxc,EAAMsC,KAAK,CACvB+D,SAAWgW,EACXzX,IAAM5E,EAAM4E,GAAG,CACf6X,YAAY,OACZ/b,KAAK,KACLO,WAAaA,WAEXI,GAGR,kFCzBAqb,EAAAC,CAAA,CAAete,CAAAA,EAAAA,EAAAA,CAAAA,EAVQ,OAAC,CAAEE,UAAAA,CAAS,CAA0B,CAAAC,EAC3D,MACE,GAAA+d,EAAArd,GAAA,EAAC0d,EAAAA,CAAKA,CAAAA,CAAC5F,OAAO,UAAU6F,MAAM,cAActe,UAAYA,WACtD,GAAAge,EAAArd,GAAA,EAAC4d,EAAAA,CAAgBA,CAAAA,UAAC,uEAKxB,0ICgCA,IAAMC,gBAAwE,IAC5E,IAAMC,EAAwBC,SAAAA,EAAuB,WAAa,WAC5DC,EAAyBD,SAAAA,EAAuB,WAAa,WAEnE,MAAO,CACLpd,QAAS,CAACsd,EAAUC,IAAW,EAC7B,GAAGD,CAAQ,CACX7O,YAAa8O,EAAM/K,QAAQ,CAAG6K,EAAyBF,CACzD,GACAK,eAAgB,GAAe,EAC7B,GAAGF,CAAQ,CACXG,GAAI,EACJC,GAAI,CACN,GACAC,eAAgB,CAACL,EAAUC,IAAW,EACpC,GAAGD,CAAQ,CACX,GAAGM,SAtDwB/c,CAAW,EAC1C,OAAQA,GACN,IAAK,KACL,IAAK,KACH,MAAO,CACLgd,YAAa,CACf,CAEF,KAAK,KACH,MAAO,CACLA,YAAa,CACf,CAEF,SACE,MAAO,CAAC,CAEZ,CACF,EAqCiCN,EAAMO,WAAW,CAACjd,IAAI,CAAC,CAClD4c,GAAI,CACN,GACAM,YAAa,CAACT,EAAUC,IAAW,EACjC,GAAGD,CAAQ,CACXI,GAAI,EACJM,UAAW,OACX,GAAGC,SA1CqBpd,CAAW,EACvC,OAAQA,GACN,IAAK,KACL,IAAK,KACH,MAAO,CACLqd,IAAK,MACP,CAEF,KAAK,KACH,MAAO,CACLA,IAAK,MACP,CAEF,SACE,MAAO,CAAC,CAEZ,CACF,EAyB8BX,EAAMO,WAAW,CAACjd,IAAI,CAAC,CACjD,CACF,CACF,iBCCAsd,EAAe5f,EAAAA,IAAU,CAACA,EAAAA,UAAgB,CA1CtB,CAAC6f,EAAcrZ,KACjC,IAAMsZ,EAAaC,CAAAA,EAAAA,EAAAA,EAAAA,EAAS,WAAY,YAClC,CAAElB,UAAAA,CAAS,CAAE,CAAGmB,CAAAA,EAAAA,EAAAA,EAAAA,IAEhBC,EAASjgB,EAAAA,OAAa,CAAC,IAAO,EAClCkgB,WAAY,GAAmC,EAAE,GAAGnB,CAAQ,CAAEoB,OAAQL,CAAW,EACnF,GAAI,CAAEA,EAAY,EAEZM,EAAepgB,EAAAA,OAAa,CAAC,IAAM2e,gBAAgBE,GAAY,CAAEA,EAAW,EAE5EwB,EAAkBR,EAAMrb,OAAO,CAAG8b,EAAAA,CAAWA,CAAGC,EAAAA,CAAMA,CAE5D,MACE,GAAA5f,EAAAC,IAAA,EAACqB,EAAAA,EAAWA,CAAAA,CACVC,QAAQ,WACRI,KAAOud,EAAMvd,IAAI,EAAI,KACrBD,WAAawd,EAAMxd,UAAU,CAC7BmE,IAAMA,EACJ,GAAIqZ,EAAMhe,KAAK,CAAG,CAAE,eAAgB,EAAK,EAAI,CAAC,CAAC,CAC/C,GAAIge,EAAMhd,UAAU,CAAG,CAAE,gBAAiB,EAAK,EAAI,CAAC,CAAC,CACrD,GAAIgd,EAAM3b,KAAK,CAAG,CAAE,cAAe,EAAK,EAAI,CAAC,CAAC,WAEhD,GAAAvD,EAAAG,GAAA,EAACuf,EAAAA,CACG,GAAGR,CAAK,CACVvd,KAAOud,EAAMvd,IAAI,EAAI,KACrBke,iBAAmB5gB,OAAO6gB,QAAQ,CAAC1I,IAAI,CACvCxT,YAAY,GACZ0b,OAASA,EACTG,aAAeA,EACf3d,UAAYC,CAAAA,CAAQmd,EAAMhe,KAAK,CAC/B6e,eAAc,KAEhB,GAAA/f,EAAAG,GAAA,EAACkC,EAAAA,CAAgBA,CAAAA,CACfC,KAAO,iBAAO4c,EAAMtb,WAAW,CAAgBsb,EAAMtb,WAAW,CAAG,GACnE4G,KAAO0U,EAAMjW,eAAe,CAC5B/H,MAAQge,EAAMhe,KAAK,CACnB8e,QAAO,OAIf,yEClCArC,EAAAC,CAAA,CAAete,CAAAA,EAAAA,EAAAA,CAAAA,EArBU,OAAC,CAAEgD,KAAAA,CAAI,CAAEkI,KAAAA,CAAI,CAAEtJ,MAAAA,CAAK,CAAE1B,UAAAA,CAAS,CAAEwgB,QAAAA,CAAO,CAAEC,UAAAA,CAAS,CAAS,CAAAxgB,EAC/EygB,EAAehf,MAAAA,EAAAA,KAAAA,EAAAA,EAAOsF,OAAO,CAMjC,OAJK0Z,GAAgBhf,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAO4K,IAAI,IAAK,WACnCoU,CAAAA,EAAe,kBAIf,GAAA1C,EAAAvd,IAAA,EAACkgB,EAAAA,CAASA,CAAAA,CACR3gB,UAAYA,EACZ2K,WAAW,SACT,GAAI6V,EAAU,CAAE,aAAc,EAAK,EAAI,CAAC,CAAC,CACzC,GAAIC,EAAY,CAAE,gBAAiB,EAAK,EAAI,CAAC,CAAC,WAE9CzV,EACF,GAAAgT,EAAArd,GAAA,EAACb,EAAAA,CAAMA,CAACkD,IAAI,WAAGF,IACb4d,GAAgB,GAAA1C,EAAAvd,IAAA,EAACX,EAAAA,CAAMA,CAACkD,IAAI,EAAC4d,MAAQ,EAAIzO,WAAW,gBAAM,MAAKuO,OAGvE","sources":["webpack://_N_E/./lib/delay.ts","webpack://_N_E/./ui/contractVerification/ContractVerificationFormRow.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldAddress.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldMethod.tsx","webpack://_N_E/./ui/contractVerification/ContractVerificationMethod.tsx","webpack://_N_E/./ui/shared/forms/FieldError.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldConstructorArgs.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldAutodetectArgs.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldCode.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldCompiler.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldEvmVersion.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldIsYul.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldLibraryItem.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldLibraries.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldName.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldOptimization.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationFlattenSourceCode.tsx","webpack://_N_E/./ui/shared/forms/utils/files.ts","webpack://_N_E/./ui/shared/forms/DragAndDropArea.tsx","webpack://_N_E/./ui/shared/forms/FileInput.tsx","webpack://_N_E/./ui/shared/forms/FileSnippet.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldSources.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationMultiPartFile.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldContractIndex.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationSourcify.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationStandardInput.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationVyperContract.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationVyperMultiPartFile.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationVyperStandardInput.tsx","webpack://_N_E/./ui/contractVerification/ContractVerificationForm.tsx","webpack://_N_E/./ui/contractVerification/useFormConfigQuery.tsx","webpack://_N_E/./ui/contractVerification/utils.ts","webpack://_N_E/./ui/shared/CheckboxInput.tsx","webpack://_N_E/./ui/shared/DataFetchAlert.tsx","webpack://_N_E/./ui/shared/FancySelect/utils.ts","webpack://_N_E/./ui/shared/FancySelect/FancySelect.tsx","webpack://_N_E/./ui/shared/InputPlaceholder.tsx","webpack://_N_E/<anon>"],"sourcesContent":["export default function delay(time: number) {\n  return new Promise((resolve) => window.setTimeout(resolve, time));\n}\n","import { chakra, GridItem } from '@chakra-ui/react';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\n\ninterface Props {\n  children: [JSX.Element, JSX.Element | null] | (JSX.Element | null);\n  className?: string;\n}\n\nconst ContractVerificationFormRow = ({ children, className }: Props) => {\n  const isMobile = useIsMobile();\n\n  const firstChildren = Array.isArray(children) ? children[0] : children;\n  const secondChildren = Array.isArray(children) ? children[1] : null;\n\n  return (\n    <>\n      <GridItem className={ className } _notFirst={{ mt: { base: 3, lg: 0 } }}>{ firstChildren }</GridItem>\n      { isMobile && !secondChildren ? null : <GridItem fontSize=\"sm\" className={ className } color=\"text_secondary\">{ secondChildren }</GridItem> }\n    </>\n  );\n};\n\nexport default React.memo(chakra(ContractVerificationFormRow));\n","import { FormControl, Input, chakra } from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps } from 'react-hook-form';\nimport { Controller, useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport { ADDRESS_REGEXP, ADDRESS_LENGTH } from 'lib/validations/address';\nimport InputPlaceholder from 'ui/shared/InputPlaceholder';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\ninterface Props {\n  isReadOnly?: boolean;\n}\n\nconst ContractVerificationFieldAddress = ({ isReadOnly }: Props) => {\n  const { formState, control } = useFormContext<FormFields>();\n\n  const renderControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, 'address'>}) => {\n    const error = 'address' in formState.errors ? formState.errors.address : undefined;\n\n    return (\n      <FormControl variant=\"floating\" id={ field.name } isRequired size={{ base: 'md', lg: 'lg' }}>\n        <Input\n          { ...field }\n          required\n          isInvalid={ Boolean(error) }\n          maxLength={ ADDRESS_LENGTH }\n          isDisabled={ formState.isSubmitting || isReadOnly }\n          autoComplete=\"off\"\n        />\n        <InputPlaceholder text=\"Smart contract / Address (0x...)\" error={ error }/>\n      </FormControl>\n    );\n  }, [ formState.errors, formState.isSubmitting, isReadOnly ]);\n\n  return (\n    <>\n      <ContractVerificationFormRow>\n        <chakra.span fontWeight={ 500 } fontSize=\"lg\" fontFamily=\"heading\">\n          Contract address to verify\n        </chakra.span>\n      </ContractVerificationFormRow>\n      <ContractVerificationFormRow mb={ 3 }>\n        <Controller\n          name=\"address\"\n          control={ control }\n          render={ renderControl }\n          rules={{ required: true, pattern: ADDRESS_REGEXP }}\n        />\n      </ContractVerificationFormRow>\n    </>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldAddress);\n","import {\n  Link,\n  chakra,\n  Popover,\n  PopoverTrigger,\n  Portal,\n  PopoverContent,\n  PopoverArrow,\n  PopoverBody,\n  useColorModeValue,\n  DarkMode,\n  ListItem,\n  OrderedList,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps, Control } from 'react-hook-form';\nimport { Controller } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\nimport type { SmartContractVerificationConfig, SmartContractVerificationMethod } from 'types/api/contract';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport FancySelect from 'ui/shared/FancySelect/FancySelect';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport { METHOD_LABELS } from '../utils';\n\ninterface Props {\n  control: Control<FormFields>;\n  isDisabled?: boolean;\n  methods: SmartContractVerificationConfig['verification_options'];\n}\n\nconst ContractVerificationFieldMethod = ({ control, isDisabled, methods }: Props) => {\n  const tooltipBg = useColorModeValue('gray.700', 'gray.900');\n  const isMobile = useIsMobile();\n\n  const options = React.useMemo(() => methods.map((method) => ({\n    value: method,\n    label: METHOD_LABELS[method],\n  })), [ methods ]);\n\n  const renderControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, 'method'>}) => {\n    return (\n      <FancySelect\n        { ...field }\n        options={ options }\n        size={ isMobile ? 'md' : 'lg' }\n        placeholder=\"Verification method (compiler type)\"\n        isDisabled={ isDisabled }\n        isRequired\n        isAsync={ false }\n      />\n    );\n  }, [ isDisabled, isMobile, options ]);\n\n  const renderPopoverListItem = React.useCallback((method: SmartContractVerificationMethod) => {\n    switch (method) {\n      case 'flattened-code':\n        return <ListItem key={ method }>Verification through flattened source code.</ListItem>;\n      case 'multi-part':\n        return <ListItem key={ method }>Verification of multi-part Solidity files.</ListItem>;\n      case 'sourcify':\n        return <ListItem key={ method }>Verification through <Link href=\"https://sourcify.dev/\" target=\"_blank\">Sourcify</Link>.</ListItem>;\n      case 'standard-input':\n        return (\n          <ListItem key={ method }>\n            <span>Verification using </span>\n            <Link\n              href=\"https://docs.soliditylang.org/en/latest/using-the-compiler.html#input-description\"\n              target=\"_blank\"\n            >\n              Standard input JSON\n            </Link>\n            <span> file.</span>\n          </ListItem>\n        );\n      case 'vyper-code':\n        return <ListItem key={ method }>Verification of Vyper contract.</ListItem>;\n      case 'vyper-multi-part':\n        return <ListItem key={ method }>Verification of multi-part Vyper files.</ListItem>;\n      case 'vyper-standard-input':\n        return (\n          <ListItem key={ method }>\n            <span>Verification of Vyper contract using </span>\n            <Link\n              href=\"https://docs.vyperlang.org/en/stable/compiling-a-contract.html#compiler-input-and-output-json-description\"\n              target=\"_blank\"\n            >\n              Standard input JSON\n            </Link>\n            <span> file.</span>\n          </ListItem>\n        );\n    }\n  }, []);\n\n  return (\n    <>\n      <div>\n        <chakra.span fontWeight={ 500 } fontSize=\"lg\" fontFamily=\"heading\">\n          Currently, Blockscout supports { methods.length } contract verification methods\n        </chakra.span>\n        <Popover trigger=\"hover\" isLazy placement={ isMobile ? 'bottom-end' : 'right-start' } offset={ [ -8, 8 ] }>\n          <PopoverTrigger>\n            <chakra.span display=\"inline-block\" ml={ 1 } cursor=\"pointer\" verticalAlign=\"middle\" h=\"22px\">\n              <IconSvg name=\"info\" boxSize={ 5 } color=\"link\" _hover={{ color: 'link_hovered' }}/>\n            </chakra.span>\n          </PopoverTrigger>\n          <Portal>\n            <PopoverContent bgColor={ tooltipBg } w={{ base: '300px', lg: '380px' }}>\n              <PopoverArrow bgColor={ tooltipBg }/>\n              <PopoverBody color=\"white\">\n                <DarkMode>\n                  <span>Currently, Blockscout supports { methods.length } methods:</span>\n                  <OrderedList>\n                    { methods.map(renderPopoverListItem) }\n                  </OrderedList>\n                </DarkMode>\n              </PopoverBody>\n            </PopoverContent>\n          </Portal>\n        </Popover>\n      </div>\n      <div/>\n      <Controller\n        name=\"method\"\n        control={ control }\n        render={ renderControl }\n        rules={{ required: true }}\n      />\n    </>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldMethod);\n","import { Grid, Text } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  title: string;\n  children: React.ReactNode;\n}\n\nconst ContractVerificationMethod = ({ title, children }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    ref.current?.scrollIntoView({ behavior: 'smooth' });\n  }, []);\n\n  return (\n    <section ref={ ref }>\n      <Text fontWeight={ 500 } fontSize=\"lg\" fontFamily=\"heading\" mt={ 12 } mb={ 5 }>{ title }</Text>\n      <Grid columnGap=\"30px\" rowGap={{ base: 2, lg: 5 }} templateColumns={{ base: '1fr', lg: 'minmax(0, 680px) minmax(0, 340px)' }}>\n        { children }\n      </Grid>\n    </section>\n  );\n};\n\nexport default React.memo(ContractVerificationMethod);\n","import { Box, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  message: string;\n  className?: string;\n}\n\nconst FieldError = ({ message, className }: Props) => {\n  return <Box className={ className } color=\"error\" fontSize=\"sm\" mt={ 2 } wordBreak=\"break-word\">{ message }</Box>;\n};\n\nexport default chakra(FieldError);\n","import { FormControl, Link, Textarea } from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps } from 'react-hook-form';\nimport { Controller, useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport FieldError from 'ui/shared/forms/FieldError';\nimport InputPlaceholder from 'ui/shared/InputPlaceholder';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst ContractVerificationFieldConstructorArgs = () => {\n  const { formState, control } = useFormContext<FormFields>();\n\n  const renderControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, 'constructor_args'>}) => {\n    const error = 'constructor_args' in formState.errors ? formState.errors.constructor_args : undefined;\n\n    return (\n      <FormControl variant=\"floating\" id={ field.name } size={{ base: 'md', lg: 'lg' }} isRequired>\n        <Textarea\n          { ...field }\n          maxLength={ 255 }\n          isDisabled={ formState.isSubmitting }\n          isInvalid={ Boolean(error) }\n          required\n        />\n        <InputPlaceholder text=\"ABI-encoded Constructor Arguments\"/>\n        { error?.message && <FieldError message={ error?.message }/> }\n      </FormControl>\n    );\n  }, [ formState.errors, formState.isSubmitting ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <Controller\n        name=\"constructor_args\"\n        control={ control }\n        render={ renderControl }\n        rules={{ required: true }}\n      />\n      <>\n        <span>Add arguments in </span>\n        <Link href=\"https://solidity.readthedocs.io/en/develop/abi-spec.html\" target=\"_blank\">ABI hex encoded form</Link>\n        <span> if required by the contract. Constructor arguments are written right to left, and will be found at the end of the input created bytecode.</span>\n        <span> They may also be </span>\n        <Link href=\"https://abi.hashex.org/\" target=\"_blank\">parsed here</Link>\n        <span>.</span>\n      </>\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldConstructorArgs);\n","import React from 'react';\nimport type { ControllerRenderProps } from 'react-hook-form';\nimport { Controller, useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport CheckboxInput from 'ui/shared/CheckboxInput';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\nimport ContractVerificationFieldConstructorArgs from './ContractVerificationFieldConstructorArgs';\n\nconst ContractVerificationFieldAutodetectArgs = () => {\n  const [ isOn, setIsOn ] = React.useState(true);\n  const { formState, control, resetField } = useFormContext<FormFields>();\n\n  const handleCheckboxChange = React.useCallback(() => {\n    !isOn && resetField('constructor_args');\n    setIsOn(prev => !prev);\n  }, [ isOn, resetField ]);\n\n  const renderControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, 'autodetect_constructor_args'>}) => (\n    <CheckboxInput<FormFields, 'autodetect_constructor_args'>\n      text=\"Try to fetch constructor arguments automatically\"\n      field={ field }\n      isDisabled={ formState.isSubmitting }\n      onChange={ handleCheckboxChange }\n    />\n  ), [ formState.isSubmitting, handleCheckboxChange ]);\n\n  return (\n    <>\n      <ContractVerificationFormRow>\n        <Controller\n          name=\"autodetect_constructor_args\"\n          control={ control }\n          render={ renderControl }\n        />\n      </ContractVerificationFormRow>\n      { !isOn && <ContractVerificationFieldConstructorArgs/> }\n    </>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldAutodetectArgs);\n","import { FormControl, Link, Textarea } from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps } from 'react-hook-form';\nimport { useFormContext, Controller } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport FieldError from 'ui/shared/forms/FieldError';\nimport InputPlaceholder from 'ui/shared/InputPlaceholder';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\ninterface Props {\n  isVyper?: boolean;\n}\n\nconst ContractVerificationFieldCode = ({ isVyper }: Props) => {\n  const { formState, control } = useFormContext<FormFields>();\n\n  const renderControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, 'code'>}) => {\n    const error = 'code' in formState.errors ? formState.errors.code : undefined;\n\n    return (\n      <FormControl variant=\"floating\" id={ field.name } isRequired size={{ base: 'md', lg: 'lg' }}>\n        <Textarea\n          { ...field }\n          isInvalid={ Boolean(error) }\n          isDisabled={ formState.isSubmitting }\n          required\n        />\n        <InputPlaceholder text=\"Contract code\"/>\n        { error?.message && <FieldError message={ error?.message }/> }\n      </FormControl>\n    );\n  }, [ formState.errors, formState.isSubmitting ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <Controller\n        name=\"code\"\n        control={ control }\n        render={ renderControl }\n        rules={{ required: true }}\n      />\n      { isVyper ? null : (\n        <>\n          <span>We recommend using flattened code. This is necessary if your code utilizes a library or inherits dependencies. Use the </span>\n          <Link href=\"https://github.com/poanetwork/solidity-flattener\" target=\"_blank\">POA solidity flattener</Link>\n          <span> or the </span>\n          <Link href=\"https://www.npmjs.com/package/truffle-flattener\" target=\"_blank\">Truffle flattener</Link>\n        </>\n      ) }\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldCode);\n","import { chakra, Checkbox, Code } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\nimport type { ControllerRenderProps } from 'react-hook-form';\nimport { useFormContext, Controller } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\nimport type { SmartContractVerificationConfig } from 'types/api/contract';\n\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport FancySelect from 'ui/shared/FancySelect/FancySelect';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst OPTIONS_LIMIT = 50;\n\ninterface Props {\n  isVyper?: boolean;\n}\n\nconst ContractVerificationFieldCompiler = ({ isVyper }: Props) => {\n  const [ isNightly, setIsNightly ] = React.useState(false);\n  const { formState, control, getValues, resetField } = useFormContext<FormFields>();\n  const isMobile = useIsMobile();\n  const queryClient = useQueryClient();\n  const config = queryClient.getQueryData<SmartContractVerificationConfig>(getResourceKey('contract_verification_config'));\n\n  const handleCheckboxChange = React.useCallback(() => {\n    if (isNightly) {\n      const field = getValues('compiler');\n      field?.value.includes('nightly') && resetField('compiler', { defaultValue: null });\n    }\n    setIsNightly(prev => !prev);\n  }, [ getValues, isNightly, resetField ]);\n\n  const options = React.useMemo(() => (\n    (isVyper ? config?.vyper_compiler_versions : config?.solidity_compiler_versions)?.map((option) => ({ label: option, value: option })) || []\n  ), [ config?.solidity_compiler_versions, config?.vyper_compiler_versions, isVyper ]);\n\n  const loadOptions = React.useCallback(async(inputValue: string) => {\n    return options\n      .filter(({ label }) => !inputValue || label.toLowerCase().includes(inputValue.toLowerCase()))\n      .filter(({ label }) => isNightly ? true : !label.includes('nightly'))\n      .slice(0, OPTIONS_LIMIT);\n  }, [ isNightly, options ]);\n\n  const renderControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, 'compiler'>}) => {\n    const error = 'compiler' in formState.errors ? formState.errors.compiler : undefined;\n\n    return (\n      <FancySelect\n        { ...field }\n        loadOptions={ loadOptions }\n        defaultOptions\n        size={ isMobile ? 'md' : 'lg' }\n        placeholder=\"Compiler (enter version or use the dropdown)\"\n        placeholderIcon={ <IconSvg name=\"search\"/> }\n        isDisabled={ formState.isSubmitting }\n        error={ error }\n        isRequired\n        isAsync\n      />\n    );\n  }, [ formState.errors, formState.isSubmitting, isMobile, loadOptions ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <>\n        { !isVyper && (\n          <Checkbox\n            size=\"lg\"\n            mb={ 2 }\n            onChange={ handleCheckboxChange }\n            isDisabled={ formState.isSubmitting }\n          >\n            Include nightly builds\n          </Checkbox>\n        ) }\n        <Controller\n          name=\"compiler\"\n          control={ control }\n          render={ renderControl }\n          rules={{ required: true }}\n        />\n      </>\n      { isVyper ? null : (\n        <chakra.div mt={{ base: 0, lg: 8 }}>\n          <span >The compiler version is specified in </span>\n          <Code color=\"text_secondary\">pragma solidity X.X.X</Code>\n          <span>. Use the compiler version rather than the nightly build. If using the Solidity compiler, run </span>\n          <Code color=\"text_secondary\">solc —version</Code>\n          <span> to check.</span>\n        </chakra.div>\n      ) }\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldCompiler);\n","import { Link } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\nimport type { ControllerRenderProps } from 'react-hook-form';\nimport { useFormContext, Controller } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\nimport type { SmartContractVerificationConfig } from 'types/api/contract';\n\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport FancySelect from 'ui/shared/FancySelect/FancySelect';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\ninterface Props {\n  isVyper?: boolean;\n}\n\nconst ContractVerificationFieldEvmVersion = ({ isVyper }: Props) => {\n  const { formState, control } = useFormContext<FormFields>();\n  const isMobile = useIsMobile();\n  const queryClient = useQueryClient();\n  const config = queryClient.getQueryData<SmartContractVerificationConfig>(getResourceKey('contract_verification_config'));\n\n  const options = React.useMemo(() => (\n    (isVyper ? config?.vyper_evm_versions : config?.solidity_evm_versions)?.map((option) => ({ label: option, value: option })) || []\n  ), [ config?.solidity_evm_versions, config?.vyper_evm_versions, isVyper ]);\n\n  const renderControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, 'evm_version'>}) => {\n    const error = 'evm_version' in formState.errors ? formState.errors.evm_version : undefined;\n\n    return (\n      <FancySelect\n        { ...field }\n        options={ options }\n        size={ isMobile ? 'md' : 'lg' }\n        placeholder=\"EVM Version\"\n        isDisabled={ formState.isSubmitting }\n        error={ error }\n        isRequired\n      />\n    );\n  }, [ formState.errors, formState.isSubmitting, isMobile, options ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <Controller\n        name=\"evm_version\"\n        control={ control }\n        render={ renderControl }\n        rules={{ required: true }}\n      />\n      <>\n        <span>The EVM version the contract is written for. If the bytecode does not match the version, we try to verify using the latest EVM version. </span>\n        <Link\n          href={ isVyper ?\n            'https://docs.vyperlang.org/en/stable/compiling-a-contract.html#target-options' :\n            'https://docs.soliditylang.org/en/latest/using-the-compiler.html#target-options'\n          }\n          target=\"_blank\"\n        >\n          EVM version details\n        </Link>\n      </>\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldEvmVersion);\n","import React from 'react';\nimport type { ControllerRenderProps } from 'react-hook-form';\nimport { useFormContext, Controller } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport CheckboxInput from 'ui/shared/CheckboxInput';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst ContractVerificationFieldIsYul = () => {\n  const { formState, control } = useFormContext<FormFields>();\n\n  const renderControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, 'is_yul'>}) => (\n    <CheckboxInput<FormFields, 'is_yul'> text=\"Is Yul contract\" field={ field } isDisabled={ formState.isSubmitting }/>\n  ), [ formState.isSubmitting ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <Controller\n        name=\"is_yul\"\n        control={ control }\n        render={ renderControl }\n      />\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldIsYul);\n","import { Flex, FormControl, IconButton, Input, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport type { Control, ControllerRenderProps, FieldError } from 'react-hook-form';\nimport { Controller } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport { ADDRESS_REGEXP } from 'lib/validations/address';\nimport IconSvg from 'ui/shared/IconSvg';\nimport InputPlaceholder from 'ui/shared/InputPlaceholder';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst LIMIT = 10;\n\ninterface Props {\n  control: Control<FormFields>;\n  index: number;\n  fieldsLength: number;\n  error?: {\n    name?: FieldError;\n    address?: FieldError;\n  };\n  onAddFieldClick: (index: number) => void;\n  onRemoveFieldClick: (index: number) => void;\n  isDisabled?: boolean;\n}\n\nconst ContractVerificationFieldLibraryItem = ({ control, index, fieldsLength, onAddFieldClick, onRemoveFieldClick, error, isDisabled }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  const renderNameControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, `libraries.${ number }.name`>}) => {\n    return (\n      <FormControl variant=\"floating\" id={ field.name } isRequired size={{ base: 'md', lg: 'lg' }}>\n        <Input\n          { ...field }\n          required\n          isInvalid={ Boolean(error?.name) }\n          isDisabled={ isDisabled }\n          maxLength={ 255 }\n          autoComplete=\"off\"\n        />\n        <InputPlaceholder text=\"Library name (.sol file)\" error={ error?.name }/>\n      </FormControl>\n    );\n  }, [ error?.name, isDisabled ]);\n\n  const renderAddressControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, `libraries.${ number }.address`>}) => {\n    return (\n      <FormControl variant=\"floating\" id={ field.name } isRequired size={{ base: 'md', lg: 'lg' }}>\n        <Input\n          { ...field }\n          isInvalid={ Boolean(error?.address) }\n          isDisabled={ isDisabled }\n          required\n          autoComplete=\"off\"\n        />\n        <InputPlaceholder text=\"Library address (0x...)\" error={ error?.address }/>\n      </FormControl>\n    );\n  }, [ error?.address, isDisabled ]);\n\n  const handleAddButtonClick = React.useCallback(() => {\n    onAddFieldClick(index);\n  }, [ index, onAddFieldClick ]);\n\n  const handleRemoveButtonClick = React.useCallback(() => {\n    onRemoveFieldClick(index);\n  }, [ index, onRemoveFieldClick ]);\n\n  React.useEffect(() => {\n    ref.current?.scrollIntoView({ behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <ContractVerificationFormRow>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" ref={ ref } mt={ index !== 0 ? 6 : 0 }>\n          <Text variant=\"secondary\" fontSize=\"sm\">Contract library { index + 1 }</Text>\n          <Flex columnGap={ 5 }>\n            { fieldsLength > 1 && (\n              <IconButton\n                aria-label=\"delete\"\n                variant=\"outline\"\n                w=\"30px\"\n                h=\"30px\"\n                onClick={ handleRemoveButtonClick }\n                icon={ <IconSvg name=\"minus\" w=\"20px\" h=\"20px\"/> }\n                isDisabled={ isDisabled }\n              />\n            ) }\n            { fieldsLength < LIMIT && (\n              <IconButton\n                aria-label=\"add\"\n                variant=\"outline\"\n                w=\"30px\"\n                h=\"30px\"\n                onClick={ handleAddButtonClick }\n                icon={ <IconSvg name=\"plus\" w=\"20px\" h=\"20px\"/> }\n                isDisabled={ isDisabled }\n              />\n            ) }\n          </Flex>\n        </Flex>\n      </ContractVerificationFormRow>\n      <ContractVerificationFormRow>\n        <Controller\n          name={ `libraries.${ index }.name` }\n          control={ control }\n          render={ renderNameControl }\n          rules={{ required: true }}\n        />\n        { index === 0 ? (\n          <>\n            A library name called in the .sol file. Multiple libraries (up to 10) may be added for each contract.\n          </>\n        ) : null }\n      </ContractVerificationFormRow>\n      <ContractVerificationFormRow>\n        <Controller\n          name={ `libraries.${ index }.address` }\n          control={ control }\n          render={ renderAddressControl }\n          rules={{ required: true, pattern: ADDRESS_REGEXP }}\n        />\n        { index === 0 ? (\n          <>\n              The 0x library address. This can be found in the generated json file or Truffle output (if using truffle).\n          </>\n        ) : null }\n      </ContractVerificationFormRow>\n    </>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldLibraryItem);\n","import { Checkbox, useUpdateEffect } from '@chakra-ui/react';\nimport React from 'react';\nimport { useFieldArray, useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\nimport ContractVerificationFieldLibraryItem from './ContractVerificationFieldLibraryItem';\n\nconst ContractVerificationFieldLibraries = () => {\n  const { formState, control, getValues } = useFormContext<FormFields>();\n  const { fields, append, remove, insert } = useFieldArray({\n    name: 'libraries',\n    control,\n  });\n  const [ isEnabled, setIsEnabled ] = React.useState(fields.length > 0);\n\n  const value = getValues('libraries');\n\n  useUpdateEffect(() => {\n    if (!value || value.length === 0) {\n      setIsEnabled(false);\n    }\n  }, [ value ]);\n\n  const handleCheckboxChange = React.useCallback(() => {\n    if (!isEnabled) {\n      append({ name: '', address: '' });\n    } else {\n      remove();\n    }\n    setIsEnabled(prev => !prev);\n  }, [ append, isEnabled, remove ]);\n\n  const handleAddFieldClick = React.useCallback((index: number) => {\n    insert(index + 1, { name: '', address: '' });\n  }, [ insert ]);\n\n  const handleRemoveFieldClick = React.useCallback((index: number) => {\n    remove(index);\n  }, [ remove ]);\n\n  return (\n    <>\n      <ContractVerificationFormRow>\n        <Checkbox\n          size=\"lg\"\n          onChange={ handleCheckboxChange }\n          mt={ 9 }\n          isDisabled={ formState.isSubmitting }\n        >\n          Add contract libraries\n        </Checkbox>\n      </ContractVerificationFormRow>\n      { fields.map((field, index) => (\n        <ContractVerificationFieldLibraryItem\n          key={ field.id }\n          index={ index }\n          control={ control }\n          fieldsLength={ fields.length }\n          onAddFieldClick={ handleAddFieldClick }\n          onRemoveFieldClick={ handleRemoveFieldClick }\n          error={ 'libraries' in formState.errors ? formState.errors.libraries?.[index] : undefined }\n          isDisabled={ formState.isSubmitting }\n        />\n      )) }\n    </>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldLibraries);\n","import { chakra, Code, FormControl, Input } from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps } from 'react-hook-form';\nimport { Controller, useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport InputPlaceholder from 'ui/shared/InputPlaceholder';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\ninterface Props {\n  hint?: string;\n  isReadOnly?: boolean;\n}\n\nconst ContractVerificationFieldName = ({ hint, isReadOnly }: Props) => {\n  const { formState, control } = useFormContext<FormFields>();\n\n  const renderControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, 'name'>}) => {\n    const error = 'name' in formState.errors ? formState.errors.name : undefined;\n\n    return (\n      <FormControl variant=\"floating\" id={ field.name } isRequired size={{ base: 'md', lg: 'lg' }}>\n        <Input\n          { ...field }\n          required\n          isInvalid={ Boolean(error) }\n          maxLength={ 255 }\n          isDisabled={ formState.isSubmitting || isReadOnly }\n          autoComplete=\"off\"\n        />\n        <InputPlaceholder text=\"Contract name\" error={ error }/>\n      </FormControl>\n    );\n  }, [ formState.errors, formState.isSubmitting, isReadOnly ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <Controller\n        name=\"name\"\n        control={ control }\n        render={ renderControl }\n        rules={{ required: true }}\n      />\n      { hint ? <span>{ hint }</span> : (\n        <>\n          <span>Must match the name specified in the code. For example, in </span>\n          <Code color=\"text_secondary\">{ `contract MyContract {..}` }</Code>\n          <span>. <chakra.span fontWeight={ 600 }>MyContract</chakra.span> is the contract name.</span>\n        </>\n      ) }\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldName);\n","import { Flex, Input } from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps } from 'react-hook-form';\nimport { Controller, useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport CheckboxInput from 'ui/shared/CheckboxInput';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst ContractVerificationFieldOptimization = () => {\n  const [ isEnabled, setIsEnabled ] = React.useState(true);\n  const { formState, control } = useFormContext<FormFields>();\n\n  const error = 'optimization_runs' in formState.errors ? formState.errors.optimization_runs : undefined;\n\n  const handleCheckboxChange = React.useCallback(() => {\n    setIsEnabled(prev => !prev);\n  }, []);\n\n  const renderCheckboxControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, 'is_optimization_enabled'>}) => (\n    <Flex flexShrink={ 0 }>\n      <CheckboxInput<FormFields, 'is_optimization_enabled'>\n        text=\"Optimization enabled\"\n        field={ field }\n        onChange={ handleCheckboxChange }\n        isDisabled={ formState.isSubmitting }\n      />\n    </Flex>\n  ), [ formState.isSubmitting, handleCheckboxChange ]);\n\n  const renderInputControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, 'optimization_runs'>}) => {\n    return (\n      <Input\n        { ...field }\n        required\n        isDisabled={ formState.isSubmitting }\n        autoComplete=\"off\"\n        type=\"number\"\n        placeholder=\"Optimization runs\"\n        size=\"xs\"\n        minW=\"100px\"\n        maxW=\"200px\"\n        flexShrink={ 1 }\n        isInvalid={ Boolean(error) }\n      />\n    );\n  }, [ error, formState.isSubmitting ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <Flex columnGap={ 5 } h={{ base: 'auto', lg: '32px' }}>\n        <Controller\n          name=\"is_optimization_enabled\"\n          control={ control }\n          render={ renderCheckboxControl }\n        />\n        { isEnabled && (\n          <Controller\n            name=\"optimization_runs\"\n            control={ control }\n            render={ renderInputControl }\n            rules={{ required: true }}\n          />\n        ) }\n      </Flex>\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldOptimization);\n","import React from 'react';\n\nimport type { SmartContractVerificationConfig } from 'types/api/contract';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldAutodetectArgs from '../fields/ContractVerificationFieldAutodetectArgs';\nimport ContractVerificationFieldCode from '../fields/ContractVerificationFieldCode';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldEvmVersion from '../fields/ContractVerificationFieldEvmVersion';\nimport ContractVerificationFieldIsYul from '../fields/ContractVerificationFieldIsYul';\nimport ContractVerificationFieldLibraries from '../fields/ContractVerificationFieldLibraries';\nimport ContractVerificationFieldName from '../fields/ContractVerificationFieldName';\nimport ContractVerificationFieldOptimization from '../fields/ContractVerificationFieldOptimization';\n\nconst ContractVerificationFlattenSourceCode = ({ config }: { config: SmartContractVerificationConfig }) => {\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Solidity (flattened source code)\">\n      { !config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldName/> }\n      { config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldIsYul/> }\n      <ContractVerificationFieldCompiler/>\n      <ContractVerificationFieldEvmVersion/>\n      <ContractVerificationFieldOptimization/>\n      <ContractVerificationFieldCode/>\n      { !config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldAutodetectArgs/> }\n      <ContractVerificationFieldLibraries/>\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationFlattenSourceCode);\n","// Function to get all files in drop directory\nexport async function getAllFileEntries(dataTransferItemList: DataTransferItemList): Promise<Array<FileSystemFileEntry>> {\n  const fileEntries: Array<FileSystemFileEntry> = [];\n\n  // Use BFS to traverse entire directory/file structure\n  const queue: Array<FileSystemFileEntry | FileSystemDirectoryEntry> = [];\n\n  // Unfortunately dataTransferItemList is not iterable i.e. no forEach\n  for (let i = 0; i < dataTransferItemList.length; i++) {\n    // Note webkitGetAsEntry a non-standard feature and may change\n    // Usage is necessary for handling directories\n    // + typescript types are kinda wrong - https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry\n    const item = dataTransferItemList[i].webkitGetAsEntry() as FileSystemFileEntry | FileSystemDirectoryEntry | null;\n    item && queue.push(item);\n  }\n\n  while (queue.length > 0) {\n    const entry = queue.shift();\n    if (entry?.isFile) {\n      fileEntries.push(entry as FileSystemFileEntry);\n    } else if (entry?.isDirectory && 'createReader' in entry) {\n      queue.push(...await readAllDirectoryEntries(entry.createReader()));\n    }\n  }\n  return fileEntries;\n}\n\n// Get all the entries (files or sub-directories) in a directory\n// by calling readEntries until it returns empty array\nasync function readAllDirectoryEntries(directoryReader: DirectoryReader) {\n  const entries: Array<FileSystemFileEntry> = [];\n  let readEntries = await readEntriesPromise(directoryReader);\n\n  while (readEntries && readEntries.length > 0) {\n    entries.push(...readEntries);\n    readEntries = await readEntriesPromise(directoryReader);\n  }\n  return entries;\n}\n\n// Wrap readEntries in a promise to make working with readEntries easier\n// readEntries will return only some of the entries in a directory\n// e.g. Chrome returns at most 100 entries at a time\nasync function readEntriesPromise(directoryReader: DirectoryReader): Promise<Array<FileSystemFileEntry> | undefined> {\n  try {\n    return await new Promise((resolve, reject) => {\n      directoryReader.readEntries(\n        (fileEntry) => {\n          resolve(fileEntry as Array<FileSystemFileEntry>);\n        },\n        reject,\n      );\n    });\n  } catch (err) {}\n}\n\nexport function convertFileEntryToFile(entry: FileSystemFileEntry): Promise<File> {\n  return new Promise((resolve) => {\n    entry.file(async(file: File) => {\n    //   const newFile = new File([ file ], entry.fullPath, { lastModified: file.lastModified, type: file.type });\n      resolve(file);\n    });\n  });\n}\n","import { chakra, Center, useColorModeValue } from '@chakra-ui/react';\nimport type { DragEvent } from 'react';\nimport React from 'react';\n\nimport { getAllFileEntries, convertFileEntryToFile } from './utils/files';\n\ninterface Props {\n  children: React.ReactNode;\n  onDrop: (files: Array<File>) => void;\n  className?: string;\n  isDisabled?: boolean;\n}\n\nconst DragAndDropArea = ({ onDrop, children, className, isDisabled }: Props) => {\n  const [ isDragOver, setIsDragOver ] = React.useState(false);\n\n  const handleDrop = React.useCallback(async(event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    if (isDisabled) {\n      return;\n    }\n\n    const fileEntries = await getAllFileEntries(event.dataTransfer.items);\n    const files = await Promise.all(fileEntries.map(convertFileEntryToFile));\n\n    onDrop(files);\n    setIsDragOver(false);\n  }, [ isDisabled, onDrop ]);\n\n  const handleDragOver = React.useCallback((event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n  }, []);\n\n  const handleDragEnter = React.useCallback((event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setIsDragOver(true);\n  }, []);\n\n  const handleDragLeave = React.useCallback((event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setIsDragOver(false);\n  }, []);\n\n  const handleClick = React.useCallback((event: React.MouseEvent) => {\n    if (isDisabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }, [ isDisabled ]);\n\n  const disabledBorderColor = useColorModeValue('blackAlpha.200', 'whiteAlpha.200');\n  const borderColor = isDragOver ? 'link_hovered' : 'link';\n\n  return (\n    <Center\n      className={ className }\n      w=\"100%\"\n      minH=\"120px\"\n      borderWidth=\"2px\"\n      borderColor={ isDisabled ? disabledBorderColor : borderColor }\n      _hover={{\n        borderColor: isDisabled ? disabledBorderColor : 'link_hovered',\n      }}\n      borderRadius=\"base\"\n      borderStyle=\"dashed\"\n      cursor=\"pointer\"\n      textAlign=\"center\"\n      onClick={ handleClick }\n      onDrop={ handleDrop }\n      onDragOver={ handleDragOver }\n      onDragEnter={ handleDragEnter }\n      onDragLeave={ handleDragLeave }\n    >\n      { children }\n    </Center>\n  );\n};\n\nexport default React.memo(chakra(DragAndDropArea));\n","import { InputGroup, VisuallyHiddenInput } from '@chakra-ui/react';\nimport type { ChangeEvent } from 'react';\nimport React from 'react';\nimport type { ControllerRenderProps, FieldValues, Path } from 'react-hook-form';\n\ninterface InjectedProps {\n  onChange: (files: Array<File>) => void;\n}\n\ninterface Props<V extends FieldValues, N extends Path<V>> {\n  children: React.ReactNode | ((props: InjectedProps) => React.ReactNode);\n  field: ControllerRenderProps<V, N>;\n  accept?: string;\n  multiple?: boolean;\n}\n\nconst FileInput = <Values extends FieldValues, Names extends Path<Values>>({ children, accept, multiple, field }: Props<Values, Names>) => {\n  const ref = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (!multiple && field.value?.length === 0 && ref.current?.value) {\n      ref.current.value = '';\n    }\n  }, [ field.value?.length, multiple ]);\n\n  const onChange = React.useCallback((files: Array<File>) => {\n    field.onChange([ ...(field.value || []), ...files ]);\n  }, [ field ]);\n\n  const handleInputChange = React.useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const fileList = event.target.files;\n    if (!fileList) {\n      return;\n    }\n\n    const files = Array.from(fileList);\n    onChange(files);\n    field.onBlur();\n  }, [ onChange, field ]);\n\n  const handleClick = React.useCallback(() => {\n    ref.current?.click();\n  }, []);\n\n  const handleInputBlur = React.useCallback(() => {\n    field.onBlur();\n  }, [ field ]);\n\n  const injectedProps = React.useMemo(() => ({\n    onChange,\n  }), [ onChange ]);\n\n  const content = typeof children === 'function' ? children(injectedProps) : children;\n\n  return (\n    <InputGroup onClick={ handleClick } onBlur={ handleInputBlur }>\n      <VisuallyHiddenInput\n        type=\"file\"\n        onChange={ handleInputChange }\n        ref={ ref }\n        accept={ accept }\n        multiple={ multiple }\n        name={ field.name }\n      />\n      { content }\n    </InputGroup>\n  );\n};\n\nexport default FileInput;\n","import { Box, Flex, Text, useColorModeValue, IconButton, chakra, Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { IconName } from 'ui/shared/IconSvg';\nimport IconSvg from 'ui/shared/IconSvg';\n\nconst FILE_ICONS: Record<string, IconName> = {\n  '.json': 'files/json',\n  '.sol': 'files/sol',\n  '.yul': 'files/yul',\n};\n\nfunction getFileExtension(fileName: string) {\n  const chunks = fileName.split('.');\n  if (chunks.length === 1) {\n    return '';\n  }\n\n  return '.' + chunks[chunks.length - 1];\n}\n\ninterface Props {\n  file: File;\n  className?: string;\n  index?: number;\n  onRemove?: (index?: number) => void;\n  isDisabled?: boolean;\n  error?: string;\n}\n\nconst FileSnippet = ({ file, className, index, onRemove, isDisabled, error }: Props) => {\n  const handleRemove = React.useCallback((event: React.MouseEvent) => {\n    event.stopPropagation();\n    onRemove?.(index);\n  }, [ index, onRemove ]);\n\n  const handleErrorHintIconClick = React.useCallback((event: React.MouseEvent) => {\n    event.stopPropagation();\n\n  }, []);\n\n  const fileExtension = getFileExtension(file.name);\n  const fileIcon = FILE_ICONS[fileExtension] || 'files/placeholder';\n  const iconColor = useColorModeValue('gray.600', 'gray.400');\n\n  return (\n    <Flex\n      maxW=\"300px\"\n      overflow=\"hidden\"\n      className={ className }\n      alignItems=\"center\"\n      textAlign=\"left\"\n    >\n      <IconSvg\n        name={ fileIcon }\n        boxSize=\"74px\"\n        color={ error ? 'error' : iconColor }\n        mr={ 2 }\n        borderWidth=\"2px\"\n        borderRadius=\"md\"\n        borderColor={ useColorModeValue('blackAlpha.100', 'whiteAlpha.200') }\n        p={ 3 }\n      />\n      <Box maxW=\"calc(100% - 58px - 24px)\">\n        <Flex alignItems=\"center\">\n          <Text\n            fontWeight={ 600 }\n            overflow=\"hidden\"\n            textOverflow=\"ellipsis\"\n            whiteSpace=\"nowrap\"\n            color={ error ? 'error' : 'initial' }\n          >\n            { file.name }\n          </Text>\n          { Boolean(error) && (\n            <Tooltip\n              label={ error }\n              placement=\"top\"\n              maxW=\"320px\"\n            >\n              <Box cursor=\"pointer\" display=\"inherit\" onClick={ handleErrorHintIconClick } ml={ 1 }>\n                <IconSvg name=\"info\" boxSize={ 5 } color=\"error\"/>\n              </Box>\n            </Tooltip>\n          ) }\n          <IconButton\n            aria-label=\"remove\"\n            icon={ <IconSvg name=\"cross\" boxSize={ 6 }/> }\n            boxSize={ 6 }\n            variant=\"simple\"\n            display=\"inline-block\"\n            flexShrink={ 0 }\n            ml=\"auto\"\n            onClick={ handleRemove }\n            isDisabled={ isDisabled }\n            alignSelf=\"flex-start\"\n          />\n        </Flex>\n        <Text variant=\"secondary\" mt={ 1 }>\n          { file.size.toLocaleString(undefined, { notation: 'compact', maximumFractionDigits: 2, unit: 'byte', unitDisplay: 'narrow', style: 'unit' }) }\n        </Text>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default React.memo(chakra(FileSnippet));\n","import { Text, Button, Box, Flex } from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps, FieldPathValue, ValidateResult } from 'react-hook-form';\nimport { Controller, useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport { Mb } from 'lib/consts';\nimport DragAndDropArea from 'ui/shared/forms/DragAndDropArea';\nimport FieldError from 'ui/shared/forms/FieldError';\nimport FileInput from 'ui/shared/forms/FileInput';\nimport FileSnippet from 'ui/shared/forms/FileSnippet';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\ntype FileTypes = '.sol' | '.yul' | '.json' | '.vy'\n\ninterface Props {\n  name?: 'sources' | 'interfaces';\n  fileTypes: Array<FileTypes>;\n  multiple?: boolean;\n  required?: boolean;\n  title: string;\n  hint: string | React.ReactNode;\n}\n\nconst ContractVerificationFieldSources = ({ fileTypes, multiple, required, title, hint, name = 'sources' }: Props) => {\n  const { setValue, getValues, control, formState, clearErrors } = useFormContext<FormFields>();\n\n  const error = (() => {\n    if (name === 'sources' && 'sources' in formState.errors) {\n      return formState.errors.sources;\n    }\n\n    if (name === 'interfaces' && 'interfaces' in formState.errors) {\n      return formState.errors.interfaces;\n    }\n  })();\n  const commonError = !error?.type?.startsWith('file_') ? error : undefined;\n  const fileError = error?.type?.startsWith('file_') ? error : undefined;\n\n  const handleFileRemove = React.useCallback((index?: number) => {\n    if (index === undefined) {\n      return;\n    }\n\n    const value = getValues(name).slice();\n    value.splice(index, 1);\n    setValue(name, value);\n    clearErrors(name);\n\n  }, [ getValues, name, setValue, clearErrors ]);\n\n  const renderUploadButton = React.useCallback(() => {\n    return (\n      <div>\n        <Text fontWeight={ 500 } color=\"text_secondary\" mb={ 3 }>{ title }</Text>\n        <Button size=\"sm\" variant=\"outline\">\n            Drop file{ multiple ? 's' : '' } or click here\n        </Button>\n      </div>\n    );\n  }, [ multiple, title ]);\n\n  const renderFiles = React.useCallback((files: Array<File>) => {\n    const errorList = fileError?.message?.split(';');\n\n    return (\n      <Box\n        display=\"grid\"\n        gridTemplateColumns={{ base: 'minmax(0, 1fr)', lg: 'minmax(0, 1fr) minmax(0, 1fr)' }}\n        columnGap={ 3 }\n        rowGap={ 3 }\n        w=\"100%\"\n      >\n        { files.map((file, index) => (\n          <Box key={ file.name + file.lastModified + index }>\n            <FileSnippet\n              file={ file }\n              maxW=\"initial\"\n              onRemove={ handleFileRemove }\n              index={ index }\n              isDisabled={ formState.isSubmitting }\n              error={ errorList?.[index] }\n            />\n          </Box>\n        )) }\n      </Box>\n    );\n  }, [ formState.isSubmitting, handleFileRemove, fileError ]);\n\n  const renderControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, typeof name>}) => {\n    const hasValue = field.value && field.value.length > 0;\n\n    const errorElement = (() => {\n      if (commonError?.type === 'required') {\n        return <FieldError message=\"Field is required\"/>;\n      }\n\n      if (commonError?.message) {\n        return <FieldError message={ commonError.message }/>;\n      }\n\n      return null;\n    })();\n\n    return (\n      <>\n        <FileInput<FormFields, typeof name> accept={ fileTypes.join(',') } multiple={ multiple } field={ field }>\n          { ({ onChange }) => (\n            <Flex\n              flexDir=\"column\"\n              alignItems=\"flex-start\"\n              rowGap={ 2 }\n              w=\"100%\"\n            >\n              <DragAndDropArea onDrop={ onChange } p={{ base: 3, lg: 6 }} isDisabled={ formState.isSubmitting }>\n                { hasValue ? renderFiles(field.value) : renderUploadButton() }\n              </DragAndDropArea>\n            </Flex>\n          ) }\n        </FileInput>\n        { errorElement }\n      </>\n    );\n  }, [ fileTypes, multiple, commonError, formState.isSubmitting, renderFiles, renderUploadButton ]);\n\n  const validateFileType = React.useCallback(async(value: FieldPathValue<FormFields, typeof name>): Promise<ValidateResult> => {\n    if (Array.isArray(value)) {\n      const errorText = `Wrong file type. Allowed files types are ${ fileTypes.join(',') }.`;\n      const errors = value.map(({ name }) => fileTypes.some((ext) => name.endsWith(ext)) ? '' : errorText);\n      if (errors.some((item) => item !== '')) {\n        return errors.join(';');\n      }\n    }\n    return true;\n  }, [ fileTypes ]);\n\n  const validateFileSize = React.useCallback(async(value: FieldPathValue<FormFields, typeof name>): Promise<ValidateResult> => {\n    if (Array.isArray(value)) {\n      const FILE_SIZE_LIMIT = 20 * Mb;\n      const errors = value.map(({ size }) => size > FILE_SIZE_LIMIT ? 'File is too big. Maximum size is 20 Mb.' : '');\n      if (errors.some((item) => item !== '')) {\n        return errors.join(';');\n      }\n    }\n    return true;\n  }, []);\n\n  const validateQuantity = React.useCallback(async(value: FieldPathValue<FormFields, typeof name>): Promise<ValidateResult> => {\n    if (!multiple && Array.isArray(value) && value.length > 1) {\n      return 'You can upload only one file';\n    }\n\n    return true;\n  }, [ multiple ]);\n\n  const rules = React.useMemo(() => ({\n    required,\n    validate: {\n      file_type: validateFileType,\n      file_size: validateFileSize,\n      quantity: validateQuantity,\n    },\n  }), [ validateFileSize, validateFileType, validateQuantity, required ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <Controller\n        name={ name }\n        control={ control }\n        render={ renderControl }\n        rules={ rules }\n      />\n      { hint ? <span>{ hint }</span> : null }\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldSources);\n","import React from 'react';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldEvmVersion from '../fields/ContractVerificationFieldEvmVersion';\nimport ContractVerificationFieldLibraries from '../fields/ContractVerificationFieldLibraries';\nimport ContractVerificationFieldOptimization from '../fields/ContractVerificationFieldOptimization';\nimport ContractVerificationFieldSources from '../fields/ContractVerificationFieldSources';\n\nconst FILE_TYPES = [ '.sol' as const, '.yul' as const ];\n\nconst ContractVerificationMultiPartFile = () => {\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Solidity (multi-part files)\">\n      <ContractVerificationFieldCompiler/>\n      <ContractVerificationFieldEvmVersion/>\n      <ContractVerificationFieldOptimization/>\n      <ContractVerificationFieldSources\n        fileTypes={ FILE_TYPES }\n        multiple\n        required\n        title=\"Sources *.sol or *.yul files\"\n        hint=\"Upload all Solidity or Yul contract source files.\"\n      />\n      <ContractVerificationFieldLibraries/>\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationMultiPartFile);\n","import { useUpdateEffect } from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps } from 'react-hook-form';\nimport { useFormContext, Controller } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\nimport type { Option } from 'ui/shared/FancySelect/types';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport FancySelect from 'ui/shared/FancySelect/FancySelect';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst SOURCIFY_ERROR_REGEXP = /\\(([^()]*)\\)/;\n\nconst ContractVerificationFieldContractIndex = () => {\n  const [ options, setOptions ] = React.useState<Array<Option>>([]);\n  const { formState, control, watch } = useFormContext<FormFields>();\n  const isMobile = useIsMobile();\n\n  const sources = watch('sources');\n  const sourcesError = 'sources' in formState.errors ? formState.errors.sources?.message : undefined;\n\n  useUpdateEffect(() => {\n    if (!sourcesError) {\n      return;\n    }\n\n    const matchResult = sourcesError.match(SOURCIFY_ERROR_REGEXP);\n    const parsedMethods = matchResult?.[1].split(',');\n    if (!Array.isArray(parsedMethods) || parsedMethods.length === 0) {\n      return;\n    }\n\n    const newOptions = parsedMethods.map((option, index) => ({ label: option, value: String(index + 1) }));\n    setOptions(newOptions);\n  }, [ sourcesError ]);\n\n  useUpdateEffect(() => {\n    setOptions([]);\n  }, [ sources ]);\n\n  const renderControl = React.useCallback(({ field }: {field: ControllerRenderProps<FormFields, 'contract_index'>}) => {\n    const error = 'contract_index' in formState.errors ? formState.errors.contract_index : undefined;\n\n    return (\n      <FancySelect\n        { ...field }\n        options={ options }\n        size={ isMobile ? 'md' : 'lg' }\n        placeholder=\"Contract name\"\n        isDisabled={ formState.isSubmitting }\n        error={ error }\n        isRequired\n        isAsync={ false }\n      />\n    );\n  }, [ formState.errors, formState.isSubmitting, isMobile, options ]);\n\n  if (options.length === 0) {\n    return null;\n  }\n\n  return (\n    <ContractVerificationFormRow>\n      <Controller\n        name=\"contract_index\"\n        control={ control }\n        render={ renderControl }\n        rules={{ required: true }}\n      />\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldContractIndex);\n","import React from 'react';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldContractIndex from '../fields/ContractVerificationFieldContractIndex';\nimport ContractVerificationFieldSources from '../fields/ContractVerificationFieldSources';\n\nconst FILE_TYPES = [ '.json' as const, '.sol' as const ];\n\nconst ContractVerificationSourcify = () => {\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Solidity (Sourcify)\">\n      <ContractVerificationFieldSources\n        fileTypes={ FILE_TYPES }\n        multiple\n        required\n        title=\"Sources and Metadata JSON\"\n        hint=\"Upload all Solidity contract source files and JSON metadata file(s) created during contract compilation.\"\n      />\n      <ContractVerificationFieldContractIndex/>\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationSourcify);\n","import React from 'react';\n\nimport type { SmartContractVerificationConfig } from 'types/api/contract';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldAutodetectArgs from '../fields/ContractVerificationFieldAutodetectArgs';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldName from '../fields/ContractVerificationFieldName';\nimport ContractVerificationFieldSources from '../fields/ContractVerificationFieldSources';\n\nconst FILE_TYPES = [ '.json' as const ];\n\nconst ContractVerificationStandardInput = ({ config }: { config: SmartContractVerificationConfig }) => {\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Solidity (standard JSON input) \">\n      { !config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldName/> }\n      <ContractVerificationFieldCompiler/>\n      <ContractVerificationFieldSources\n        fileTypes={ FILE_TYPES }\n        title=\"Standard Input JSON\"\n        hint=\"Upload the standard input JSON file created during contract compilation.\"\n        required\n      />\n      { !config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldAutodetectArgs/> }\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationStandardInput);\n","import React from 'react';\n\nimport type { SmartContractVerificationConfig } from 'types/api/contract';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldCode from '../fields/ContractVerificationFieldCode';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldConstructorArgs from '../fields/ContractVerificationFieldConstructorArgs';\nimport ContractVerificationFieldEvmVersion from '../fields/ContractVerificationFieldEvmVersion';\nimport ContractVerificationFieldName from '../fields/ContractVerificationFieldName';\n\nconst ContractVerificationVyperContract = ({ config }: { config: SmartContractVerificationConfig }) => {\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Vyper (contract)\">\n      <ContractVerificationFieldName hint=\"The contract name is the name assigned to the verified contract in Blockscout.\"/>\n      <ContractVerificationFieldCompiler isVyper/>\n      { config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldEvmVersion isVyper/> }\n      <ContractVerificationFieldCode isVyper/>\n      { !config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldConstructorArgs/> }\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationVyperContract);\n","import { Link } from '@chakra-ui/react';\nimport React from 'react';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldEvmVersion from '../fields/ContractVerificationFieldEvmVersion';\nimport ContractVerificationFieldSources from '../fields/ContractVerificationFieldSources';\n\nconst MAIN_SOURCES_TYPES = [ '.vy' as const ];\nconst INTERFACE_TYPES = [ '.vy' as const, '.json' as const ];\n\nconst ContractVerificationVyperMultiPartFile = () => {\n\n  const interfacesHint = (\n    <>\n      <span>Add any </span>\n      <Link href=\"https://docs.vyperlang.org/en/stable/interfaces.html\" target=\"_blank\">required interfaces</Link>\n      <span> for the main compiled contract.</span>\n    </>\n  );\n\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Vyper (multi-part files)\">\n      <ContractVerificationFieldCompiler isVyper/>\n      <ContractVerificationFieldEvmVersion isVyper/>\n      <ContractVerificationFieldSources\n        name=\"sources\"\n        fileTypes={ MAIN_SOURCES_TYPES }\n        title=\"Upload main *.vy source\"\n        hint={ `\n          Primary compiled Vyper contract. \n          Only add the main contract here whose bytecode has been deployed, all other files can be uploaded to the interfaces box below.\n        ` }\n        required\n      />\n      <ContractVerificationFieldSources\n        name=\"interfaces\"\n        fileTypes={ INTERFACE_TYPES }\n        multiple\n        title=\"Interfaces (.vy or .json)\"\n        hint={ interfacesHint }\n      />\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationVyperMultiPartFile);\n","import React from 'react';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldSources from '../fields/ContractVerificationFieldSources';\n\nconst FILE_TYPES = [ '.json' as const ];\n\nconst ContractVerificationVyperStandardInput = () => {\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Vyper (standard JSON input) \">\n      <ContractVerificationFieldCompiler isVyper/>\n      <ContractVerificationFieldSources\n        fileTypes={ FILE_TYPES }\n        title=\"Standard Input JSON\"\n        hint=\"Upload the standard input JSON file created during contract compilation.\"\n        required\n      />\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationVyperStandardInput);\n","import { Button, Grid, chakra, useUpdateEffect } from '@chakra-ui/react';\nimport React from 'react';\nimport type { SubmitHandler } from 'react-hook-form';\nimport { useForm, FormProvider } from 'react-hook-form';\n\nimport type { FormFields } from './types';\nimport type { SocketMessage } from 'lib/socket/types';\nimport type { SmartContractVerificationMethod, SmartContractVerificationConfig, SmartContract } from 'types/api/contract';\n\nimport { route } from 'nextjs-routes';\n\nimport useApiFetch from 'lib/api/useApiFetch';\nimport delay from 'lib/delay';\nimport getErrorObjStatusCode from 'lib/errors/getErrorObjStatusCode';\nimport useToast from 'lib/hooks/useToast';\nimport * as mixpanel from 'lib/mixpanel/index';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\n\nimport ContractVerificationFieldAddress from './fields/ContractVerificationFieldAddress';\nimport ContractVerificationFieldMethod from './fields/ContractVerificationFieldMethod';\nimport ContractVerificationFlattenSourceCode from './methods/ContractVerificationFlattenSourceCode';\nimport ContractVerificationMultiPartFile from './methods/ContractVerificationMultiPartFile';\nimport ContractVerificationSourcify from './methods/ContractVerificationSourcify';\nimport ContractVerificationStandardInput from './methods/ContractVerificationStandardInput';\nimport ContractVerificationVyperContract from './methods/ContractVerificationVyperContract';\nimport ContractVerificationVyperMultiPartFile from './methods/ContractVerificationVyperMultiPartFile';\nimport ContractVerificationVyperStandardInput from './methods/ContractVerificationVyperStandardInput';\nimport { prepareRequestBody, formatSocketErrors, getDefaultValues, METHOD_LABELS } from './utils';\n\ninterface Props {\n  method?: SmartContractVerificationMethod;\n  config: SmartContractVerificationConfig;\n  hash?: string;\n}\n\nconst ContractVerificationForm = ({ method: methodFromQuery, config, hash }: Props) => {\n  const formApi = useForm<FormFields>({\n    mode: 'onBlur',\n    defaultValues: methodFromQuery ? getDefaultValues(methodFromQuery, config, hash) : undefined,\n  });\n  const { control, handleSubmit, watch, formState, setError, reset, getFieldState } = formApi;\n  const submitPromiseResolver = React.useRef<(value: unknown) => void>();\n  const methodNameRef = React.useRef<string>();\n\n  const apiFetch = useApiFetch();\n  const toast = useToast();\n\n  const onFormSubmit: SubmitHandler<FormFields> = React.useCallback(async(data) => {\n    const body = prepareRequestBody(data);\n\n    if (!hash) {\n      try {\n        const response = await apiFetch<'contract', SmartContract>('contract', {\n          pathParams: { hash: data.address.toLowerCase() },\n        });\n\n        const isVerifiedContract = 'is_verified' in response && response?.is_verified && !response.is_partially_verified;\n        if (isVerifiedContract) {\n          setError('address', { message: 'Contract has already been verified' });\n          return Promise.resolve();\n        }\n      } catch (error) {\n        const statusCode = getErrorObjStatusCode(error);\n        const message = statusCode === 404 ? 'Address is not a smart contract' : 'Something went wrong';\n        setError('address', { message });\n        return Promise.resolve();\n      }\n    }\n\n    try {\n      await apiFetch('contract_verification_via', {\n        pathParams: { method: data.method.value, hash: data.address.toLowerCase() },\n        fetchParams: {\n          method: 'POST',\n          body,\n        },\n      });\n    } catch (error) {\n      return;\n    }\n\n    return new Promise((resolve) => {\n      submitPromiseResolver.current = resolve;\n    });\n  }, [ apiFetch, hash, setError ]);\n\n  const address = watch('address');\n  const addressState = getFieldState('address');\n\n  const handleNewSocketMessage: SocketMessage.ContractVerification['handler'] = React.useCallback(async(payload) => {\n    if (payload.status === 'error') {\n      const errors = formatSocketErrors(payload.errors);\n      errors.filter(Boolean).forEach(([ field, error ]) => setError(field, error));\n      await delay(100); // have to wait a little bit, otherwise isSubmitting status will not be updated\n      submitPromiseResolver.current?.(null);\n      return;\n    }\n\n    toast({\n      position: 'top-right',\n      title: 'Success',\n      description: 'Contract is successfully verified.',\n      status: 'success',\n      variant: 'subtle',\n      isClosable: true,\n    });\n\n    mixpanel.logEvent(\n      mixpanel.EventTypes.CONTRACT_VERIFICATION,\n      { Status: 'Finished', Method: methodNameRef.current || '' },\n      { send_immediately: true },\n    );\n\n    window.location.assign(route({ pathname: '/address/[hash]', query: { hash: address, tab: 'contract' } }));\n  }, [ setError, toast, address ]);\n\n  const handleSocketError = React.useCallback(() => {\n    if (!formState.isSubmitting) {\n      return;\n    }\n\n    submitPromiseResolver.current?.(null);\n\n    const toastId = 'socket-error';\n    !toast.isActive(toastId) && toast({\n      id: toastId,\n      position: 'top-right',\n      title: 'Error',\n      description: 'There was an error with socket connection. Try again later.',\n      status: 'error',\n      variant: 'subtle',\n      isClosable: true,\n    });\n  // callback should not change when form is submitted\n  // otherwise it will resubscribe to channel, but we don't want that since in that case we might miss verification result message\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ toast ]);\n\n  const channel = useSocketChannel({\n    topic: `addresses:${ address?.toLowerCase() }`,\n    onSocketClose: handleSocketError,\n    onSocketError: handleSocketError,\n    isDisabled: Boolean(address && addressState.error),\n  });\n  useSocketMessage({\n    channel,\n    event: 'verification_result',\n    handler: handleNewSocketMessage,\n  });\n\n  const methods = React.useMemo(() => {\n    return {\n      'flattened-code': <ContractVerificationFlattenSourceCode config={ config }/>,\n      'standard-input': <ContractVerificationStandardInput config={ config }/>,\n      sourcify: <ContractVerificationSourcify/>,\n      'multi-part': <ContractVerificationMultiPartFile/>,\n      'vyper-code': <ContractVerificationVyperContract config={ config }/>,\n      'vyper-multi-part': <ContractVerificationVyperMultiPartFile/>,\n      'vyper-standard-input': <ContractVerificationVyperStandardInput/>,\n    };\n  }, [ config ]);\n  const method = watch('method');\n  const content = methods[method?.value] || null;\n  const methodValue = method?.value;\n\n  useUpdateEffect(() => {\n    if (methodValue) {\n      reset(getDefaultValues(methodValue, config, address || hash));\n\n      const methodName = METHOD_LABELS[methodValue];\n      mixpanel.logEvent(mixpanel.EventTypes.CONTRACT_VERIFICATION, { Status: 'Method selected', Method: methodName });\n      methodNameRef.current = methodName;\n    }\n  // !!! should run only when method is changed\n  }, [ methodValue ]);\n\n  return (\n    <FormProvider { ...formApi }>\n      <chakra.form\n        noValidate\n        onSubmit={ handleSubmit(onFormSubmit) }\n      >\n        <Grid as=\"section\" columnGap=\"30px\" rowGap={{ base: 2, lg: 5 }} templateColumns={{ base: '1fr', lg: 'minmax(auto, 680px) minmax(0, 340px)' }}>\n          { !hash && <ContractVerificationFieldAddress/> }\n          <ContractVerificationFieldMethod\n            control={ control }\n            methods={ config.verification_options }\n            isDisabled={ formState.isSubmitting }\n          />\n        </Grid>\n        { content }\n        { Boolean(method) && (\n          <Button\n            variant=\"solid\"\n            size=\"lg\"\n            type=\"submit\"\n            mt={ 12 }\n            isLoading={ formState.isSubmitting }\n            loadingText=\"Verify & publish\"\n          >\n            Verify & publish\n          </Button>\n        ) }\n      </chakra.form>\n    </FormProvider>\n  );\n};\n\nexport default React.memo(ContractVerificationForm);\n","import useApiQuery from 'lib/api/useApiQuery';\n\nimport { isValidVerificationMethod, sortVerificationMethods } from './utils';\n\nexport default function useFormConfigQuery(enabled: boolean) {\n  return useApiQuery('contract_verification_config', {\n    queryOptions: {\n      select: (data) => {\n        return {\n          ...data,\n          verification_options: data.verification_options.filter(isValidVerificationMethod).sort(sortVerificationMethods),\n        };\n      },\n      enabled,\n    },\n  });\n}\n","import type { FieldPath, ErrorOption } from 'react-hook-form';\n\nimport type {\n  ContractLibrary,\n  FormFields,\n  FormFieldsFlattenSourceCode,\n  FormFieldsMultiPartFile,\n  FormFieldsSourcify,\n  FormFieldsStandardInput,\n  FormFieldsVyperContract,\n  FormFieldsVyperMultiPartFile,\n  FormFieldsVyperStandardInput,\n} from './types';\nimport type { SmartContractVerificationMethod, SmartContractVerificationError, SmartContractVerificationConfig } from 'types/api/contract';\n\nimport type { Params as FetchParams } from 'lib/hooks/useFetch';\n\nexport const SUPPORTED_VERIFICATION_METHODS: Array<SmartContractVerificationMethod> = [\n  'flattened-code',\n  'standard-input',\n  'sourcify',\n  'multi-part',\n  'vyper-code',\n  'vyper-multi-part',\n  'vyper-standard-input',\n];\n\nexport const METHOD_LABELS: Record<SmartContractVerificationMethod, string> = {\n  'flattened-code': 'Solidity (Flattened source code)',\n  'standard-input': 'Solidity (Standard JSON input)',\n  sourcify: 'Solidity (Sourcify)',\n  'multi-part': 'Solidity (Multi-part files)',\n  'vyper-code': 'Vyper (Contract)',\n  'vyper-multi-part': 'Vyper (Multi-part files)',\n  'vyper-standard-input': 'Vyper (Standard JSON input)',\n};\n\nexport const DEFAULT_VALUES: Record<SmartContractVerificationMethod, FormFields> = {\n  'flattened-code': {\n    address: '',\n    method: {\n      value: 'flattened-code' as const,\n      label: METHOD_LABELS['flattened-code'],\n    },\n    is_yul: false,\n    name: '',\n    compiler: null,\n    evm_version: null,\n    is_optimization_enabled: true,\n    optimization_runs: '200',\n    code: '',\n    autodetect_constructor_args: true,\n    constructor_args: '',\n    libraries: [],\n  },\n  'standard-input': {\n    address: '',\n    method: {\n      value: 'standard-input' as const,\n      label: METHOD_LABELS['standard-input'],\n    },\n    name: '',\n    compiler: null,\n    sources: [],\n    autodetect_constructor_args: true,\n    constructor_args: '',\n  },\n  sourcify: {\n    address: '',\n    method: {\n      value: 'sourcify' as const,\n      label: METHOD_LABELS.sourcify,\n    },\n    sources: [],\n  },\n  'multi-part': {\n    address: '',\n    method: {\n      value: 'multi-part' as const,\n      label: METHOD_LABELS['multi-part'],\n    },\n    compiler: null,\n    evm_version: null,\n    is_optimization_enabled: true,\n    optimization_runs: '200',\n    sources: [],\n    libraries: [],\n  },\n  'vyper-code': {\n    address: '',\n    method: {\n      value: 'vyper-code' as const,\n      label: METHOD_LABELS['vyper-code'],\n    },\n    name: '',\n    compiler: null,\n    evm_version: null,\n    code: '',\n    constructor_args: '',\n  },\n  'vyper-multi-part': {\n    address: '',\n    method: {\n      value: 'vyper-multi-part' as const,\n      label: METHOD_LABELS['vyper-multi-part'],\n    },\n    compiler: null,\n    evm_version: null,\n    sources: [],\n  },\n  'vyper-standard-input': {\n    address: '',\n    method: {\n      value: 'vyper-standard-input' as const,\n      label: METHOD_LABELS['vyper-standard-input'],\n    },\n    compiler: null,\n    sources: [],\n  },\n};\n\nexport function getDefaultValues(method: SmartContractVerificationMethod, config: SmartContractVerificationConfig, hash?: string) {\n  const defaultValues = { ...DEFAULT_VALUES[method], address: hash };\n\n  if ('evm_version' in defaultValues) {\n    if (method === 'flattened-code' || method === 'multi-part') {\n      defaultValues.evm_version = config.solidity_evm_versions.find((value) => value === 'default') ? { label: 'default', value: 'default' } : null;\n    }\n\n    if (method === 'vyper-multi-part') {\n      defaultValues.evm_version = config.vyper_evm_versions.find((value) => value === 'default') ? { label: 'default', value: 'default' } : null;\n    }\n  }\n\n  if (config.is_rust_verifier_microservice_enabled) {\n    if (method === 'flattened-code' || method === 'standard-input') {\n      'name' in defaultValues && (defaultValues.name = undefined);\n      'autodetect_constructor_args' in defaultValues && (defaultValues.autodetect_constructor_args = false);\n    }\n  }\n\n  return defaultValues;\n}\n\nexport function isValidVerificationMethod(method?: string): method is SmartContractVerificationMethod {\n  return method && SUPPORTED_VERIFICATION_METHODS.includes(method) ? true : false;\n}\n\nexport function sortVerificationMethods(methodA: SmartContractVerificationMethod, methodB: SmartContractVerificationMethod) {\n  const indexA = SUPPORTED_VERIFICATION_METHODS.indexOf(methodA);\n  const indexB = SUPPORTED_VERIFICATION_METHODS.indexOf(methodB);\n\n  if (indexA > indexB) {\n    return 1;\n  }\n\n  if (indexA < indexB) {\n    return -1;\n  }\n\n  return 0;\n}\n\nexport function prepareRequestBody(data: FormFields): FetchParams['body'] {\n  switch (data.method.value) {\n    case 'flattened-code': {\n      const _data = data as FormFieldsFlattenSourceCode;\n      return {\n        compiler_version: _data.compiler?.value,\n        source_code: _data.code,\n        is_optimization_enabled: _data.is_optimization_enabled,\n        is_yul_contract: _data.is_yul,\n        optimization_runs: _data.optimization_runs,\n        contract_name: _data.name || undefined,\n        libraries: reduceLibrariesArray(_data.libraries),\n        evm_version: _data.evm_version?.value,\n        autodetect_constructor_args: _data.autodetect_constructor_args,\n        constructor_args: _data.constructor_args,\n      };\n    }\n\n    case 'standard-input': {\n      const _data = data as FormFieldsStandardInput;\n\n      const body = new FormData();\n      _data.compiler && body.set('compiler_version', _data.compiler.value);\n      body.set('contract_name', _data.name);\n      body.set('autodetect_constructor_args', String(Boolean(_data.autodetect_constructor_args)));\n      body.set('constructor_args', _data.constructor_args);\n      addFilesToFormData(body, _data.sources, 'files');\n\n      return body;\n    }\n\n    case 'sourcify': {\n      const _data = data as FormFieldsSourcify;\n      const body = new FormData();\n      addFilesToFormData(body, _data.sources, 'files');\n      _data.contract_index && body.set('chosen_contract_index', _data.contract_index.value);\n\n      return body;\n    }\n\n    case 'multi-part': {\n      const _data = data as FormFieldsMultiPartFile;\n\n      const body = new FormData();\n      _data.compiler && body.set('compiler_version', _data.compiler.value);\n      _data.evm_version && body.set('evm_version', _data.evm_version.value);\n      body.set('is_optimization_enabled', String(Boolean(_data.is_optimization_enabled)));\n      _data.is_optimization_enabled && body.set('optimization_runs', _data.optimization_runs);\n\n      const libraries = reduceLibrariesArray(_data.libraries);\n      libraries && body.set('libraries', JSON.stringify(libraries));\n      addFilesToFormData(body, _data.sources, 'files');\n\n      return body;\n    }\n\n    case 'vyper-code': {\n      const _data = data as FormFieldsVyperContract;\n\n      return {\n        compiler_version: _data.compiler?.value,\n        evm_version: _data.evm_version?.value,\n        source_code: _data.code,\n        contract_name: _data.name,\n        constructor_args: _data.constructor_args,\n      };\n    }\n\n    case 'vyper-multi-part': {\n      const _data = data as FormFieldsVyperMultiPartFile;\n\n      const body = new FormData();\n      _data.compiler && body.set('compiler_version', _data.compiler.value);\n      _data.evm_version && body.set('evm_version', _data.evm_version.value);\n      addFilesToFormData(body, _data.sources, 'files');\n      addFilesToFormData(body, _data.interfaces, 'interfaces');\n\n      return body;\n    }\n\n    case 'vyper-standard-input': {\n      const _data = data as FormFieldsVyperStandardInput;\n\n      const body = new FormData();\n      _data.compiler && body.set('compiler_version', _data.compiler.value);\n      addFilesToFormData(body, _data.sources, 'files');\n\n      return body;\n    }\n\n    default: {\n      return {};\n    }\n  }\n}\n\nfunction reduceLibrariesArray(libraries: Array<ContractLibrary> | undefined) {\n  if (!libraries || libraries.length === 0) {\n    return;\n  }\n\n  return libraries.reduce<Record<string, string>>((result, item) => {\n    result[item.name] = item.address;\n    return result;\n  }, {});\n}\n\nfunction addFilesToFormData(body: FormData, files: Array<File> | undefined, fieldName: 'files' | 'interfaces') {\n  if (!files) {\n    return;\n  }\n\n  for (let index = 0; index < files.length; index++) {\n    const file = files[index];\n    body.set(`${ fieldName }[${ index }]`, file, file.name);\n  }\n}\n\nconst API_ERROR_TO_FORM_FIELD: Record<keyof SmartContractVerificationError, FieldPath<FormFields>> = {\n  contract_source_code: 'code',\n  files: 'sources',\n  interfaces: 'interfaces',\n  compiler_version: 'compiler',\n  constructor_arguments: 'constructor_args',\n  name: 'name',\n};\n\nexport function formatSocketErrors(errors: SmartContractVerificationError): Array<[FieldPath<FormFields>, ErrorOption] | undefined> {\n  return Object.entries(errors).map(([ key, value ]) => {\n    const _key = key as keyof SmartContractVerificationError;\n    if (!API_ERROR_TO_FORM_FIELD[_key]) {\n      return;\n    }\n\n    return [ API_ERROR_TO_FORM_FIELD[_key], { message: value.join(',') } ];\n  });\n}\n","import {\n  Checkbox,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps, FieldValues, Path } from 'react-hook-form';\n\ntype Props<TInputs extends FieldValues, TInputName extends Path<TInputs>> = {\n  field: ControllerRenderProps<TInputs, TInputName>;\n  text: string;\n  onChange?: () => void;\n  isDisabled?: boolean;\n}\n\nexport default function CheckboxInput<Inputs extends FieldValues, Name extends Path<Inputs>>(\n  {\n    field,\n    text,\n    onChange,\n    isDisabled,\n  }: Props<Inputs, Name>) {\n\n  const handleChange: typeof field.onChange = React.useCallback((...args) => {\n    field.onChange(...args);\n    onChange?.();\n  }, [ field, onChange ]);\n\n  return (\n    <Checkbox\n      isChecked={ field.value }\n      onChange={ handleChange }\n      ref={ field.ref }\n      colorScheme=\"blue\"\n      size=\"lg\"\n      isDisabled={ isDisabled }\n    >\n      { text }\n    </Checkbox>\n  );\n}\n","import { Alert, AlertDescription, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nconst DataFetchAlert = ({ className }: { className?: string }) => {\n  return (\n    <Alert status=\"warning\" width=\"fit-content\" className={ className }>\n      <AlertDescription>\n        Something went wrong. Try refreshing the page or come back later.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\nexport default chakra(DataFetchAlert);\n","import type { ColorMode } from '@chakra-ui/react';\nimport type { Size, ChakraStylesConfig } from 'chakra-react-select';\n\nimport type { Option } from './types';\n\nfunction getValueContainerStyles(size?: Size) {\n  switch (size) {\n    case 'sm':\n    case 'md': {\n      return {\n        paddingLeft: 4,\n      };\n    }\n    case 'lg': {\n      return {\n        paddingLeft: 6,\n      };\n    }\n    default: {\n      return {};\n    }\n  }\n}\n\nfunction getSingleValueStyles(size?: Size) {\n  switch (size) {\n    case 'sm':\n    case 'md': {\n      return {\n        top: '26px',\n      };\n    }\n    case 'lg': {\n      return {\n        top: '38px',\n      };\n    }\n    default: {\n      return {};\n    }\n  }\n}\n\nconst getChakraStyles: (colorMode: ColorMode) => ChakraStylesConfig<Option> = (colorMode) => {\n  const emptyInputBorderColor = colorMode === 'dark' ? 'gray.700' : 'gray.100';\n  const filledInputBorderColor = colorMode === 'dark' ? 'gray.600' : 'gray.300';\n\n  return {\n    control: (provided, state) => ({\n      ...provided,\n      borderColor: state.hasValue ? filledInputBorderColor : emptyInputBorderColor,\n    }),\n    inputContainer: (provided) => ({\n      ...provided,\n      py: 0,\n      mx: 0,\n    }),\n    valueContainer: (provided, state) => ({\n      ...provided,\n      ...getValueContainerStyles(state.selectProps.size),\n      py: 0,\n    }),\n    singleValue: (provided, state) => ({\n      ...provided,\n      mx: 0,\n      transform: 'none',\n      ...getSingleValueStyles(state.selectProps.size),\n    }),\n  };\n};\n\nexport { getChakraStyles };\n","import { FormControl, useToken, useColorMode } from '@chakra-ui/react';\nimport type { CSSObjectWithLabel, GroupBase, SingleValue, MultiValue, AsyncProps, Props as SelectProps } from 'chakra-react-select';\nimport { Select, AsyncSelect } from 'chakra-react-select';\nimport React from 'react';\nimport type { FieldError, FieldErrorsImpl, Merge } from 'react-hook-form';\n\nimport type { Option } from './types';\n\nimport { getChakraStyles } from 'ui/shared/FancySelect/utils';\nimport InputPlaceholder from 'ui/shared/InputPlaceholder';\n\ninterface CommonProps {\n  error?: Merge<FieldError, FieldErrorsImpl<Option>> | undefined;\n  placeholderIcon?: React.ReactNode;\n}\n\ninterface RegularSelectProps extends SelectProps<Option, boolean, GroupBase<Option>>, CommonProps {\n  isAsync?: false;\n  onChange: (newValue: SingleValue<Option> | MultiValue<Option>) => void;\n}\n\ninterface AsyncSelectProps extends AsyncProps<Option, boolean, GroupBase<Option>>, CommonProps {\n  isAsync: true;\n  onChange: (newValue: SingleValue<Option> | MultiValue<Option>) => void;\n}\n\ntype Props = RegularSelectProps | AsyncSelectProps;\n\nconst FancySelect = (props: Props, ref: React.LegacyRef<HTMLDivElement>) => {\n  const menuZIndex = useToken('zIndices', 'dropdown');\n  const { colorMode } = useColorMode();\n\n  const styles = React.useMemo(() => ({\n    menuPortal: (provided: CSSObjectWithLabel) => ({ ...provided, zIndex: menuZIndex }),\n  }), [ menuZIndex ]);\n\n  const chakraStyles = React.useMemo(() => getChakraStyles(colorMode), [ colorMode ]);\n\n  const SelectComponent = props.isAsync ? AsyncSelect : Select;\n\n  return (\n    <FormControl\n      variant=\"floating\"\n      size={ props.size || 'md' }\n      isRequired={ props.isRequired }\n      ref={ ref }\n      { ...(props.error ? { 'aria-invalid': true } : {}) }\n      { ...(props.isDisabled ? { 'aria-disabled': true } : {}) }\n      { ...(props.value ? { 'data-active': true } : {}) }\n    >\n      <SelectComponent\n        { ...props }\n        size={ props.size || 'md' }\n        menuPortalTarget={ window.document.body }\n        placeholder=\"\"\n        styles={ styles }\n        chakraStyles={ chakraStyles }\n        isInvalid={ Boolean(props.error) }\n        useBasicStyles\n      />\n      <InputPlaceholder\n        text={ typeof props.placeholder === 'string' ? props.placeholder : '' }\n        icon={ props.placeholderIcon }\n        error={ props.error }\n        isFancy\n      />\n    </FormControl>\n  );\n};\n\nexport default React.memo(React.forwardRef(FancySelect));\n","import { FormLabel, chakra } from '@chakra-ui/react';\nimport React from 'react';\nimport type { FieldError } from 'react-hook-form';\n\ninterface Props {\n  text: string;\n  icon?: React.ReactNode;\n  error?: Partial<FieldError>;\n  className?: string;\n  isFancy?: boolean;\n  isInModal?: boolean;\n}\n\nconst InputPlaceholder = ({ text, icon, error, className, isFancy, isInModal }: Props) => {\n  let errorMessage = error?.message;\n\n  if (!errorMessage && error?.type === 'pattern') {\n    errorMessage = 'Invalid format';\n  }\n\n  return (\n    <FormLabel\n      className={ className }\n      alignItems=\"center\"\n      { ...(isFancy ? { 'data-fancy': true } : {}) }\n      { ...(isInModal ? { 'data-in-modal': true } : {}) }\n    >\n      { icon }\n      <chakra.span>{ text }</chakra.span>\n      { errorMessage && <chakra.span order={ 3 } whiteSpace=\"pre\"> - { errorMessage }</chakra.span> }\n    </FormLabel>\n  );\n};\n\nexport default chakra(InputPlaceholder);\n"],"names":["delay","time","Promise","window","setTimeout","resolve","contractVerification_ContractVerificationFormRow","React","chakra","children","className","param","isMobile","useIsMobile","firstChildren","Array","isArray","secondChildren","jsx_runtime","jsxs","Fragment","jsx","GridItem","_notFirst","mt","base","lg","fontSize","color","fields_ContractVerificationFieldAddress","isReadOnly","formState","control","useFormContext","renderControl","field","error","errors","address","undefined","FormControl","variant","id","name","isRequired","size","Input","required","isInvalid","Boolean","maxLength","ADDRESS_LENGTH","isDisabled","isSubmitting","autoComplete","InputPlaceholder","text","ContractVerificationFormRow","span","fontWeight","fontFamily","mb","Controller","render","rules","pattern","ADDRESS_REGEXP","fields_ContractVerificationFieldMethod","methods","tooltipBg","useColorModeValue","options","map","value","method","label","METHOD_LABELS","FancySelect","placeholder","isAsync","renderPopoverListItem","ListItem","Link","href","target","div","length","Popover","trigger","isLazy","placement","offset","PopoverTrigger","display","ml","cursor","verticalAlign","h","IconSvg","boxSize","_hover","Portal","PopoverContent","bgColor","w","PopoverArrow","PopoverBody","DarkMode","OrderedList","contractVerification_ContractVerificationMethod","title","ref","current","scrollIntoView","behavior","section","Text","Grid","columnGap","rowGap","templateColumns","forms_FieldError","message","Box","wordBreak","fields_ContractVerificationFieldConstructorArgs","constructor_args","Textarea","FieldError","fields_ContractVerificationFieldAutodetectArgs","isOn","setIsOn","resetField","handleCheckboxChange","prev","CheckboxInput","onChange","ContractVerificationFieldConstructorArgs","fields_ContractVerificationFieldCode","isVyper","code","fields_ContractVerificationFieldCompiler","isNightly","setIsNightly","getValues","queryClient","useQueryClient","config","getQueryData","getResourceKey","includes","defaultValue","vyper_compiler_versions","solidity_compiler_versions","_this","option","loadOptions","inputValue","filter","toLowerCase","slice","compiler","defaultOptions","placeholderIcon","Checkbox","Code","fields_ContractVerificationFieldEvmVersion","vyper_evm_versions","solidity_evm_versions","evm_version","fields_ContractVerificationFieldIsYul","fields_ContractVerificationFieldLibraryItem","index","fieldsLength","onAddFieldClick","onRemoveFieldClick","renderNameControl","renderAddressControl","handleAddButtonClick","handleRemoveButtonClick","Flex","alignItems","justifyContent","IconButton","aria-label","onClick","icon","concat","fields_ContractVerificationFieldLibraries","fields","append","remove","insert","useFieldArray","isEnabled","setIsEnabled","useUpdateEffect","handleAddFieldClick","handleRemoveFieldClick","ContractVerificationFieldLibraryItem","libraries","fields_ContractVerificationFieldName","hint","fields_ContractVerificationFieldOptimization","optimization_runs","renderCheckboxControl","flexShrink","renderInputControl","type","minW","maxW","methods_ContractVerificationFlattenSourceCode","ContractVerificationMethod","is_rust_verifier_microservice_enabled","ContractVerificationFieldName","ContractVerificationFieldIsYul","ContractVerificationFieldCompiler","ContractVerificationFieldEvmVersion","ContractVerificationFieldOptimization","ContractVerificationFieldCode","ContractVerificationFieldAutodetectArgs","ContractVerificationFieldLibraries","getAllFileEntries","dataTransferItemList","fileEntries","queue","i","item","webkitGetAsEntry","push","entry","shift","isFile","isDirectory","readAllDirectoryEntries","createReader","directoryReader","entries","readEntries","readEntriesPromise","reject","fileEntry","err","convertFileEntryToFile","file","forms_DragAndDropArea","onDrop","isDragOver","setIsDragOver","handleDrop","event","preventDefault","dataTransfer","items","files","all","handleDragOver","handleDragEnter","handleDragLeave","handleClick","stopPropagation","disabledBorderColor","Center","minH","borderWidth","borderColor","borderRadius","borderStyle","textAlign","onDragOver","onDragEnter","onDragLeave","forms_FileInput","accept","multiple","handleInputChange","fileList","from","onBlur","click","handleInputBlur","injectedProps","content","InputGroup","VisuallyHiddenInput","FILE_ICONS","forms_FileSnippet","onRemove","handleRemove","handleErrorHintIconClick","fileExtension","getFileExtension","fileName","chunks","split","fileIcon","iconColor","overflow","mr","p","textOverflow","whiteSpace","Tooltip","alignSelf","toLocaleString","notation","maximumFractionDigits","unit","unitDisplay","style","fields_ContractVerificationFieldSources","fileTypes","setValue","clearErrors","sources","interfaces","commonError","startsWith","fileError","handleFileRemove","splice","renderUploadButton","Button","renderFiles","errorList","gridTemplateColumns","FileSnippet","lastModified","hasValue","errorElement","FileInput","join","flexDir","DragAndDropArea","validateFileType","errorText","some","endsWith","ext","validateFileSize","FILE_SIZE_LIMIT","Mb","validateQuantity","validate","file_type","file_size","quantity","FILE_TYPES","methods_ContractVerificationMultiPartFile","ContractVerificationFieldSources","SOURCIFY_ERROR_REGEXP","fields_ContractVerificationFieldContractIndex","setOptions","watch","sourcesError","matchResult","match","parsedMethods","newOptions","String","contract_index","methods_ContractVerificationSourcify","ContractVerificationFieldContractIndex","methods_ContractVerificationStandardInput","methods_ContractVerificationVyperContract","MAIN_SOURCES_TYPES","INTERFACE_TYPES","methods_ContractVerificationVyperMultiPartFile","interfacesHint","methods_ContractVerificationVyperStandardInput","contractVerification_ContractVerificationForm","methodFromQuery","hash","formApi","useForm","mode","defaultValues","getDefaultValues","handleSubmit","setError","reset","getFieldState","submitPromiseResolver","methodNameRef","apiFetch","useApiFetch","toast","useToast","onFormSubmit","data","body","prepareRequestBody","response","pathParams","isVerifiedContract","is_verified","is_partially_verified","statusCode","getErrorObjStatusCode","fetchParams","addressState","handleNewSocketMessage","payload","status","formatSocketErrors","forEach","position","description","isClosable","mixpanel","CONTRACT_VERIFICATION","Status","Method","send_immediately","location","assign","route","pathname","query","tab","handleSocketError","toastId","isActive","channel","useSocketChannel","topic","onSocketClose","onSocketError","useSocketMessage","handler","ContractVerificationFlattenSourceCode","ContractVerificationStandardInput","sourcify","ContractVerificationSourcify","ContractVerificationMultiPartFile","ContractVerificationVyperContract","ContractVerificationVyperMultiPartFile","ContractVerificationVyperStandardInput","methodValue","methodName","FormProvider","form","noValidate","onSubmit","as","ContractVerificationFieldAddress","ContractVerificationFieldMethod","verification_options","isLoading","loadingText","useFormConfigQuery","enabled","useApiQuery","queryOptions","select","isValidVerificationMethod","sort","sortVerificationMethods","SUPPORTED_VERIFICATION_METHODS","DEFAULT_VALUES","is_yul","is_optimization_enabled","autodetect_constructor_args","find","methodA","methodB","indexA","indexOf","indexB","_data","compiler_version","source_code","is_yul_contract","contract_name","reduceLibrariesArray","FormData","set","addFilesToFormData","JSON","stringify","reduce","result","fieldName","API_ERROR_TO_FORM_FIELD","contract_source_code","constructor_arguments","Object","key","handleChange","args","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","isChecked","colorScheme","__webpack_exports__","Z","Alert","width","AlertDescription","getChakraStyles","emptyInputBorderColor","colorMode","filledInputBorderColor","provided","state","inputContainer","py","mx","valueContainer","getValueContainerStyles","paddingLeft","selectProps","singleValue","transform","getSingleValueStyles","top","FancySelect_FancySelect","props","menuZIndex","useToken","useColorMode","styles","menuPortal","zIndex","chakraStyles","SelectComponent","AsyncSelect","Select","menuPortalTarget","document","useBasicStyles","isFancy","isInModal","errorMessage","FormLabel","order"],"sourceRoot":""}