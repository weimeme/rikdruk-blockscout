{"version":3,"file":"static/chunks/4980.3280ca759c450bb3.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@graphiql/react/dist/matchbrackets.es.js","webpack://_N_E/<anon>"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { a as codemirror } from \"./codemirror.es.js\";\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function(e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function(k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(Object.defineProperty(n, Symbol.toStringTag, { value: \"Module\" }));\n}\n__name(_mergeNamespaces, \"_mergeNamespaces\");\nvar matchbrackets$2 = { exports: {} };\n(function(module, exports) {\n  (function(mod) {\n    mod(codemirror.exports);\n  })(function(CodeMirror) {\n    var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) && (document.documentMode == null || document.documentMode < 8);\n    var Pos = CodeMirror.Pos;\n    var matching = { \"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\" };\n    function bracketRegex(config) {\n      return config && config.bracketRegex || /[(){}[\\]]/;\n    }\n    __name(bracketRegex, \"bracketRegex\");\n    function findMatchingBracket(cm, where, config) {\n      var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n      var afterCursor = config && config.afterCursor;\n      if (afterCursor == null)\n        afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className);\n      var re = bracketRegex(config);\n      var match = !afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)] || re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n      if (!match)\n        return null;\n      var dir = match.charAt(1) == \">\" ? 1 : -1;\n      if (config && config.strict && dir > 0 != (pos == where.ch))\n        return null;\n      var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n      var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style, config);\n      if (found == null)\n        return null;\n      return {\n        from: Pos(where.line, pos),\n        to: found && found.pos,\n        match: found && found.ch == match.charAt(0),\n        forward: dir > 0\n      };\n    }\n    __name(findMatchingBracket, \"findMatchingBracket\");\n    function scanForBracket(cm, where, dir, style, config) {\n      var maxScanLen = config && config.maxScanLineLength || 1e4;\n      var maxScanLines = config && config.maxScanLines || 1e3;\n      var stack = [];\n      var re = bracketRegex(config);\n      var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1) : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n      for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n        var line = cm.getLine(lineNo);\n        if (!line)\n          continue;\n        var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n        if (line.length > maxScanLen)\n          continue;\n        if (lineNo == where.line)\n          pos = where.ch - (dir < 0 ? 1 : 0);\n        for (; pos != end; pos += dir) {\n          var ch = line.charAt(pos);\n          if (re.test(ch) && (style === void 0 || (cm.getTokenTypeAt(Pos(lineNo, pos + 1)) || \"\") == (style || \"\"))) {\n            var match = matching[ch];\n            if (match && match.charAt(1) == \">\" == dir > 0)\n              stack.push(ch);\n            else if (!stack.length)\n              return { pos: Pos(lineNo, pos), ch };\n            else\n              stack.pop();\n          }\n        }\n      }\n      return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n    }\n    __name(scanForBracket, \"scanForBracket\");\n    function matchBrackets(cm, autoclear, config) {\n      var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1e3, highlightNonMatching = config && config.highlightNonMatching;\n      var marks = [], ranges = cm.listSelections();\n      for (var i = 0; i < ranges.length; i++) {\n        var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n        if (match && (match.match || highlightNonMatching !== false) && cm.getLine(match.from.line).length <= maxHighlightLen) {\n          var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n          marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), { className: style }));\n          if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n            marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), { className: style }));\n        }\n      }\n      if (marks.length) {\n        if (ie_lt8 && cm.state.focused)\n          cm.focus();\n        var clear = /* @__PURE__ */ __name(function() {\n          cm.operation(function() {\n            for (var i2 = 0; i2 < marks.length; i2++)\n              marks[i2].clear();\n          });\n        }, \"clear\");\n        if (autoclear)\n          setTimeout(clear, 800);\n        else\n          return clear;\n      }\n    }\n    __name(matchBrackets, \"matchBrackets\");\n    function doMatchBrackets(cm) {\n      cm.operation(function() {\n        if (cm.state.matchBrackets.currentlyHighlighted) {\n          cm.state.matchBrackets.currentlyHighlighted();\n          cm.state.matchBrackets.currentlyHighlighted = null;\n        }\n        cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n      });\n    }\n    __name(doMatchBrackets, \"doMatchBrackets\");\n    function clearHighlighted(cm) {\n      if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n    }\n    __name(clearHighlighted, \"clearHighlighted\");\n    CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n      if (old && old != CodeMirror.Init) {\n        cm.off(\"cursorActivity\", doMatchBrackets);\n        cm.off(\"focus\", doMatchBrackets);\n        cm.off(\"blur\", clearHighlighted);\n        clearHighlighted(cm);\n      }\n      if (val) {\n        cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n        cm.on(\"cursorActivity\", doMatchBrackets);\n        cm.on(\"focus\", doMatchBrackets);\n        cm.on(\"blur\", clearHighlighted);\n      }\n    });\n    CodeMirror.defineExtension(\"matchBrackets\", function() {\n      matchBrackets(this, true);\n    });\n    CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig) {\n      if (oldConfig || typeof config == \"boolean\") {\n        if (!oldConfig) {\n          config = config ? { strict: true } : null;\n        } else {\n          oldConfig.strict = config;\n          config = oldConfig;\n        }\n      }\n      return findMatchingBracket(this, pos, config);\n    });\n    CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config) {\n      return scanForBracket(this, pos, dir, style, config);\n    });\n  });\n})();\nvar matchbrackets = matchbrackets$2.exports;\nvar matchbrackets$1 = /* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  \"default\": matchbrackets\n}, [matchbrackets$2.exports]);\nexport { matchbrackets$2 as a, matchbrackets$1 as m };\n"],"names":["__defProp","Object","defineProperty","__name","target","value","configurable","_mergeNamespaces","n","m","forEach","e","Array","isArray","keys","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","Symbol","toStringTag","matchbrackets$2","exports","mod","CodeMirror","ie_lt8","test","navigator","userAgent","document","documentMode","Pos","matching","bracketRegex","config","findMatchingBracket","cm","where","line","getLineHandle","pos","ch","afterCursor","getWrapperElement","className","re","match","text","charAt","dir","strict","style","getTokenTypeAt","found","scanForBracket","from","to","forward","maxScanLen","maxScanLineLength","maxScanLines","stack","lineEnd","Math","min","lastLine","max","firstLine","lineNo","getLine","length","end","push","pop","matchBrackets","autoclear","maxHighlightLen","state","maxHighlightLineLength","highlightNonMatching","marks","ranges","listSelections","i","empty","head","markText","focused","focus","clear","operation","i2","setTimeout","doMatchBrackets","currentlyHighlighted","clearHighlighted","defineOption","val","old","Init","off","on","defineExtension","oldConfig","_codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__","a","matchbrackets$1","__proto__"],"sourceRoot":""}