{"version":3,"file":"static/chunks/6684.3a28fe0f9a8cac5d.js","mappings":"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","sources":["webpack://_N_E/./lib/networks/getNetworkValidatorTitle.ts","webpack://_N_E/./stubs/block.ts","webpack://_N_E/./stubs/withdrawals.ts","webpack://_N_E/./lib/block/getBlockReward.ts","webpack://_N_E/./ui/block/BlockDetails.tsx","webpack://_N_E/./ui/block/BlockWithdrawals.tsx","webpack://_N_E/./ui/pages/Block.tsx","webpack://_N_E/./ui/shared/GasUsedToTargetRatio.tsx","webpack://_N_E/./ui/shared/ListItemMobile/ListItemMobileGrid.tsx","webpack://_N_E/./ui/shared/NetworkExplorers.tsx","webpack://_N_E/./ui/shared/RawDataSnippet.tsx","webpack://_N_E/./ui/withdrawals/WithdrawalsListItem.tsx","webpack://_N_E/./ui/withdrawals/WithdrawalsTableItem.tsx","webpack://_N_E/./ui/withdrawals/WithdrawalsTable.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import config from 'configs/app';\n\nexport default function getNetworkValidatorTitle() {\n  return config.chain.verificationType === 'validation' ? 'validator' : 'miner';\n}\n","import type { Block } from 'types/api/block';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const BLOCK_HASH = '0x8fa7b9e5e5e79deeb62d608db22ba9a5cb45388c7ebb9223ae77331c6080dc70';\n\nexport const BLOCK: Block = {\n  base_fee_per_gas: '14',\n  burnt_fees: '92834504000000000',\n  burnt_fees_percentage: 42.2,\n  difficulty: '340282366920938463463374607431768211451',\n  extra_data: 'TODO',\n  gas_limit: '30000000',\n  gas_target_percentage: 55.79,\n  gas_used: '6631036',\n  gas_used_percentage: 22.10,\n  hash: BLOCK_HASH,\n  height: 8988736,\n  miner: ADDRESS_PARAMS,\n  nonce: '0x0000000000000000',\n  parent_hash: BLOCK_HASH,\n  priority_fee: '19241635454943109',\n  rewards: [\n    {\n      reward: '19241635454943109',\n      type: 'Validator Reward',\n    },\n  ],\n  size: 46406,\n  state_root: 'TODO',\n  timestamp: '2023-05-12T19:29:12.000000Z',\n  total_difficulty: '10837812015930321201107455268036056402048391639',\n  tx_count: 142,\n  tx_fees: '19241635547777613',\n  type: 'block',\n  uncles_hashes: [],\n};\n","import type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const WITHDRAWAL: WithdrawalsItem = {\n  amount: '12565723',\n  index: 3810697,\n  receiver: ADDRESS_PARAMS,\n  validator_index: 25987,\n  block_number: 9005713,\n  timestamp: '2023-05-12T19:29:12.000000Z',\n};\n","import BigNumber from 'bignumber.js';\n\nimport type { Block } from 'types/api/block';\n\nexport default function getBlockReward(block: Block) {\n  const txFees = BigNumber(block.tx_fees || 0);\n  const burntFees = BigNumber(block.burnt_fees || 0);\n  const minerReward = block.rewards?.find(({ type }) => type === 'Miner Reward' || type === 'Validator Reward')?.reward;\n  const totalReward = BigNumber(minerReward || 0);\n  const staticReward = totalReward.minus(txFees).plus(burntFees);\n\n  return {\n    totalReward,\n    staticReward,\n    txFees,\n    burntFees,\n  };\n}\n","import { Grid, GridItem, Text, Link, Box, Tooltip, useColorModeValue, Skeleton } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport BigNumber from 'bignumber.js';\nimport capitalize from 'lodash/capitalize';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { scroller, Element } from 'react-scroll';\n\nimport type { Block } from 'types/api/block';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\nimport type { ResourceError } from 'lib/api/resources';\nimport getBlockReward from 'lib/block/getBlockReward';\nimport { GWEI, WEI, WEI_IN_GWEI, ZERO } from 'lib/consts';\nimport dayjs from 'lib/date/dayjs';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport { space } from 'lib/html-entities';\nimport getNetworkValidatorTitle from 'lib/networks/getNetworkValidatorTitle';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { currencyUnits } from 'lib/units';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsInfoItemDivider from 'ui/shared/DetailsInfoItemDivider';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport GasUsedToTargetRatio from 'ui/shared/GasUsedToTargetRatio';\nimport HashStringShortenDynamic from 'ui/shared/HashStringShortenDynamic';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/LinkInternal';\nimport PrevNext from 'ui/shared/PrevNext';\nimport RawDataSnippet from 'ui/shared/RawDataSnippet';\nimport TextSeparator from 'ui/shared/TextSeparator';\nimport Utilization from 'ui/shared/Utilization/Utilization';\n\ninterface Props {\n  query: UseQueryResult<Block, ResourceError>;\n}\n\nconst isRollup = config.features.optimisticRollup.isEnabled || config.features.zkEvmRollup.isEnabled;\n\nconst BlockDetails = ({ query }: Props) => {\n  const [ isExpanded, setIsExpanded ] = React.useState(false);\n  const router = useRouter();\n  const heightOrHash = getQueryParamString(router.query.height_or_hash);\n\n  const separatorColor = useColorModeValue('gray.200', 'gray.700');\n\n  const { data, isPlaceholderData, isError, error } = query;\n\n  const handleCutClick = React.useCallback(() => {\n    setIsExpanded((flag) => !flag);\n    scroller.scrollTo('BlockDetails__cutLink', {\n      duration: 500,\n      smooth: true,\n    });\n  }, []);\n\n  const handlePrevNextClick = React.useCallback((direction: 'prev' | 'next') => {\n    if (!data) {\n      return;\n    }\n\n    const increment = direction === 'next' ? +1 : -1;\n    const nextId = String(data.height + increment);\n\n    router.push({ pathname: '/block/[height_or_hash]', query: { height_or_hash: nextId } }, undefined);\n  }, [ data, router ]);\n\n  if (isError) {\n    if (error?.status === 404 || error?.status === 422) {\n      throwOnResourceLoadError({ isError, error });\n    }\n\n    return <DataFetchAlert/>;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  const { totalReward, staticReward, burntFees, txFees } = getBlockReward(data);\n\n  const validatorTitle = getNetworkValidatorTitle();\n\n  const rewardBreakDown = (() => {\n    if (isRollup || totalReward.isEqualTo(ZERO) || txFees.isEqualTo(ZERO) || burntFees.isEqualTo(ZERO)) {\n      return null;\n    }\n\n    if (isPlaceholderData) {\n      return <Skeleton w=\"525px\" h=\"20px\"/>;\n    }\n\n    return (\n      <Text variant=\"secondary\" whiteSpace=\"break-spaces\">\n        <Tooltip label=\"Static block reward\">\n          <span>{ staticReward.dividedBy(WEI).toFixed() }</span>\n        </Tooltip>\n        { !txFees.isEqualTo(ZERO) && (\n          <>\n            { space }+{ space }\n            <Tooltip label=\"Txn fees\">\n              <span>{ txFees.dividedBy(WEI).toFixed() }</span>\n            </Tooltip>\n          </>\n        ) }\n        { !burntFees.isEqualTo(ZERO) && (\n          <>\n            { space }-{ space }\n            <Tooltip label=\"Burnt fees\">\n              <span>{ burntFees.dividedBy(WEI).toFixed() }</span>\n            </Tooltip>\n          </>\n        ) }\n      </Text>\n    );\n  })();\n\n  const verificationTitle = (() => {\n    if (config.features.zkEvmRollup.isEnabled) {\n      return 'Sequenced by';\n    }\n\n    return config.chain.verificationType === 'validation' ? 'Validated by' : 'Mined by';\n  })();\n\n  const blockTypeLabel = (() => {\n    switch (data.type) {\n      case 'reorg':\n        return 'Reorg';\n      case 'uncle':\n        return 'Uncle';\n      default:\n        return 'Block';\n    }\n  })();\n\n  return (\n    <Grid\n      columnGap={ 8 }\n      rowGap={{ base: 3, lg: 3 }}\n      templateColumns={{ base: 'minmax(0, 1fr)', lg: 'minmax(min-content, 200px) minmax(0, 1fr)' }}\n      overflow=\"hidden\"\n    >\n      <DetailsInfoItem\n        title={ `${ blockTypeLabel } height` }\n        hint=\"The block height of a particular block is defined as the number of blocks preceding it in the blockchain\"\n        isLoading={ isPlaceholderData }\n      >\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { data.height }\n        </Skeleton>\n        { data.height === 0 && <Text whiteSpace=\"pre\"> - Genesis Block</Text> }\n        <PrevNext\n          ml={ 6 }\n          onClick={ handlePrevNextClick }\n          prevLabel=\"View previous block\"\n          nextLabel=\"View next block\"\n          isPrevDisabled={ data.height === 0 }\n          isLoading={ isPlaceholderData }\n        />\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"Size\"\n        hint=\"Size of the block in bytes\"\n        isLoading={ isPlaceholderData }\n      >\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { data.size.toLocaleString() }\n        </Skeleton>\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"Timestamp\"\n        hint=\"Date & time at which block was produced.\"\n        isLoading={ isPlaceholderData }\n      >\n        <IconSvg name=\"clock\" boxSize={ 5 } color=\"gray.500\" isLoading={ isPlaceholderData }/>\n        <Skeleton isLoaded={ !isPlaceholderData } ml={ 1 }>\n          { dayjs(data.timestamp).fromNow() }\n        </Skeleton>\n        <TextSeparator/>\n        <Skeleton isLoaded={ !isPlaceholderData } whiteSpace=\"normal\">\n          { dayjs(data.timestamp).format('llll') }\n        </Skeleton>\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"Transactions\"\n        hint=\"The number of transactions in the block\"\n        isLoading={ isPlaceholderData }\n      >\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          <LinkInternal href={ route({ pathname: '/block/[height_or_hash]', query: { height_or_hash: heightOrHash, tab: 'txs' } }) }>\n            { data.tx_count } transaction{ data.tx_count === 1 ? '' : 's' }\n          </LinkInternal>\n        </Skeleton>\n      </DetailsInfoItem>\n      { config.features.beaconChain.isEnabled && Boolean(data.withdrawals_count) && (\n        <DetailsInfoItem\n          title=\"Withdrawals\"\n          hint=\"The number of beacon withdrawals in the block\"\n          isLoading={ isPlaceholderData }\n        >\n          <Skeleton isLoaded={ !isPlaceholderData }>\n            <LinkInternal href={ route({ pathname: '/block/[height_or_hash]', query: { height_or_hash: heightOrHash, tab: 'withdrawals' } }) }>\n              { data.withdrawals_count } withdrawal{ data.withdrawals_count === 1 ? '' : 's' }\n            </LinkInternal>\n          </Skeleton>\n        </DetailsInfoItem>\n      ) }\n      { !config.UI.views.block.hiddenFields?.miner && (\n        <DetailsInfoItem\n          title={ verificationTitle }\n          hint=\"A block producer who successfully included the block onto the blockchain\"\n          columnGap={ 1 }\n          isLoading={ isPlaceholderData }\n        >\n          <AddressEntity\n            address={ data.miner }\n            isLoading={ isPlaceholderData }\n          />\n          { /* api doesn't return the block processing time yet */ }\n          { /* <Text>{ dayjs.duration(block.minedIn, 'second').humanize(true) }</Text> */ }\n        </DetailsInfoItem>\n      ) }\n      { !isRollup && !totalReward.isEqualTo(ZERO) && !config.UI.views.block.hiddenFields?.total_reward && (\n        <DetailsInfoItem\n          title=\"Block reward\"\n          hint={\n            `For each block, the ${ validatorTitle } is rewarded with a finite amount of ${ config.chain.currency.symbol || 'native token' } \n          on top of the fees paid for all transactions in the block`\n          }\n          columnGap={ 1 }\n          isLoading={ isPlaceholderData }\n        >\n          <Skeleton isLoaded={ !isPlaceholderData }>\n            { totalReward.dividedBy(WEI).toFixed() } { currencyUnits.ether }\n          </Skeleton>\n          { rewardBreakDown }\n        </DetailsInfoItem>\n      ) }\n      { data.rewards\n        ?.filter(({ type }) => type !== 'Validator Reward' && type !== 'Miner Reward')\n        .map(({ type, reward }) => (\n          <DetailsInfoItem\n            key={ type }\n            title={ type }\n            // is this text correct for validators?\n            hint={ `Amount of distributed reward. ${ capitalize(validatorTitle) }s receive a static block reward + Tx fees + uncle fees` }\n          >\n            { BigNumber(reward).dividedBy(WEI).toFixed() } { currencyUnits.ether }\n          </DetailsInfoItem>\n        ))\n      }\n\n      <DetailsInfoItemDivider/>\n\n      <DetailsInfoItem\n        title=\"Gas used\"\n        hint=\"The total gas amount used in the block and its percentage of gas filled in the block\"\n        isLoading={ isPlaceholderData }\n      >\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { BigNumber(data.gas_used || 0).toFormat() }\n        </Skeleton>\n        <Utilization\n          ml={ 4 }\n          colorScheme=\"gray\"\n          value={ BigNumber(data.gas_used || 0).dividedBy(BigNumber(data.gas_limit)).toNumber() }\n          isLoading={ isPlaceholderData }\n        />\n        { data.gas_target_percentage && (\n          <>\n            <TextSeparator color={ separatorColor } mx={ 1 }/>\n            <GasUsedToTargetRatio value={ data.gas_target_percentage } isLoading={ isPlaceholderData }/>\n          </>\n        ) }\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"Gas limit\"\n        hint=\"Total gas limit provided by all transactions in the block\"\n        isLoading={ isPlaceholderData }\n      >\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { BigNumber(data.gas_limit).toFormat() }\n        </Skeleton>\n      </DetailsInfoItem>\n      { data.minimum_gas_price && (\n        <DetailsInfoItem\n          title=\"Minimum gas price\"\n          hint=\"The minimum gas price a transaction should have in order to be included in this block\"\n          isLoading={ isPlaceholderData }\n        >\n          <Skeleton isLoaded={ !isPlaceholderData }>\n            { BigNumber(data.minimum_gas_price).dividedBy(GWEI).toFormat() } { currencyUnits.gwei }\n          </Skeleton>\n        </DetailsInfoItem>\n      ) }\n      { data.base_fee_per_gas && (\n        <DetailsInfoItem\n          title=\"Base fee per gas\"\n          hint=\"Minimum fee required per unit of gas. Fee adjusts based on network congestion\"\n          isLoading={ isPlaceholderData }\n        >\n          { isPlaceholderData ? (\n            <Skeleton isLoaded={ !isPlaceholderData } h=\"20px\" maxW=\"380px\" w=\"100%\"/>\n          ) : (\n            <>\n              <Text>{ BigNumber(data.base_fee_per_gas).dividedBy(WEI).toFixed() } { currencyUnits.ether } </Text>\n              <Text variant=\"secondary\" whiteSpace=\"pre\">\n                { space }({ BigNumber(data.base_fee_per_gas).dividedBy(WEI_IN_GWEI).toFixed() } { currencyUnits.gwei })\n              </Text>\n            </>\n          ) }\n        </DetailsInfoItem>\n      ) }\n      { !config.UI.views.block.hiddenFields?.burnt_fees && (\n        <DetailsInfoItem\n          title=\"Burnt fees\"\n          hint={\n            `Amount of ${ config.chain.currency.symbol || 'native token' } burned from transactions included in the block.\n\n          Equals Block Base Fee per Gas * Gas Used`\n          }\n          isLoading={ isPlaceholderData }\n        >\n          <IconSvg name=\"flame\" boxSize={ 5 } color=\"gray.500\" isLoading={ isPlaceholderData }/>\n          <Skeleton isLoaded={ !isPlaceholderData } ml={ 2 }>\n            { burntFees.dividedBy(WEI).toFixed() } { currencyUnits.ether }\n          </Skeleton>\n          { !txFees.isEqualTo(ZERO) && (\n            <Tooltip label=\"Burnt fees / Txn fees * 100%\">\n              <Box>\n                <Utilization\n                  ml={ 4 }\n                  value={ burntFees.dividedBy(txFees).toNumber() }\n                  isLoading={ isPlaceholderData }\n                />\n              </Box>\n            </Tooltip>\n          ) }\n        </DetailsInfoItem>\n      ) }\n      { data.priority_fee !== null && BigNumber(data.priority_fee).gt(ZERO) && (\n        <DetailsInfoItem\n          title=\"Priority fee / Tip\"\n          hint=\"User-defined tips sent to validator for transaction priority/inclusion\"\n          isLoading={ isPlaceholderData }\n        >\n          <Skeleton isLoaded={ !isPlaceholderData }>\n            { BigNumber(data.priority_fee).dividedBy(WEI).toFixed() } { currencyUnits.ether }\n          </Skeleton>\n        </DetailsInfoItem>\n      ) }\n      { /* api doesn't support extra data yet */ }\n      { /* <DetailsInfoItem\n        title=\"Extra data\"\n        hint={ `Any data that can be included by the ${ validatorTitle } in the block` }\n      >\n        <Text whiteSpace=\"pre\">{ data.extra_data } </Text>\n        <Text variant=\"secondary\">(Hex: { data.extra_data })</Text>\n      </DetailsInfoItem> */ }\n\n      { /* CUT */ }\n      <GridItem colSpan={{ base: undefined, lg: 2 }}>\n        <Element name=\"BlockDetails__cutLink\">\n          <Skeleton isLoaded={ !isPlaceholderData } mt={ 6 } display=\"inline-block\">\n            <Link\n              fontSize=\"sm\"\n              textDecorationLine=\"underline\"\n              textDecorationStyle=\"dashed\"\n              onClick={ handleCutClick }\n            >\n              { isExpanded ? 'Hide details' : 'View details' }\n            </Link>\n          </Skeleton>\n        </Element>\n      </GridItem>\n\n      { /* ADDITIONAL INFO */ }\n      { isExpanded && !isPlaceholderData && (\n        <>\n          <GridItem colSpan={{ base: undefined, lg: 2 }} mt={{ base: 1, lg: 4 }}/>\n\n          { data.bitcoin_merged_mining_header && (\n            <DetailsInfoItem\n              title=\"Bitcoin merged mining header\"\n              hint=\"Merged-mining field: Bitcoin header\"\n              flexWrap=\"nowrap\"\n              alignSelf=\"flex-start\"\n            >\n              <Box whiteSpace=\"nowrap\" overflow=\"hidden\">\n                <HashStringShortenDynamic hash={ data.bitcoin_merged_mining_header }/>\n              </Box>\n              <CopyToClipboard text={ data.bitcoin_merged_mining_header }/>\n            </DetailsInfoItem>\n          ) }\n          { data.bitcoin_merged_mining_coinbase_transaction && (\n            <DetailsInfoItem\n              title=\"Bitcoin merged mining coinbase transaction\"\n              hint=\"Merged-mining field: Coinbase transaction\"\n            >\n              <RawDataSnippet\n                data={ data.bitcoin_merged_mining_coinbase_transaction }\n                isLoading={ isPlaceholderData }\n                showCopy={ false }\n                textareaMaxHeight=\"100px\"\n              />\n            </DetailsInfoItem>\n          ) }\n          { data.bitcoin_merged_mining_merkle_proof && (\n            <DetailsInfoItem\n              title=\"Bitcoin merged mining Merkle proof\"\n              hint=\"Merged-mining field: Merkle proof\"\n            >\n              <RawDataSnippet\n                data={ data.bitcoin_merged_mining_merkle_proof }\n                isLoading={ isPlaceholderData }\n                showCopy={ false }\n                textareaMaxHeight=\"100px\"\n              />\n            </DetailsInfoItem>\n          ) }\n          { data.hash_for_merged_mining && (\n            <DetailsInfoItem\n              title=\"Hash for merged mining\"\n              hint=\"Merged-mining field: Rootstock block header hash\"\n              flexWrap=\"nowrap\"\n              alignSelf=\"flex-start\"\n            >\n              <Box whiteSpace=\"nowrap\" overflow=\"hidden\">\n                <HashStringShortenDynamic hash={ data.hash_for_merged_mining }/>\n              </Box>\n              <CopyToClipboard text={ data.hash_for_merged_mining }/>\n            </DetailsInfoItem>\n          ) }\n\n          <DetailsInfoItem\n            title=\"Difficulty\"\n            hint={ `Block difficulty for ${ validatorTitle }, used to calibrate block generation time` }\n          >\n            <Box whiteSpace=\"nowrap\" overflow=\"hidden\">\n              <HashStringShortenDynamic hash={ BigNumber(data.difficulty).toFormat() }/>\n            </Box>\n          </DetailsInfoItem>\n          <DetailsInfoItem\n            title=\"Total difficulty\"\n            hint=\"Total difficulty of the chain until this block\"\n          >\n            <Box whiteSpace=\"nowrap\" overflow=\"hidden\">\n              <HashStringShortenDynamic hash={ BigNumber(data.total_difficulty).toFormat() }/>\n            </Box>\n          </DetailsInfoItem>\n\n          <DetailsInfoItemDivider/>\n\n          <DetailsInfoItem\n            title=\"Hash\"\n            hint=\"The SHA256 hash of the block\"\n            flexWrap=\"nowrap\"\n          >\n            <Box overflow=\"hidden\">\n              <HashStringShortenDynamic hash={ data.hash }/>\n            </Box>\n            <CopyToClipboard text={ data.hash }/>\n          </DetailsInfoItem>\n          { data.height > 0 && (\n            <DetailsInfoItem\n              title=\"Parent hash\"\n              hint=\"The hash of the block from which this block was generated\"\n              flexWrap=\"nowrap\"\n            >\n              <LinkInternal\n                href={ route({ pathname: '/block/[height_or_hash]', query: { height_or_hash: String(data.height - 1) } }) }\n                overflow=\"hidden\"\n                whiteSpace=\"nowrap\"\n              >\n                <HashStringShortenDynamic\n                  hash={ data.parent_hash }\n                />\n              </LinkInternal>\n              <CopyToClipboard text={ data.parent_hash }/>\n            </DetailsInfoItem>\n          ) }\n          { /* api doesn't support state root yet */ }\n          { /* <DetailsInfoItem\n            title=\"State root\"\n            hint=\"The root of the state trie\"\n          >\n            <Text wordBreak=\"break-all\" whiteSpace=\"break-spaces\">{ data.state_root }</Text>\n          </DetailsInfoItem> */ }\n          { !config.UI.views.block.hiddenFields?.nonce && (\n            <DetailsInfoItem\n              title=\"Nonce\"\n              hint=\"Block nonce is a value used during mining to demonstrate proof of work for a block\"\n            >\n              { data.nonce }\n            </DetailsInfoItem>\n          ) }\n        </>\n      ) }\n    </Grid>\n  );\n};\n\nexport default BlockDetails;\n","import { Show, Hide } from '@chakra-ui/react';\nimport React from 'react';\n\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\nimport WithdrawalsListItem from 'ui/withdrawals/WithdrawalsListItem';\nimport WithdrawalsTable from 'ui/withdrawals/WithdrawalsTable';\n\ntype Props = {\n  blockWithdrawalsQuery: QueryWithPagesResult<'block_withdrawals'>;\n}\n\nconst BlockWithdrawals = ({ blockWithdrawalsQuery }: Props) => {\n  const content = blockWithdrawalsQuery.data?.items ? (\n    <>\n      <Show below=\"lg\" ssr={ false }>\n        { blockWithdrawalsQuery.data.items.map((item, index) => (\n          <WithdrawalsListItem\n            key={ item.index + (blockWithdrawalsQuery.isPlaceholderData ? String(index) : '') }\n            item={ item }\n            view=\"block\"\n            isLoading={ blockWithdrawalsQuery.isPlaceholderData }\n          />\n        )) }\n      </Show>\n      <Hide below=\"lg\" ssr={ false }>\n        <WithdrawalsTable\n          items={ blockWithdrawalsQuery.data.items }\n          isLoading={ blockWithdrawalsQuery.isPlaceholderData }\n          top={ blockWithdrawalsQuery.pagination.isVisible ? 80 : 0 }\n          view=\"block\"\n        />\n      </Hide>\n    </>\n  ) : null ;\n\n  return (\n    <DataListDisplay\n      isError={ blockWithdrawalsQuery.isError }\n      items={ blockWithdrawalsQuery.data?.items }\n      emptyText=\"There are no withdrawals for this block.\"\n      content={ content }\n    />\n  );\n};\n\nexport default BlockWithdrawals;\n","import { chakra, Skeleton } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { PaginationParams } from 'ui/shared/pagination/types';\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport config from 'configs/app';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport throwOnAbsentParamError from 'lib/errors/throwOnAbsentParamError';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { BLOCK } from 'stubs/block';\nimport { TX } from 'stubs/tx';\nimport { generateListStub } from 'stubs/utils';\nimport { WITHDRAWAL } from 'stubs/withdrawals';\nimport BlockDetails from 'ui/block/BlockDetails';\nimport BlockWithdrawals from 'ui/block/BlockWithdrawals';\nimport TextAd from 'ui/shared/ad/TextAd';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport NetworkExplorers from 'ui/shared/NetworkExplorers';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\nimport TabsSkeleton from 'ui/shared/Tabs/TabsSkeleton';\nimport TxsWithFrontendSorting from 'ui/txs/TxsWithFrontendSorting';\n\nconst TAB_LIST_PROPS = {\n  marginBottom: 0,\n  py: 5,\n  marginTop: -5,\n};\n\nconst BlockPageContent = () => {\n  const router = useRouter();\n  const isMobile = useIsMobile();\n  const appProps = useAppContext();\n  const heightOrHash = getQueryParamString(router.query.height_or_hash);\n  const tab = getQueryParamString(router.query.tab);\n\n  const blockQuery = useApiQuery('block', {\n    pathParams: { height_or_hash: heightOrHash },\n    queryOptions: {\n      enabled: Boolean(heightOrHash),\n      placeholderData: BLOCK,\n    },\n  });\n\n  const blockTxsQuery = useQueryWithPages({\n    resourceName: 'block_txs',\n    pathParams: { height_or_hash: heightOrHash },\n    options: {\n      enabled: Boolean(!blockQuery.isPlaceholderData && blockQuery.data?.height && tab === 'txs'),\n      placeholderData: generateListStub<'block_txs'>(TX, 50, { next_page_params: {\n        block_number: 9004925,\n        index: 49,\n        items_count: 50,\n      } }),\n    },\n  });\n\n  const blockWithdrawalsQuery = useQueryWithPages({\n    resourceName: 'block_withdrawals',\n    pathParams: { height_or_hash: heightOrHash },\n    options: {\n      enabled: Boolean(!blockQuery.isPlaceholderData && blockQuery.data?.height && config.features.beaconChain.isEnabled && tab === 'withdrawals'),\n      placeholderData: generateListStub<'block_withdrawals'>(WITHDRAWAL, 50, { next_page_params: {\n        index: 5,\n        items_count: 50,\n      } }),\n    },\n  });\n\n  const tabs: Array<RoutedTab> = React.useMemo(() => ([\n    { id: 'index', title: 'Details', component: <BlockDetails query={ blockQuery }/> },\n    { id: 'txs', title: 'Transactions', component: <TxsWithFrontendSorting query={ blockTxsQuery } showBlockInfo={ false } showSocketInfo={ false }/> },\n    config.features.beaconChain.isEnabled && Boolean(blockQuery.data?.withdrawals_count) ?\n      { id: 'withdrawals', title: 'Withdrawals', component: <BlockWithdrawals blockWithdrawalsQuery={ blockWithdrawalsQuery }/> } :\n      null,\n  ].filter(Boolean)), [ blockQuery, blockTxsQuery, blockWithdrawalsQuery ]);\n\n  const hasPagination = !isMobile && (\n    (tab === 'txs' && blockTxsQuery.pagination.isVisible) ||\n    (tab === 'withdrawals' && blockWithdrawalsQuery.pagination.isVisible)\n  );\n\n  let pagination;\n  if (tab === 'txs') {\n    pagination = blockTxsQuery.pagination;\n  } else if (tab === 'withdrawals') {\n    pagination = blockWithdrawalsQuery.pagination;\n  }\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.includes('/blocks');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to blocks list',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  throwOnAbsentParamError(heightOrHash);\n  throwOnResourceLoadError(blockQuery);\n\n  const title = (() => {\n    switch (blockQuery.data?.type) {\n      case 'reorg':\n        return `Reorged block #${ blockQuery.data?.height }`;\n\n      case 'uncle':\n        return `Uncle block #${ blockQuery.data?.height }`;\n\n      default:\n        return `Block #${ blockQuery.data?.height }`;\n    }\n  })();\n  const titleSecondRow = (\n    <>\n      { !config.UI.views.block.hiddenFields?.miner && (\n        <Skeleton\n          isLoaded={ !blockQuery.isPlaceholderData }\n          fontFamily=\"heading\"\n          display=\"flex\"\n          minW={ 0 }\n          columnGap={ 2 }\n          fontWeight={ 500 }\n        >\n          <chakra.span flexShrink={ 0 }>\n            { config.chain.verificationType === 'validation' ? 'Validated by' : 'Mined by' }\n          </chakra.span>\n          <AddressEntity address={ blockQuery.data?.miner }/>\n        </Skeleton>\n      ) }\n      <NetworkExplorers type=\"block\" pathParam={ heightOrHash } ml={{ base: config.UI.views.block.hiddenFields?.miner ? 0 : 3, lg: 'auto' }}/>\n    </>\n  );\n\n  return (\n    <>\n      <TextAd mb={ 6 }/>\n      <PageTitle\n        title={ title }\n        backLink={ backLink }\n        secondRow={ titleSecondRow }\n        isLoading={ blockQuery.isPlaceholderData }\n      />\n      { blockQuery.isPlaceholderData ? <TabsSkeleton tabs={ tabs }/> : (\n        <RoutedTabs\n          tabs={ tabs }\n          tabListProps={ isMobile ? undefined : TAB_LIST_PROPS }\n          rightSlot={ hasPagination ? <Pagination { ...(pagination as PaginationParams) }/> : null }\n          stickyEnabled={ hasPagination }\n        />\n      ) }\n    </>\n  );\n};\n\nexport default BlockPageContent;\n","import { Skeleton, Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\ntype Props = {\n  value: number;\n  isLoading?: boolean;\n}\n\nconst GasUsedToTargetRatio = ({ value, isLoading }: Props) => {\n  return (\n    <Tooltip label=\"% of Gas Target\">\n      <Skeleton color=\"text_secondary\" isLoaded={ !isLoading }>\n        <span>{ (value > 0 ? '+' : '') + value.toLocaleString(undefined, { maximumFractionDigits: 2 }) }%</span>\n      </Skeleton>\n    </Tooltip>\n  );\n};\n\nexport default React.memo(GasUsedToTargetRatio);\n","import { Grid, chakra, GridItem, Skeleton } from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\nimport React from 'react';\n\ninterface ContainerProps {\n  className?: string;\n  isAnimated?: boolean;\n  children: React.ReactNode;\n}\n\nconst Container = chakra(({ isAnimated, children, className }: ContainerProps) => {\n  return (\n    <Grid\n      as={ motion.div }\n      w=\"100%\"\n      initial={ isAnimated ? { opacity: 0, scale: 0.97 } : { opacity: 1, scale: 1 } }\n      animate={{ opacity: 1, scale: 1 }}\n      transitionDuration=\"normal\"\n      transitionTimingFunction=\"linear\"\n      rowGap={ 2 }\n      columnGap={ 2 }\n      gridTemplateColumns=\"86px auto\"\n      alignItems=\"start\"\n      paddingY={ 4 }\n      borderColor=\"divider\"\n      borderTopWidth=\"1px\"\n      _last={{\n        borderBottomWidth: '1px',\n      }}\n      className={ className }\n      fontSize=\"sm\"\n      lineHeight=\"20px\"\n    >\n      { children }\n    </Grid>\n  );\n});\n\ninterface LabelProps {\n  className?: string;\n  children: React.ReactNode;\n  isLoading?: boolean;\n}\n\nconst Label = chakra(({ children, className, isLoading }: LabelProps) => {\n  return (\n    <Skeleton\n      className={ className }\n      isLoaded={ !isLoading }\n      fontWeight={ 500 }\n      my=\"5px\"\n      justifySelf=\"start\"\n    >\n      { children }\n    </Skeleton>\n  );\n});\n\ninterface ValueProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst Value = chakra(({ children, className }: ValueProps) => {\n  return (\n    <GridItem\n      className={ className }\n      py=\"5px\"\n      color=\"text_secondary\"\n      overflow=\"hidden\"\n    >\n      { children }\n    </GridItem>\n  );\n});\n\nconst ListItemMobileGrid = {\n  Container,\n  Label,\n  Value,\n};\n\nexport default ListItemMobileGrid;\n","import { Flex, Button, chakra, Popover, PopoverTrigger, PopoverBody, PopoverContent, useDisclosure } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { NetworkExplorer as TNetworkExplorer } from 'types/networks';\n\nimport config from 'configs/app';\nimport stripTrailingSlash from 'lib/stripTrailingSlash';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkExternal from 'ui/shared/LinkExternal';\n\ninterface Props {\n  className?: string;\n  type: keyof TNetworkExplorer['paths'];\n  pathParam: string;\n}\n\nconst NetworkExplorers = ({ className, type, pathParam }: Props) => {\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  const explorersLinks = React.useMemo(() => {\n    return config.UI.explorers.items\n      .filter((explorer) => typeof explorer.paths[type] === 'string')\n      .map((explorer) => {\n        const url = new URL(stripTrailingSlash(explorer.paths[type] || '') + '/' + pathParam, explorer.baseUrl);\n        return <LinkExternal key={ explorer.baseUrl } href={ url.toString() }>{ explorer.title }</LinkExternal>;\n      });\n  }, [ pathParam, type ]);\n\n  if (explorersLinks.length === 0) {\n    return null;\n  }\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy>\n      <PopoverTrigger>\n        <Button\n          className={ className }\n          size=\"sm\"\n          variant=\"outline\"\n          colorScheme=\"gray\"\n          onClick={ onToggle }\n          aria-label=\"Verify in other explorers\"\n          fontWeight={ 500 }\n          px={ 2 }\n          h=\"32px\"\n          flexShrink={ 0 }\n        >\n          <IconSvg name=\"explorer\" boxSize={ 5 }/>\n          <IconSvg name=\"arrows/east-mini\" transform={ isOpen ? 'rotate(90deg)' : 'rotate(-90deg)' } transitionDuration=\"faster\" boxSize={ 5 }/>\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent w=\"240px\">\n        <PopoverBody >\n          <chakra.span color=\"text_secondary\" fontSize=\"xs\">Verify with other explorers</chakra.span>\n          <Flex\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            columnGap={ 6 }\n            rowGap={ 3 }\n            mt={ 3 }\n          >\n            { explorersLinks }\n          </Flex>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(NetworkExplorers));\n","import { Box, Flex, chakra, useColorModeValue, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport CopyToClipboard from './CopyToClipboard';\n\ninterface Props {\n  data: React.ReactNode;\n  title?: string;\n  className?: string;\n  rightSlot?: React.ReactNode;\n  beforeSlot?: React.ReactNode;\n  textareaMaxHeight?: string;\n  showCopy?: boolean;\n  isLoading?: boolean;\n}\n\nconst RawDataSnippet = ({ data, className, title, rightSlot, beforeSlot, textareaMaxHeight, showCopy = true, isLoading }: Props) => {\n  // see issue in theme/components/Textarea.ts\n  const bgColor = useColorModeValue('#f5f5f6', '#1a1b1b');\n  return (\n    <Box className={ className } as=\"section\" title={ title }>\n      { (title || rightSlot || showCopy) && (\n        <Flex justifyContent={ title ? 'space-between' : 'flex-end' } alignItems=\"center\" mb={ 3 }>\n          { title && <Skeleton fontWeight={ 500 } isLoaded={ !isLoading }>{ title }</Skeleton> }\n          { rightSlot }\n          { typeof data === 'string' && showCopy && <CopyToClipboard text={ data } isLoading={ isLoading }/> }\n        </Flex>\n      ) }\n      { beforeSlot }\n      <Skeleton\n        p={ 4 }\n        bgColor={ isLoading ? 'inherit' : bgColor }\n        maxH={ textareaMaxHeight || '400px' }\n        minH={ isLoading ? '200px' : undefined }\n        fontSize=\"sm\"\n        borderRadius=\"md\"\n        wordBreak=\"break-all\"\n        whiteSpace=\"pre-wrap\"\n        overflowY=\"auto\"\n        isLoaded={ !isLoading }\n      >\n        { data }\n      </Skeleton>\n    </Box>\n  );\n};\n\nexport default React.memo(chakra(RawDataSnippet));\n","import { Skeleton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressWithdrawalsItem } from 'types/api/address';\nimport type { BlockWithdrawalsItem } from 'types/api/block';\nimport type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport config from 'configs/app';\nimport dayjs from 'lib/date/dayjs';\nimport { currencyUnits } from 'lib/units';\nimport CurrencyValue from 'ui/shared/CurrencyValue';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport ListItemMobileGrid from 'ui/shared/ListItemMobile/ListItemMobileGrid';\n\nconst feature = config.features.beaconChain;\n\ntype Props = ({\n  item: WithdrawalsItem;\n  view: 'list';\n} | {\n  item: AddressWithdrawalsItem;\n  view: 'address';\n} | {\n  item: BlockWithdrawalsItem;\n  view: 'block';\n}) & { isLoading?: boolean };\n\nconst WithdrawalsListItem = ({ item, isLoading, view }: Props) => {\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  return (\n    <ListItemMobileGrid.Container gridTemplateColumns=\"100px auto\">\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Index</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.index }</Skeleton>\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Validator index</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.validator_index }</Skeleton>\n      </ListItemMobileGrid.Value>\n\n      { view !== 'block' && (\n        <>\n          <ListItemMobileGrid.Label isLoading={ isLoading }>Block</ListItemMobileGrid.Label>\n          <ListItemMobileGrid.Value>\n            <BlockEntity\n              number={ item.block_number }\n              isLoading={ isLoading }\n              fontSize=\"sm\"\n              lineHeight={ 5 }\n            />\n          </ListItemMobileGrid.Value>\n        </>\n      ) }\n\n      { view !== 'address' && (\n        <>\n          <ListItemMobileGrid.Label isLoading={ isLoading }>To</ListItemMobileGrid.Label><ListItemMobileGrid.Value>\n            <AddressEntity\n              address={ item.receiver }\n              isLoading={ isLoading }\n            />\n          </ListItemMobileGrid.Value>\n        </>\n      ) }\n\n      { view !== 'block' && (\n        <>\n          <ListItemMobileGrid.Label isLoading={ isLoading }>Age</ListItemMobileGrid.Label>\n          <ListItemMobileGrid.Value>\n            <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ dayjs(item.timestamp).fromNow() }</Skeleton>\n          </ListItemMobileGrid.Value>\n\n          <ListItemMobileGrid.Label isLoading={ isLoading }>Value</ListItemMobileGrid.Label>\n          <ListItemMobileGrid.Value>\n            <CurrencyValue value={ item.amount } currency={ currencyUnits.ether } isLoading={ isLoading }/>\n          </ListItemMobileGrid.Value>\n        </>\n      ) }\n\n    </ListItemMobileGrid.Container>\n  );\n};\n\nexport default WithdrawalsListItem;\n","import { Td, Tr, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressWithdrawalsItem } from 'types/api/address';\nimport type { BlockWithdrawalsItem } from 'types/api/block';\nimport type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport dayjs from 'lib/date/dayjs';\nimport CurrencyValue from 'ui/shared/CurrencyValue';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\n\n type Props = ({\n   item: WithdrawalsItem;\n   view: 'list';\n } | {\n   item: AddressWithdrawalsItem;\n   view: 'address';\n } | {\n   item: BlockWithdrawalsItem;\n   view: 'block';\n }) & { isLoading?: boolean };\n\nconst WithdrawalsTableItem = ({ item, view, isLoading }: Props) => {\n  return (\n    <Tr>\n      <Td verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.index }</Skeleton>\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.validator_index }</Skeleton>\n      </Td>\n      { view !== 'block' && (\n        <Td verticalAlign=\"middle\">\n          <BlockEntity\n            number={ item.block_number }\n            isLoading={ isLoading }\n            fontSize=\"sm\"\n            lineHeight={ 5 }\n          />\n        </Td>\n      ) }\n      { view !== 'address' && (\n        <Td verticalAlign=\"middle\">\n          <AddressEntity\n            address={ item.receiver }\n            isLoading={ isLoading }\n            truncation=\"constant\"\n          />\n        </Td>\n      ) }\n      { view !== 'block' && (\n        <Td verticalAlign=\"middle\" pr={ 12 }>\n          <Skeleton isLoaded={ !isLoading } display=\"inline-block\" color=\"text_secondary\">\n            <span>{ dayjs(item.timestamp).fromNow() }</span>\n          </Skeleton>\n        </Td>\n      ) }\n      <Td verticalAlign=\"middle\">\n        <CurrencyValue value={ item.amount } isLoading={ isLoading }/>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default WithdrawalsTableItem;\n","import { Table, Tbody, Th, Tr } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressWithdrawalsItem } from 'types/api/address';\nimport type { BlockWithdrawalsItem } from 'types/api/block';\nimport type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport config from 'configs/app';\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport WithdrawalsTableItem from './WithdrawalsTableItem';\n\nconst feature = config.features.beaconChain;\n\n type Props = {\n   top: number;\n   isLoading?: boolean;\n } & ({\n   items: Array<WithdrawalsItem>;\n   view: 'list';\n } | {\n   items: Array<AddressWithdrawalsItem>;\n   view: 'address';\n } | {\n   items: Array<BlockWithdrawalsItem>;\n   view: 'block';\n });\n\nconst WithdrawalsTable = ({ items, isLoading, top, view = 'list' }: Props) => {\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  return (\n    <Table variant=\"simple\" size=\"sm\" style={{ tableLayout: 'auto' }} minW=\"950px\">\n      <Thead top={ top }>\n        <Tr>\n          <Th minW=\"140px\">Index</Th>\n          <Th minW=\"200px\">Validator index</Th>\n          { view !== 'block' && <Th w=\"25%\">Block</Th> }\n          { view !== 'address' && <Th w=\"25%\">To</Th> }\n          { view !== 'block' && <Th w=\"25%\">Age</Th> }\n          <Th w=\"25%\">{ `Value ${ feature.currency.symbol }` }</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        { view === 'list' && (items as Array<WithdrawalsItem>).map((item, index) => (\n          <WithdrawalsTableItem key={ item.index + (isLoading ? String(index) : '') } item={ item } view=\"list\" isLoading={ isLoading }/>\n        )) }\n        { view === 'address' && (items as Array<AddressWithdrawalsItem>).map((item, index) => (\n          <WithdrawalsTableItem key={ item.index + (isLoading ? String(index) : '') } item={ item } view=\"address\" isLoading={ isLoading }/>\n        )) }\n        { view === 'block' && (items as Array<BlockWithdrawalsItem>).map((item, index) => (\n          <WithdrawalsTableItem key={ item.index + (isLoading ? String(index) : '') } item={ item } view=\"block\" isLoading={ isLoading }/>\n        )) }\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default WithdrawalsTable;\n"],"names":["getNetworkValidatorTitle","config","chain","verificationType","BLOCK_HASH","BLOCK","base_fee_per_gas","burnt_fees","burnt_fees_percentage","difficulty","extra_data","gas_limit","gas_target_percentage","gas_used","gas_used_percentage","hash","height","miner","ADDRESS_PARAMS","nonce","parent_hash","priority_fee","rewards","reward","type","size","state_root","timestamp","total_difficulty","tx_count","tx_fees","uncles_hashes","WITHDRAWAL","amount","index","receiver","validator_index","block_number","isRollup","features","optimisticRollup","isEnabled","zkEvmRollup","block_BlockDetails","data","query","param","isExpanded","setIsExpanded","React","router","useRouter","heightOrHash","getQueryParamString","height_or_hash","separatorColor","useColorModeValue","isPlaceholderData","isError","error","handleCutClick","flag","scroller","scrollTo","duration","smooth","handlePrevNextClick","nextId","String","direction","push","pathname","undefined","status","throwOnResourceLoadError","jsx_runtime","jsx","DataFetchAlert","totalReward","staticReward","burntFees","txFees","getBlockReward","block","BigNumber","minerReward","find","minus","plus","validatorTitle","rewardBreakDown","isEqualTo","ZERO","Skeleton","w","h","jsxs","Text","variant","whiteSpace","Tooltip","label","span","dividedBy","WEI","toFixed","Fragment","space","verificationTitle","blockTypeLabel","Grid","columnGap","rowGap","base","lg","templateColumns","overflow","DetailsInfoItem","title","concat","hint","isLoading","isLoaded","PrevNext","ml","onClick","prevLabel","nextLabel","isPrevDisabled","toLocaleString","IconSvg","name","boxSize","color","dayjs","fromNow","TextSeparator","format","LinkInternal","href","route","tab","beaconChain","Boolean","withdrawals_count","UI","views","hiddenFields","AddressEntity","address","total_reward","currency","symbol","currencyUnits","ether","filter","map","capitalize","DetailsInfoItemDivider","toFormat","Utilization","colorScheme","value","toNumber","mx","GasUsedToTargetRatio","minimum_gas_price","GWEI","gwei","maxW","WEI_IN_GWEI","Box","gt","GridItem","colSpan","Element","mt","display","Link","fontSize","textDecorationLine","textDecorationStyle","bitcoin_merged_mining_header","flexWrap","alignSelf","HashStringShortenDynamic","CopyToClipboard","text","bitcoin_merged_mining_coinbase_transaction","RawDataSnippet","showCopy","textareaMaxHeight","bitcoin_merged_mining_merkle_proof","hash_for_merged_mining","block_BlockWithdrawals","blockWithdrawalsQuery","content","items","Show","below","ssr","item","WithdrawalsListItem","view","Hide","WithdrawalsTable","top","pagination","isVisible","DataListDisplay","emptyText","TAB_LIST_PROPS","marginBottom","py","marginTop","Block","blockQuery","isMobile","useIsMobile","appProps","useAppContext","useApiQuery","pathParams","queryOptions","enabled","placeholderData","blockTxsQuery","useQueryWithPages","resourceName","options","generateListStub","TX","next_page_params","items_count","tabs","id","component","BlockDetails","TxsWithFrontendSorting","showBlockInfo","showSocketInfo","BlockWithdrawals","hasPagination","backLink","hasGoBackLink","referrer","includes","url","throwOnAbsentParamError","titleSecondRow","fontFamily","minW","fontWeight","chakra","flexShrink","NetworkExplorers","pathParam","TextAd","mb","PageTitle","secondRow","TabsSkeleton","RoutedTabs","tabListProps","rightSlot","Pagination","stickyEnabled","__webpack_exports__","Z","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","maximumFractionDigits","Container","isAnimated","children","className","as","motion","div","initial","opacity","scale","animate","transitionDuration","transitionTimingFunction","gridTemplateColumns","alignItems","paddingY","borderColor","borderTopWidth","_last","borderBottomWidth","lineHeight","Label","my","justifySelf","Value","isOpen","onToggle","onClose","useDisclosure","explorersLinks","explorers","explorer","paths","URL","stripTrailingSlash","baseUrl","LinkExternal","toString","length","Popover","placement","isLazy","PopoverTrigger","Button","aria-label","px","transform","PopoverContent","PopoverBody","Flex","beforeSlot","bgColor","justifyContent","p","maxH","minH","borderRadius","wordBreak","overflowY","feature","ListItemMobileGrid","BlockEntity","number","CurrencyValue","withdrawals_WithdrawalsTableItem","Tr","Td","verticalAlign","truncation","pr","withdrawals_WithdrawalsTable","Table","style","tableLayout","Thead","Th","Tbody","WithdrawalsTableItem"],"sourceRoot":""}