{"version":3,"file":"static/chunks/4107.f723cb71428e8fe9.js","mappings":"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","sources":["webpack://_N_E/./lib/getErrorMessage.ts","webpack://_N_E/./lib/hooks/usePreventFocusAfterModalClosing.tsx","webpack://_N_E/./lib/hooks/useRedirectForInvalidAuthToken.tsx","webpack://_N_E/./lib/validations/email.ts","webpack://_N_E/./stubs/account.ts","webpack://_N_E/./stubs/addressParams.ts","webpack://_N_E/./stubs/tx.ts","webpack://_N_E/./ui/publicTags/PublicTagTable/PublicTagListItem.tsx","webpack://_N_E/./ui/publicTags/DeletePublicTagModal.tsx","webpack://_N_E/./ui/publicTags/PublicTagTable/PublicTagTableItem.tsx","webpack://_N_E/./ui/publicTags/PublicTagTable/PublicTagTable.tsx","webpack://_N_E/./ui/publicTags/PublicTagsData.tsx","webpack://_N_E/./ui/publicTags/PublicTagsForm/PublicTagFormAction.tsx","webpack://_N_E/./ui/publicTags/PublicTagsForm/PublicTagFormAddressInput.tsx","webpack://_N_E/./ui/publicTags/PublicTagsForm/PublicTagFormComment.tsx","webpack://_N_E/./ui/publicTags/PublicTagsForm/PublicTagsFormInput.tsx","webpack://_N_E/./ui/publicTags/PublicTagsForm/PublicTagsForm.tsx","webpack://_N_E/./ui/pages/PublicTags.tsx","webpack://_N_E/./ui/shared/AccountPageDescription.tsx","webpack://_N_E/./ui/shared/AddressInput.tsx","webpack://_N_E/./ui/shared/DataFetchAlert.tsx","webpack://_N_E/./ui/shared/DeleteModal.tsx","webpack://_N_E/./ui/shared/FormSubmitAlert.tsx","webpack://_N_E/./ui/shared/InputPlaceholder.tsx","webpack://_N_E/./ui/shared/ListItemMobile/ListItemMobile.tsx","webpack://_N_E/./ui/shared/Page/PageTitle.tsx","webpack://_N_E/./ui/shared/TableItemActionButtons.tsx","webpack://_N_E/./ui/shared/chakra/Tag.tsx","webpack://_N_E/./node_modules/@chakra-ui/modal/dist/chunk-DHYX4MPH.mjs","webpack://_N_E/./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/mutationObserver.js","webpack://_N_E/./node_modules/@tanstack/react-query/build/modern/useMutation.js","webpack://_N_E/<anon>"],"sourcesContent":["export default function getErrorMessage(error: Record<string, Array<string>> | undefined, field: string) {\n  return error?.[field]?.join(', ');\n}\n","import React from 'react';\n\n// prevent set focus on button when closing modal\nexport default function usePreventFocusAfterModalClosing() {\n  return React.useCallback((e: React.SyntheticEvent) => e.stopPropagation(), []);\n}\n","import * as Sentry from '@sentry/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport { resourceKey } from 'lib/api/resources';\nimport type { ResourceError } from 'lib/api/resources';\nimport * as cookies from 'lib/cookies';\nimport useLoginUrl from 'lib/hooks/useLoginUrl';\n\nexport default function useRedirectForInvalidAuthToken() {\n  const queryClient = useQueryClient();\n\n  const state = queryClient.getQueryState<unknown, ResourceError>([ resourceKey('user_info') ]);\n  const errorStatus = state?.error?.status;\n  const loginUrl = useLoginUrl();\n\n  React.useEffect(() => {\n    if (errorStatus === 401) {\n      const apiToken = cookies.get(cookies.NAMES.API_TOKEN);\n\n      if (apiToken && loginUrl) {\n        Sentry.captureException(new Error('Invalid API token'), { tags: { source: 'invalid_api_token' } });\n        window.location.assign(loginUrl);\n      }\n    }\n  }, [ errorStatus, loginUrl ]);\n}\n","export const EMAIL_REGEXP = /^[\\w.%+-]+@[a-zA-Z\\d-]+(?:\\.[a-zA-Z\\d-]+)+$/;\n\nexport const validator = (value: string) => EMAIL_REGEXP.test(value) ? true : 'Invalid email';\n","import type { PublicTag, AddressTag, TransactionTag, ApiKey, CustomAbi, VerifiedAddress, TokenInfoApplication, WatchlistAddress } from 'types/api/account';\n\nimport { ADDRESS_PARAMS, ADDRESS_HASH } from './addressParams';\nimport { TX_HASH } from './tx';\n\nexport const PRIVATE_TAG_ADDRESS: AddressTag = {\n  address: ADDRESS_PARAMS,\n  address_hash: ADDRESS_HASH,\n  id: '4',\n  name: 'placeholder',\n};\n\nexport const PRIVATE_TAG_TX: TransactionTag = {\n  id: '1',\n  name: 'placeholder',\n  transaction_hash: TX_HASH,\n};\n\nexport const PUBLIC_TAG: PublicTag = {\n  additional_comment: 'my comment',\n  addresses: [ ADDRESS_HASH ],\n  addresses_with_info: [ ADDRESS_PARAMS ],\n  company: 'Blockscout',\n  email: 'john.doe@example.com',\n  full_name: 'name',\n  id: 1,\n  is_owner: true,\n  tags: 'placeholder',\n  website: 'example.com',\n};\n\nexport const WATCH_LIST_ITEM_WITH_TOKEN_INFO: WatchlistAddress = {\n  address: ADDRESS_PARAMS,\n  address_balance: '7072643779453701031672',\n  address_hash: ADDRESS_HASH,\n  exchange_rate: '0.00099052',\n  id: '18',\n  name: 'placeholder',\n  notification_methods: {\n    email: false,\n  },\n  notification_settings: {\n    'ERC-20': {\n      incoming: true,\n      outcoming: true,\n    },\n    'ERC-721': {\n      incoming: true,\n      outcoming: true,\n    },\n    'native': {\n      incoming: true,\n      outcoming: true,\n    },\n  },\n  tokens_count: 42,\n  tokens_fiat_value: '12345',\n  tokens_overflow: false,\n};\n\nexport const API_KEY: ApiKey = {\n  api_key: '9c3ecf44-a1ca-4ff1-b28e-329e8b65f652',\n  name: 'placeholder',\n};\n\nexport const CUSTOM_ABI: CustomAbi = {\n  abi: [\n    {\n      constant: false,\n      payable: false,\n      inputs: [ { name: 'target', type: 'address' } ],\n      name: 'unknownWriteMethod',\n      outputs: [ { name: 'result', type: 'address' } ],\n      stateMutability: 'nonpayable',\n      type: 'function',\n    },\n  ],\n  contract_address: ADDRESS_PARAMS,\n  contract_address_hash: ADDRESS_HASH,\n  id: '1',\n  name: 'placeholder',\n};\n\nexport const VERIFIED_ADDRESS: VerifiedAddress = {\n  userId: 'john.doe@gmail.com',\n  chainId: '5',\n  contractAddress: ADDRESS_HASH,\n  verifiedDate: '2022-11-11',\n  metadata: {\n    tokenName: 'Placeholder Token',\n    tokenSymbol: 'PLC',\n  },\n};\n\nexport const TOKEN_INFO_APPLICATION: TokenInfoApplication = {\n  id: '1',\n  tokenAddress: ADDRESS_HASH,\n  status: 'IN_PROCESS',\n  updatedAt: '2022-11-11 13:49:48.031453Z',\n  requesterName: 'John Doe',\n  requesterEmail: 'john.doe@gmail.com',\n  projectWebsite: 'http://example.com',\n  projectEmail: 'info@example.com',\n  iconUrl: 'https://example.com/100/100',\n  projectDescription: 'Hello!',\n  projectSector: 'DeFi',\n};\n","import type { AddressParam } from 'types/api/addressParams';\n\nexport const ADDRESS_HASH = '0x2B51Ae4412F79c3c1cB12AA40Ea4ECEb4e80511a';\n\nexport const ADDRESS_PARAMS: AddressParam = {\n  hash: ADDRESS_HASH,\n  implementation_name: null,\n  is_contract: false,\n  is_verified: null,\n  name: null,\n  private_tags: [],\n  public_tags: [],\n  watchlist_names: [],\n  ens_domain_name: null,\n};\n","import type { RawTracesResponse } from 'types/api/rawTrace';\nimport type { Transaction } from 'types/api/transaction';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const TX_HASH = '0x3ed9d81e7c1001bdda1caa1dc62c0acbbe3d2c671cdc20dc1e65efdaa4186967';\n\nexport const TX: Transaction = {\n  timestamp: '2022-11-11T11:11:11.000000Z',\n  fee: {\n    type: 'actual',\n    value: '2100000000000000',\n  },\n  gas_limit: '21000',\n  block: 9004925,\n  status: 'ok',\n  method: 'placeholder',\n  confirmations: 71,\n  type: 0,\n  exchange_rate: '1828.71',\n  to: ADDRESS_PARAMS,\n  tx_burnt_fee: null,\n  max_fee_per_gas: null,\n  result: 'success',\n  hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  gas_price: '100000000000',\n  priority_fee: null,\n  base_fee_per_gas: '24',\n  from: ADDRESS_PARAMS,\n  token_transfers: null,\n  tx_types: [\n    'coin_transfer',\n  ],\n  gas_used: '21000',\n  created_contract: null,\n  position: 0,\n  nonce: 295929,\n  has_error_in_internal_txs: false,\n  actions: [],\n  decoded_input: null,\n  token_transfers_overflow: false,\n  raw_input: '0x',\n  value: '42000420000000000000',\n  max_priority_fee_per_gas: null,\n  revert_reason: null,\n  confirmation_duration: [\n    0,\n    14545,\n  ],\n  tx_tag: null,\n};\n\nexport const TX_ZKEVM_L2: Transaction = {\n  ...TX,\n  zkevm_batch_number: 12345,\n  zkevm_sequence_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  zkevm_status: 'Confirmed by Sequencer',\n  zkevm_verify_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n};\n\nexport const TX_RAW_TRACE: RawTracesResponse = [];\n","import { VStack, Text, HStack, Skeleton } from '@chakra-ui/react';\nimport React, { useCallback } from 'react';\n\nimport type { PublicTag } from 'types/api/account';\n\nimport Tag from 'ui/shared/chakra/Tag';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport ListItemMobile from 'ui/shared/ListItemMobile/ListItemMobile';\nimport TableItemActionButtons from 'ui/shared/TableItemActionButtons';\n\ninterface Props {\n  item: PublicTag;\n  isLoading?: boolean;\n  onEditClick: (data: PublicTag) => void;\n  onDeleteClick: (data: PublicTag) => void;\n}\n\nconst PublicTagListItem = ({ item, isLoading, onEditClick, onDeleteClick }: Props) => {\n  const onItemEditClick = useCallback(() => {\n    return onEditClick(item);\n  }, [ item, onEditClick ]);\n\n  const onItemDeleteClick = useCallback(() => {\n    return onDeleteClick(item);\n  }, [ item, onDeleteClick ]);\n\n  return (\n    <ListItemMobile>\n      <VStack spacing={ 3 } alignItems=\"flex-start\" maxW=\"100%\">\n        <VStack spacing={ 4 } alignItems=\"unset\" maxW=\"100%\">\n          { item.addresses_with_info.map((address) => (\n            <AddressEntity\n              key={ address.hash }\n              address={ address }\n              isLoading={ isLoading }\n              fontWeight=\"600\"\n              w=\"100%\"\n            />\n          )) }\n        </VStack>\n        <HStack spacing={ 3 }>\n          <Text fontSize=\"sm\" fontWeight={ 500 }>Public tags</Text>\n          <HStack spacing={ 2 } alignItems=\"baseline\">\n            { item.tags.split(';').map((tag) => <Tag key={ tag } isLoading={ isLoading } isTruncated>{ tag }</Tag>) }\n          </HStack>\n        </HStack>\n        <HStack spacing={ 3 }>\n          <Text fontSize=\"sm\" fontWeight={ 500 }>Status</Text>\n          <Skeleton fontSize=\"sm\" color=\"text_secondary\" isLoaded={ !isLoading } display=\"inline-block\">\n            <span>Submitted</span>\n          </Skeleton>\n        </HStack>\n      </VStack>\n      <TableItemActionButtons onDeleteClick={ onItemDeleteClick } onEditClick={ onItemEditClick } isLoading={ isLoading }/>\n    </ListItemMobile>\n  );\n};\n\nexport default React.memo(PublicTagListItem);\n","import { Box, Text, FormControl, FormLabel, Textarea, useColorModeValue } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport React, { useCallback, useState } from 'react';\nimport type { ChangeEvent } from 'react';\n\nimport type { PublicTags, PublicTag } from 'types/api/account';\n\nimport { resourceKey } from 'lib/api/resources';\nimport useApiFetch from 'lib/api/useApiFetch';\nimport DeleteModal from 'ui/shared/DeleteModal';\n\ntype Props = {\n  isOpen: boolean;\n  onClose: () => void;\n  data: PublicTag;\n  onDeleteSuccess: () => void;\n}\n\nconst DeletePublicTagModal: React.FC<Props> = ({ isOpen, onClose, data, onDeleteSuccess }) => {\n\n  const [ reason, setReason ] = useState<string>('');\n\n  const tags = data.tags.split(';');\n\n  const queryClient = useQueryClient();\n  const apiFetch = useApiFetch();\n  const formBackgroundColor = useColorModeValue('white', 'gray.900');\n\n  const deleteApiKey = useCallback(() => {\n    const body = { remove_reason: reason };\n    return apiFetch('public_tags', {\n      pathParams: { id: String(data.id) },\n      fetchParams: { method: 'DELETE', body },\n    });\n  }, [ data.id, apiFetch, reason ]);\n\n  const onSuccess = useCallback(async() => {\n    onDeleteSuccess();\n    queryClient.setQueryData([ resourceKey('public_tags') ], (prevData: PublicTags | undefined) => {\n      return prevData?.filter((item) => item.id !== data.id);\n    });\n  }, [ queryClient, data, onDeleteSuccess ]);\n\n  const onFieldChange = useCallback((event: ChangeEvent<HTMLTextAreaElement>) => {\n    setReason(event.currentTarget.value);\n  }, []);\n\n  const renderContent = useCallback(() => {\n    let text;\n    if (tags.length === 1) {\n      text = (\n        <>\n          <Text display=\"inline\" as=\"span\">Public tag</Text>\n          <Text fontWeight=\"700\" whiteSpace=\"pre\" as=\"span\">{ ` \"${ tags[0] }\" ` }</Text>\n          <Text as=\"span\">will be removed.</Text>\n        </>\n      );\n    }\n    if (tags.length > 1) {\n      const tagsText: Array<JSX.Element | string> = [];\n      tags.forEach((tag, index) => {\n        if (index < tags.length - 2) {\n          tagsText.push(<Text fontWeight=\"700\" whiteSpace=\"pre\" as=\"span\">{ ` \"${ tag }\"` }</Text>);\n          tagsText.push(',');\n        }\n        if (index === tags.length - 2) {\n          tagsText.push(<Text fontWeight=\"700\" whiteSpace=\"pre\" as=\"span\">{ ` \"${ tag }\" ` }</Text>);\n          tagsText.push('and');\n        }\n        if (index === tags.length - 1) {\n          tagsText.push(<Text fontWeight=\"700\" whiteSpace=\"pre\" as=\"span\">{ ` \"${ tag }\" ` }</Text>);\n        }\n      });\n      text = (\n        <>\n          <Text as=\"span\">Public tags</Text>{ tagsText }<Text as=\"span\">will be removed.</Text>\n        </>\n      );\n    }\n    return (\n      <>\n        <Box marginBottom={ 8 }>\n          { text }\n        </Box>\n        <FormControl variant=\"floating\" id=\"tag-delete\" backgroundColor={ formBackgroundColor }>\n          <Textarea\n            size=\"lg\"\n            value={ reason }\n            onChange={ onFieldChange }\n          />\n          <FormLabel>Why do you want to remove tags?</FormLabel>\n        </FormControl>\n      </>\n    );\n  }, [ tags, reason, onFieldChange, formBackgroundColor ]);\n\n  return (\n    <DeleteModal\n      isOpen={ isOpen }\n      onClose={ onClose }\n      title=\"Request to remove a public tag\"\n      renderContent={ renderContent }\n      mutationFn={ deleteApiKey }\n      onSuccess={ onSuccess }\n    />\n  );\n};\n\nexport default React.memo(DeletePublicTagModal);\n","import {\n  Tr,\n  Td,\n  VStack,\n  Box,\n  Skeleton,\n} from '@chakra-ui/react';\nimport React, { useCallback } from 'react';\n\nimport type { PublicTag } from 'types/api/account';\n\nimport Tag from 'ui/shared/chakra/Tag';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport TableItemActionButtons from 'ui/shared/TableItemActionButtons';\n\ninterface Props {\n  item: PublicTag;\n  isLoading?: boolean;\n  onEditClick: (data: PublicTag) => void;\n  onDeleteClick: (data: PublicTag) => void;\n}\n\nconst PublicTagTableItem = ({ item, isLoading, onEditClick, onDeleteClick }: Props) => {\n  const onItemEditClick = useCallback(() => {\n    return onEditClick(item);\n  }, [ item, onEditClick ]);\n\n  const onItemDeleteClick = useCallback(() => {\n    return onDeleteClick(item);\n  }, [ item, onDeleteClick ]);\n\n  return (\n    <Tr alignItems=\"top\" key={ item.id }>\n      <Td>\n        <VStack spacing={ 4 } alignItems=\"unset\">\n          { item.addresses_with_info.map((address) => (\n            <AddressEntity\n              key={ address.hash }\n              address={ address }\n              isLoading={ isLoading }\n              fontWeight=\"600\"\n              py=\"2px\"\n            />\n          )) }\n        </VStack>\n      </Td>\n      <Td>\n        <VStack spacing={ 2 } alignItems=\"baseline\">\n          { item.tags.split(';').map((tag) => <Tag key={ tag } isLoading={ isLoading } isTruncated>{ tag }</Tag>) }\n        </VStack>\n      </Td>\n      <Td>\n        <Skeleton fontSize=\"sm\" fontWeight=\"500\" py=\"2px\" isLoaded={ !isLoading } display=\"inline-block\">\n          Submitted\n        </Skeleton>\n      </Td>\n      <Td>\n        <Box py=\"2px\">\n          <TableItemActionButtons onDeleteClick={ onItemDeleteClick } onEditClick={ onItemEditClick } isLoading={ isLoading }/>\n        </Box>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default React.memo(PublicTagTableItem);\n","import {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { PublicTags, PublicTag } from 'types/api/account';\n\nimport PublicTagTableItem from './PublicTagTableItem';\n\ninterface Props {\n  data?: PublicTags;\n  isLoading?: boolean;\n  onEditClick: (data: PublicTag) => void;\n  onDeleteClick: (data: PublicTag) => void;\n}\n\nconst PublicTagTable = ({ data, isLoading, onEditClick, onDeleteClick }: Props) => {\n  return (\n    <Table variant=\"simple\" minWidth=\"600px\">\n      <Thead>\n        <Tr>\n          <Th width=\"50%\">Smart contract / Address (0x...)</Th>\n          <Th width=\"25%\">Public tag</Th>\n          <Th width=\"25%\">Request status</Th>\n          <Th width=\"108px\"></Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        { data?.map((item, index) => (\n          <PublicTagTableItem\n            key={ item.id + (isLoading ? String(index) : '') }\n            item={ item }\n            isLoading={ isLoading }\n            onDeleteClick={ onDeleteClick }\n            onEditClick={ onEditClick }\n          />\n        )) }\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default PublicTagTable;\n","import { Box, Button, Skeleton, useDisclosure } from '@chakra-ui/react';\nimport React, { useCallback, useState } from 'react';\n\nimport type { PublicTag } from 'types/api/account';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { PUBLIC_TAG } from 'stubs/account';\nimport PublicTagListItem from 'ui/publicTags/PublicTagTable/PublicTagListItem';\nimport AccountPageDescription from 'ui/shared/AccountPageDescription';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\n\nimport DeletePublicTagModal from './DeletePublicTagModal';\nimport PublicTagTable from './PublicTagTable/PublicTagTable';\n\ntype Props = {\n  changeToFormScreen: (data?: PublicTag) => void;\n  onTagDelete: () => void;\n}\n\nconst PublicTagsData = ({ changeToFormScreen, onTagDelete }: Props) => {\n  const deleteModalProps = useDisclosure();\n  const [ deleteModalData, setDeleteModalData ] = useState<PublicTag>();\n\n  const { data, isPlaceholderData, isError } = useApiQuery('public_tags', {\n    queryOptions: {\n      placeholderData: Array(3).fill(PUBLIC_TAG),\n    },\n  });\n\n  const onDeleteModalClose = useCallback(() => {\n    setDeleteModalData(undefined);\n    deleteModalProps.onClose();\n  }, [ deleteModalProps ]);\n\n  const changeToForm = useCallback(() => {\n    changeToFormScreen();\n  }, [ changeToFormScreen ]);\n\n  const onItemEditClick = useCallback((item: PublicTag) => {\n    changeToFormScreen(item);\n  }, [ changeToFormScreen ]);\n\n  const onItemDeleteClick = useCallback((item: PublicTag) => {\n    setDeleteModalData(item);\n    deleteModalProps.onOpen();\n  }, [ deleteModalProps ]);\n\n  const description = (\n    <AccountPageDescription>\n      You can request a public category tag which is displayed to all Blockscout users.\n      Public tags may be added to contract or external addresses, and any associated transactions will inherit that tag.\n      Clicking a tag opens a page with related information and helps provide context and data organization.\n      Requests are sent to a moderator for review and approval. This process can take several days.\n    </AccountPageDescription>\n  );\n\n  if (isError) {\n    return <DataFetchAlert/>;\n  }\n\n  const list = (\n    <>\n      <Box display={{ base: 'block', lg: 'none' }}>\n        { data?.map((item, index) => (\n          <PublicTagListItem\n            key={ item.id + (isPlaceholderData ? String(index) : '') }\n            item={ item }\n            isLoading={ isPlaceholderData }\n            onDeleteClick={ onItemDeleteClick }\n            onEditClick={ onItemEditClick }\n          />\n        )) }\n      </Box>\n      <Box display={{ base: 'none', lg: 'block' }}>\n        <PublicTagTable data={ data } isLoading={ isPlaceholderData } onEditClick={ onItemEditClick } onDeleteClick={ onItemDeleteClick }/>\n      </Box>\n    </>\n  );\n\n  return (\n    <>\n      { description }\n      { Boolean(data?.length) && list }\n      <Skeleton mt={ 8 } isLoaded={ !isPlaceholderData } display=\"inline-block\">\n        <Button\n          size=\"lg\"\n          onClick={ changeToForm }\n        >\n            Request to add public tag\n        </Button>\n      </Skeleton>\n      { deleteModalData && (\n        <DeletePublicTagModal\n          { ...deleteModalProps }\n          onClose={ onDeleteModalClose }\n          data={ deleteModalData }\n          onDeleteSuccess={ onTagDelete }\n        />\n      ) }\n    </>\n  );\n};\n\nexport default PublicTagsData;\n","import { RadioGroup, Radio, Stack } from '@chakra-ui/react';\nimport React, { useCallback } from 'react';\nimport type { ControllerRenderProps, Control } from 'react-hook-form';\nimport { Controller } from 'react-hook-form';\n\nimport type { Inputs } from './PublicTagsForm';\n\ninterface Props {\n  control: Control<Inputs>;\n  isDisabled?: boolean;\n}\n\nexport default function PublicTagFormAction({ control, isDisabled }: Props) {\n  const renderRadioGroup = useCallback(({ field }: {field: ControllerRenderProps<Inputs, 'action'>}) => {\n    return (\n      <RadioGroup defaultValue=\"add\" colorScheme=\"blue\" { ...field }>\n        <Stack spacing={ 5 }>\n          <Radio value=\"add\">\n            I want to add tags for my project\n          </Radio>\n          <Radio value=\"report\" isDisabled={ isDisabled }>\n            I want to report an incorrect public tag\n          </Radio>\n        </Stack>\n      </RadioGroup>\n    );\n  }, [ isDisabled ]);\n\n  return (\n    <Controller\n      name=\"action\"\n      control={ control }\n      render={ renderRadioGroup }\n    />\n  );\n}\n","import type { InputProps } from '@chakra-ui/react';\nimport { IconButton, Flex } from '@chakra-ui/react';\nimport React, { useCallback } from 'react';\nimport type { ControllerRenderProps, Control, FieldError } from 'react-hook-form';\nimport { Controller } from 'react-hook-form';\n\nimport { ADDRESS_REGEXP } from 'lib/validations/address';\nimport AddressInput from 'ui/shared/AddressInput';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport type { Inputs } from './PublicTagsForm';\n\ninterface Props {\n  control: Control<Inputs>;\n  index: number;\n  fieldsLength: number;\n  error?: FieldError;\n  onAddFieldClick: (e: React.SyntheticEvent) => void;\n  onRemoveFieldClick: (index: number) => (e: React.SyntheticEvent) => void;\n  size?: InputProps['size'];\n}\n\nconst MAX_INPUTS_NUM = 10;\n\nexport default function PublicTagFormAction({ control, index, fieldsLength, error, onAddFieldClick, onRemoveFieldClick, size }: Props) {\n  const renderAddressInput = useCallback(({ field }: {field: ControllerRenderProps<Inputs, `addresses.${ number }.address`>}) => {\n    return (\n      <AddressInput<Inputs, `addresses.${ number }.address`>\n        field={ field }\n        error={ error }\n        size={ size }\n        placeholder=\"Smart contract / Address (0x...)\"\n      />\n    );\n  }, [ error, size ]);\n\n  return (\n    <Flex flexDir=\"column\" rowGap={ 5 } alignItems=\"flex-end\">\n      <Controller\n        name={ `addresses.${ index }.address` }\n        control={ control }\n        render={ renderAddressInput }\n        rules={{\n          pattern: ADDRESS_REGEXP,\n          required: index === 0,\n        }}\n      />\n      <Flex\n        columnGap={ 5 }\n        position={{ base: 'static', lg: 'absolute' }}\n        left={{ base: 'auto', lg: 'calc(100% + 20px)' }}\n        h=\"100%\"\n        alignItems=\"center\"\n      >\n        { fieldsLength > 1 && (\n          <IconButton\n            aria-label=\"delete\"\n            variant=\"outline\"\n            w=\"30px\"\n            h=\"30px\"\n            onClick={ onRemoveFieldClick(index) }\n            icon={ <IconSvg name=\"minus\" w=\"20px\" h=\"20px\"/> }\n          />\n        ) }\n        { index === fieldsLength - 1 && fieldsLength < MAX_INPUTS_NUM && (\n          <IconButton\n            aria-label=\"add\"\n            variant=\"outline\"\n            w=\"30px\"\n            h=\"30px\"\n            onClick={ onAddFieldClick }\n            icon={ <IconSvg name=\"plus\" w=\"20px\" h=\"20px\"/> }\n          />\n        ) }\n      </Flex>\n    </Flex>\n  );\n}\n","import type { InputProps } from '@chakra-ui/react';\nimport { FormControl, Textarea } from '@chakra-ui/react';\nimport React, { useCallback } from 'react';\nimport type { ControllerRenderProps, Control, FieldError } from 'react-hook-form';\nimport { Controller } from 'react-hook-form';\n\nimport InputPlaceholder from 'ui/shared/InputPlaceholder';\n\nimport type { Inputs } from './PublicTagsForm';\n\nconst TEXT_INPUT_MAX_LENGTH = 255;\n\ninterface Props {\n  control: Control<Inputs>;\n  error?: FieldError;\n  size?: InputProps['size'];\n}\n\nexport default function PublicTagFormComment({ control, error, size }: Props) {\n  const renderComment = useCallback(({ field }: {field: ControllerRenderProps<Inputs, 'comment'>}) => {\n    return (\n      <FormControl variant=\"floating\" id={ field.name } size={ size } isRequired>\n        <Textarea\n          { ...field }\n          isInvalid={ Boolean(error) }\n        />\n        <InputPlaceholder text=\"Specify the reason for adding tags and color preference(s)\" error={ error }/>\n      </FormControl>\n    );\n  }, [ error, size ]);\n\n  return (\n    <Controller\n      name=\"comment\"\n      control={ control }\n      render={ renderComment }\n      rules={{\n        maxLength: TEXT_INPUT_MAX_LENGTH,\n        required: true,\n      }}\n    />\n  );\n}\n","import type { InputProps } from '@chakra-ui/react';\nimport { FormControl, Input } from '@chakra-ui/react';\nimport React, { useCallback } from 'react';\nimport type { ControllerRenderProps, FieldError, FieldValues, Path, Control } from 'react-hook-form';\nimport { Controller } from 'react-hook-form';\n\nimport InputPlaceholder from 'ui/shared/InputPlaceholder';\n\nconst TEXT_INPUT_MAX_LENGTH = 255;\n\ninterface Props<TInputs extends FieldValues> {\n  fieldName: Path<TInputs>;\n  label: string;\n  required?: boolean;\n  control: Control<TInputs, object>;\n  pattern?: RegExp;\n  error?: FieldError;\n  size?: InputProps['size'];\n}\n\nexport default function PublicTagsFormInput<Inputs extends FieldValues>({\n  label,\n  control,\n  required,\n  fieldName,\n  pattern,\n  error,\n  size,\n}: Props<Inputs>) {\n  const renderInput = useCallback(({ field }: {field: ControllerRenderProps<Inputs, typeof fieldName>}) => {\n    return (\n      <FormControl variant=\"floating\" id={ field.name } isRequired={ required } size={ size }>\n        <Input\n          { ...field }\n          required={ required }\n          isInvalid={ Boolean(error) }\n          maxLength={ TEXT_INPUT_MAX_LENGTH }\n        />\n        <InputPlaceholder text={ label } error={ error }/>\n      </FormControl>\n    );\n  }, [ label, required, error, size ]);\n  return (\n    <Controller\n      name={ fieldName }\n      control={ control }\n      render={ renderInput }\n      rules={{ pattern, required }}\n    />\n  );\n}\n","import {\n  Button,\n  Box,\n  Grid,\n  GridItem,\n  Text,\n  HStack,\n  chakra,\n} from '@chakra-ui/react';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport React, { useCallback, useState } from 'react';\nimport type { FieldError, Path, SubmitHandler } from 'react-hook-form';\nimport { useForm, useFieldArray } from 'react-hook-form';\n\nimport type { PublicTags, PublicTag, PublicTagNew, PublicTagErrors } from 'types/api/account';\n\nimport type { ResourceErrorAccount } from 'lib/api/resources';\nimport { resourceKey } from 'lib/api/resources';\nimport useApiFetch from 'lib/api/useApiFetch';\nimport getErrorMessage from 'lib/getErrorMessage';\nimport { EMAIL_REGEXP } from 'lib/validations/email';\nimport FormSubmitAlert from 'ui/shared/FormSubmitAlert';\n\nimport PublicTagFormAction from './PublicTagFormAction';\nimport PublicTagFormAddressInput from './PublicTagFormAddressInput';\nimport PublicTagFormComment from './PublicTagFormComment';\nimport PublicTagsFormInput from './PublicTagsFormInput';\n\ntype Props = {\n  changeToDataScreen: (success?: boolean) => void;\n  data?: Partial<PublicTag>;\n}\n\nexport type Inputs = {\n  fullName?: string;\n  email?: string;\n  companyName?: string;\n  companyUrl?: string;\n  action: 'add' | 'report';\n  tags?: string;\n  addresses?: Array<{\n    name: string;\n    address: string;\n  }>;\n  comment?: string;\n}\n\nconst placeholders = {\n  fullName: 'Your name',\n  email: 'Email',\n  companyName: 'Company name',\n  companyUrl: 'Company website',\n  tags: 'Public tag (max 35 characters)',\n  comment: 'Specify the reason for adding tags and color preference(s).',\n} as Record<Path<Inputs>, string>;\n\nconst ADDRESS_INPUT_BUTTONS_WIDTH = 100;\n\nconst PublicTagsForm = ({ changeToDataScreen, data }: Props) => {\n  const queryClient = useQueryClient();\n  const apiFetch = useApiFetch();\n  const inputSize = { base: 'md', lg: 'lg' };\n\n  const { control, handleSubmit, formState: { errors, isDirty }, setError } = useForm<Inputs>({\n    defaultValues: {\n      fullName: data?.full_name || '',\n      email: data?.email || '',\n      companyName: data?.company || '',\n      companyUrl: data?.website || '',\n      tags: data?.tags?.split(';').map((tag) => tag).join('; ') || '',\n      addresses: data?.addresses?.map((address, index: number) => ({ name: `address.${ index }.address`, address })) ||\n        [ { name: 'address.0.address', address: '' } ],\n      comment: data?.additional_comment || '',\n      action: data?.is_owner === undefined || data?.is_owner ? 'add' : 'report',\n    },\n    mode: 'onTouched',\n  });\n\n  const { fields, append, remove } = useFieldArray({\n    name: 'addresses',\n    control,\n  });\n\n  const [ isAlertVisible, setAlertVisible ] = useState(false);\n\n  const onAddFieldClick = useCallback(() => append({ address: '', name: '' }), [ append ]);\n\n  const onRemoveFieldClick = useCallback((index: number) => () => remove(index), [ remove ]);\n\n  const updatePublicTag = (formData: Inputs) => {\n    const body: PublicTagNew = {\n      full_name: formData.fullName || '',\n      email: formData.email || '',\n      company: formData.companyName || '',\n      website: formData.companyUrl || '',\n      is_owner: formData.action === 'add',\n      addresses: formData.addresses?.map(({ address }) => address) || [],\n      tags: formData.tags?.split(';').map((s) => s.trim()).join(';') || '',\n      additional_comment: formData.comment || '',\n    };\n\n    if (!data?.id) {\n      return apiFetch('public_tags', { fetchParams: { method: 'POST', body } });\n    }\n\n    return apiFetch('public_tags', {\n      pathParams: { id: String(data.id) },\n      fetchParams: { method: 'PUT', body },\n    });\n  };\n\n  const mutation = useMutation({\n    mutationFn: updatePublicTag,\n    onSuccess: async(data) => {\n      const response = data as unknown as PublicTag;\n\n      queryClient.setQueryData([ resourceKey('public_tags') ], (prevData: PublicTags | undefined) => {\n        const isExisting = prevData && prevData.some((item) => item.id === response.id);\n\n        if (isExisting) {\n          return prevData.map((item) => {\n            if (item.id === response.id) {\n              return response;\n            }\n\n            return item;\n          });\n        }\n\n        return [ response, ...(prevData || []) ];\n      });\n\n      changeToDataScreen(true);\n    },\n    onError: (error: ResourceErrorAccount<PublicTagErrors>) => {\n      const errorMap = error.payload?.errors;\n      if (errorMap?.full_name || errorMap?.email || errorMap?.tags || errorMap?.addresses || errorMap?.additional_comment) {\n        errorMap?.full_name && setError('fullName', { type: 'custom', message: getErrorMessage(errorMap, 'full_name') });\n        errorMap?.email && setError('email', { type: 'custom', message: getErrorMessage(errorMap, 'email') });\n        errorMap?.tags && setError('tags', { type: 'custom', message: getErrorMessage(errorMap, 'tags') });\n        errorMap?.addresses && setError('addresses.0.address', { type: 'custom', message: getErrorMessage(errorMap, 'addresses') });\n        errorMap?.additional_comment && setError('comment', { type: 'custom', message: getErrorMessage(errorMap, 'additional_comment') });\n      } else {\n        setAlertVisible(true);\n      }\n    },\n  });\n\n  const onSubmit: SubmitHandler<Inputs> = useCallback((data) => {\n    setAlertVisible(false);\n    mutation.mutate(data);\n  }, [ mutation ]);\n\n  return (\n    <chakra.form\n      noValidate\n      width={{ base: 'auto', lg: `calc(100% - ${ ADDRESS_INPUT_BUTTONS_WIDTH }px)` }}\n      maxWidth=\"844px\"\n      onSubmit={ handleSubmit(onSubmit) }\n    >\n      { isAlertVisible && <Box mb={ 4 }><FormSubmitAlert/></Box> }\n      <Text size=\"sm\" variant=\"secondary\" paddingBottom={ 5 }>Company info</Text>\n      <Grid templateColumns={{ base: '1fr', lg: '1fr 1fr' }} rowGap={ 4 } columnGap={ 5 }>\n        <GridItem>\n          <PublicTagsFormInput<Inputs>\n            fieldName=\"fullName\"\n            control={ control }\n            label={ placeholders.fullName }\n            error={ errors.fullName }\n            required\n            size={ inputSize }\n          />\n        </GridItem>\n        <GridItem>\n          <PublicTagsFormInput<Inputs>\n            fieldName=\"companyName\"\n            control={ control }\n            label={ placeholders.companyName }\n            error={ errors.companyName }\n            size={ inputSize }\n          />\n        </GridItem>\n        <GridItem>\n          <PublicTagsFormInput<Inputs>\n            fieldName=\"email\"\n            control={ control }\n            label={ placeholders.email }\n            pattern={ EMAIL_REGEXP }\n            error={ errors.email }\n            required\n            size={ inputSize }\n          />\n        </GridItem>\n        <GridItem>\n          <PublicTagsFormInput<Inputs>\n            fieldName=\"companyUrl\"\n            control={ control }\n            label={ placeholders.companyUrl }\n            error={ errors?.companyUrl }\n            size={ inputSize }\n          />\n        </GridItem>\n      </Grid>\n      <Box marginTop={{ base: 5, lg: 8 }} marginBottom={{ base: 5, lg: 8 }}>\n        <PublicTagFormAction control={ control }/>\n      </Box>\n      <Text size=\"sm\" variant=\"secondary\" marginBottom={ 5 }>Public tags (2 tags maximum, please use &quot;;&quot; as a divider)</Text>\n      <Box marginBottom={ 4 }>\n        <PublicTagsFormInput<Inputs>\n          fieldName=\"tags\"\n          control={ control }\n          label={ placeholders.tags }\n          error={ errors.tags }\n          required\n          size={ inputSize }\n        />\n      </Box>\n      { fields.map((field, index) => {\n        return (\n          <Box position=\"relative\" key={ field.id } marginBottom={ 4 }>\n            <PublicTagFormAddressInput\n              control={ control }\n              error={ errors?.addresses?.[index]?.address as FieldError }\n              index={ index }\n              fieldsLength={ fields.length }\n              onAddFieldClick={ onAddFieldClick }\n              onRemoveFieldClick={ onRemoveFieldClick }\n              size={ inputSize }\n            />\n          </Box>\n        );\n      }) }\n      <Box marginBottom={ 8 }>\n        <PublicTagFormComment control={ control } error={ errors.comment } size={ inputSize }/>\n      </Box>\n      <HStack spacing={ 6 }>\n        <Button\n          size=\"lg\"\n          type=\"submit\"\n          isDisabled={ !isDirty }\n          isLoading={ mutation.isPending }\n        >\n          Send request\n        </Button>\n      </HStack>\n    </chakra.form>\n  );\n};\n\nexport default React.memo(PublicTagsForm);\n","import { useRouter } from 'next/router';\nimport React, { useCallback, useState } from 'react';\nimport { animateScroll } from 'react-scroll';\n\nimport type { PublicTag } from 'types/api/account';\n\nimport useRedirectForInvalidAuthToken from 'lib/hooks/useRedirectForInvalidAuthToken';\nimport useToast from 'lib/hooks/useToast';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport PublicTagsData from 'ui/publicTags/PublicTagsData';\nimport PublicTagsForm from 'ui/publicTags/PublicTagsForm/PublicTagsForm';\nimport PageTitle from 'ui/shared/Page/PageTitle';\n\ntype TScreen = 'data' | 'form';\n\ntype TToastAction = 'added' | 'removed';\n\nconst toastDescriptions = {\n  added: 'Your request sent to moderator. Waiting for...',\n  removed: 'Tags have been removed.',\n} as Record<TToastAction, string>;\n\nconst PublicTagsComponent: React.FC = () => {\n  const router = useRouter();\n  const addressHash = getQueryParamString(router.query.address);\n\n  const [ screen, setScreen ] = useState<TScreen>(addressHash ? 'form' : 'data');\n  const [ formData, setFormData ] = useState<Partial<PublicTag> | undefined>(addressHash ? { addresses: [ addressHash ] } : undefined);\n\n  const toast = useToast();\n  useRedirectForInvalidAuthToken();\n\n  React.useEffect(() => {\n    addressHash && router.replace({ pathname: '/account/public-tags-request' });\n  // componentDidMount\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ ]);\n\n  const showToast = useCallback((action: TToastAction) => {\n    toast({\n      position: 'top-right',\n      title: 'Success',\n      description: toastDescriptions[action],\n      colorScheme: 'green',\n      status: 'success',\n      variant: 'subtle',\n      isClosable: true,\n      icon: null,\n    });\n  }, [ toast ]);\n\n  const changeToFormScreen = useCallback((data?: PublicTag) => {\n    setFormData(data);\n    setScreen('form');\n    animateScroll.scrollToTop({\n      duration: 500,\n      delay: 100,\n    });\n  }, []);\n\n  const changeToDataScreen = useCallback((success?: boolean) => {\n    if (success) {\n      showToast('added');\n    }\n    setScreen('data');\n    animateScroll.scrollToTop({\n      duration: 500,\n      delay: 100,\n    });\n  }, [ showToast ]);\n\n  const onTagDelete = useCallback(() => showToast('removed'), [ showToast ]);\n  const onGoBack = useCallback(() => setScreen('data'), [ ]);\n\n  let content;\n  let header;\n\n  if (screen === 'data') {\n    content = <PublicTagsData changeToFormScreen={ changeToFormScreen } onTagDelete={ onTagDelete }/>;\n    header = 'Public tags';\n  } else {\n    content = <PublicTagsForm changeToDataScreen={ changeToDataScreen } data={ formData }/>;\n    header = formData ? 'Request to edit a public tag/label' : 'Request a public tag/label';\n  }\n\n  const backLink = {\n    label: 'Public tags',\n    onClick: onGoBack,\n  };\n\n  return (\n    <>\n      <PageTitle\n        title={ header }\n        backLink={ screen === 'form' ? backLink : undefined }\n        display={{ base: 'block', lg: 'inline-flex' }}\n      />\n      { content }\n    </>\n  );\n};\n\nexport default PublicTagsComponent;\n","import { Box, useColorModeValue } from '@chakra-ui/react';\nimport _debounce from 'lodash/debounce';\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\n\nconst CUT_HEIGHT = 144;\n\nconst AccountPageDescription = ({ children, allowCut = true }: { children: React.ReactNode; allowCut?: boolean }) => {\n  const ref = useRef<HTMLParagraphElement>(null);\n\n  const [ needCut, setNeedCut ] = useState(false);\n  const [ expanded, setExpanded ] = useState(false);\n\n  const calculateCut = useCallback(() => {\n    const textHeight = ref.current?.offsetHeight;\n    if (!needCut && textHeight && textHeight > CUT_HEIGHT) {\n      setNeedCut(true);\n    } else if (needCut && textHeight && textHeight < CUT_HEIGHT) {\n      setNeedCut(false);\n    }\n  }, [ needCut ]);\n\n  useEffect(() => {\n    if (!allowCut) {\n      return;\n    }\n\n    calculateCut();\n    const resizeHandler = _debounce(calculateCut, 300);\n    window.addEventListener('resize', resizeHandler);\n    return function cleanup() {\n      window.removeEventListener('resize', resizeHandler);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ ]);\n\n  const expand = useCallback(() => {\n    setExpanded(true);\n  }, []);\n\n  const gradient = useColorModeValue(\n    'linear-gradient(360deg, rgba(255, 255, 255, 0.8) 38.1%, rgba(255, 255, 255, 0) 166.67%)',\n    'linear-gradient(360deg, rgba(16, 17, 18, 0.8) 38.1%, rgba(16, 17, 18, 0) 166.67%)',\n  );\n\n  return (\n    <Box position=\"relative\" marginBottom={{ base: 6, lg: 8 }}>\n      <Box\n        ref={ ref }\n        maxHeight={ needCut && !expanded ? `${ CUT_HEIGHT }px` : 'auto' }\n        overflow=\"hidden\"\n        style={ needCut && !expanded ? { WebkitLineClamp: '6', WebkitBoxOrient: 'vertical', display: '-webkit-box' } : {} }\n      >\n        { children }\n      </Box>\n      { needCut && !expanded && (\n        <Box\n          position=\"absolute\"\n          bottom=\"-16px\"\n          left={ 0 }\n          width=\"100%\"\n          height=\"63px\"\n          style={{ background: gradient }}\n          onClick={ expand }\n        >\n        </Box>\n      ) }\n    </Box>\n  );\n};\n\nexport default AccountPageDescription;\n","import type { InputProps } from '@chakra-ui/react';\nimport {\n  Input,\n  FormControl,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps, FieldError, FieldValues, Path } from 'react-hook-form';\n\nimport { ADDRESS_LENGTH } from 'lib/validations/address';\nimport InputPlaceholder from 'ui/shared/InputPlaceholder';\n\ntype Props<TInputs extends FieldValues, TInputName extends Path<TInputs>> = {\n  field: ControllerRenderProps<TInputs, TInputName>;\n  size?: InputProps['size'];\n  placeholder?: string;\n  backgroundColor?: string;\n  error?: FieldError;\n}\n\nexport default function AddressInput<Inputs extends FieldValues, Name extends Path<Inputs>>(\n  {\n    error,\n    field,\n    size,\n    placeholder = 'Address (0x...)',\n    backgroundColor,\n  }: Props<Inputs, Name>) {\n  return (\n    <FormControl variant=\"floating\" id=\"address\" isRequired backgroundColor={ backgroundColor } size={ size }>\n      <Input\n        { ...field }\n        isInvalid={ Boolean(error) }\n        maxLength={ ADDRESS_LENGTH }\n      />\n      <InputPlaceholder text={ placeholder } error={ error }/>\n    </FormControl>\n  );\n}\n","import { Alert, AlertDescription, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nconst DataFetchAlert = ({ className }: { className?: string }) => {\n  return (\n    <Alert status=\"warning\" width=\"fit-content\" className={ className }>\n      <AlertDescription>\n        Something went wrong. Try refreshing the page or come back later.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\nexport default chakra(DataFetchAlert);\n","import {\n  Box,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/react';\nimport { useMutation } from '@tanstack/react-query';\nimport React, { useCallback, useState } from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport FormSubmitAlert from 'ui/shared/FormSubmitAlert';\n\ntype Props = {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  renderContent: () => JSX.Element;\n  mutationFn: () => Promise<unknown>;\n  onSuccess: () => Promise<void>;\n}\n\nconst DeleteModal: React.FC<Props> = ({\n  isOpen,\n  onClose,\n  title,\n  renderContent,\n  mutationFn,\n  onSuccess,\n}) => {\n  const [ isAlertVisible, setAlertVisible ] = useState(false);\n\n  const onModalClose = useCallback(() => {\n    setAlertVisible(false);\n    onClose();\n  }, [ onClose, setAlertVisible ]);\n\n  const mutation = useMutation({\n    mutationFn,\n    onSuccess: async() => {\n      onSuccess();\n      onClose();\n    },\n    onError: () => {\n      setAlertVisible(true);\n    },\n  });\n\n  const onDeleteClick = useCallback(() => {\n    setAlertVisible(false);\n    mutation.mutate();\n  }, [ setAlertVisible, mutation ]);\n\n  const isMobile = useIsMobile();\n\n  return (\n    <Modal isOpen={ isOpen } onClose={ onModalClose } size={ isMobile ? 'full' : 'md' }>\n      <ModalOverlay/>\n      <ModalContent>\n        <ModalHeader fontWeight=\"500\" textStyle=\"h3\">{ title }</ModalHeader>\n        <ModalCloseButton/>\n        <ModalBody>\n          { isAlertVisible && <Box mb={ 4 }><FormSubmitAlert/></Box> }\n          { renderContent() }\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            size=\"lg\"\n            onClick={ onDeleteClick }\n            isLoading={ mutation.isPending }\n            // FIXME: chackra's button is disabled when isLoading\n            isDisabled={ false }\n          >\n              Delete\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default DeleteModal;\n","import { Alert, AlertDescription } from '@chakra-ui/react';\nimport React from 'react';\n\nconst FormSubmitAlert = () => {\n  return (\n    <Alert status=\"error\">\n      <AlertDescription>\n        There has been an error processing your request\n      </AlertDescription>\n    </Alert>\n  );\n};\n\nexport default FormSubmitAlert;\n","import { FormLabel, chakra } from '@chakra-ui/react';\nimport React from 'react';\nimport type { FieldError } from 'react-hook-form';\n\ninterface Props {\n  text: string;\n  icon?: React.ReactNode;\n  error?: Partial<FieldError>;\n  className?: string;\n  isFancy?: boolean;\n  isInModal?: boolean;\n}\n\nconst InputPlaceholder = ({ text, icon, error, className, isFancy, isInModal }: Props) => {\n  let errorMessage = error?.message;\n\n  if (!errorMessage && error?.type === 'pattern') {\n    errorMessage = 'Invalid format';\n  }\n\n  return (\n    <FormLabel\n      className={ className }\n      alignItems=\"center\"\n      { ...(isFancy ? { 'data-fancy': true } : {}) }\n      { ...(isInModal ? { 'data-in-modal': true } : {}) }\n    >\n      { icon }\n      <chakra.span>{ text }</chakra.span>\n      { errorMessage && <chakra.span order={ 3 } whiteSpace=\"pre\"> - { errorMessage }</chakra.span> }\n    </FormLabel>\n  );\n};\n\nexport default chakra(InputPlaceholder);\n","import { Flex, chakra } from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  isAnimated?: boolean;\n}\n\nconst ListItemMobile = ({ children, className, isAnimated }: Props) => {\n  return (\n    <Flex\n      as={ motion.div }\n      initial={ isAnimated ? { opacity: 0, scale: 0.97 } : { opacity: 1, scale: 1 } }\n      animate={{ opacity: 1, scale: 1 }}\n      transitionDuration=\"normal\"\n      transitionTimingFunction=\"linear\"\n      rowGap={ 6 }\n      alignItems=\"flex-start\"\n      flexDirection=\"column\"\n      paddingY={ 6 }\n      borderColor=\"divider\"\n      borderTopWidth=\"1px\"\n      _last={{\n        borderBottomWidth: '1px',\n      }}\n      className={ className }\n      fontSize=\"16px\"\n      lineHeight=\"20px\"\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ListItemMobile);\n","import { Heading, Flex, Tooltip, Link, chakra, Skeleton, useDisclosure } from '@chakra-ui/react';\nimport _debounce from 'lodash/debounce';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport TextAd from 'ui/shared/ad/TextAd';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/LinkInternal';\n\ntype BackLinkProp = { label: string; url: string } | { label: string; onClick: () => void };\n\ntype Props = {\n  title: string;\n  className?: string;\n  backLink?: BackLinkProp;\n  beforeTitle?: React.ReactNode;\n  afterTitle?: React.ReactNode;\n  contentAfter?: React.ReactNode;\n  secondRow?: React.ReactNode;\n  isLoading?: boolean;\n  withTextAd?: boolean;\n}\n\nconst TEXT_MAX_LINES = 1;\n\nconst BackLink = (props: BackLinkProp & { isLoading?: boolean }) => {\n  if (!props) {\n    return null;\n  }\n\n  if (props.isLoading) {\n    return <Skeleton boxSize={ 6 } display=\"inline-block\" borderRadius=\"base\" mr={ 3 } my={ 2 } verticalAlign=\"text-bottom\" isLoaded={ !props.isLoading }/>;\n  }\n\n  const icon = <IconSvg name=\"arrows/east\" boxSize={ 6 } transform=\"rotate(180deg)\" margin=\"auto\" color=\"gray.400\"/>;\n\n  if ('url' in props) {\n    return (\n      <Tooltip label={ props.label }>\n        <LinkInternal display=\"inline-flex\" href={ props.url } h=\"40px\" mr={ 3 }>\n          { icon }\n        </LinkInternal>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip label={ props.label }>\n      <Link display=\"inline-flex\" onClick={ props.onClick } h=\"40px\" mr={ 3 }>\n        { icon }\n      </Link>\n    </Tooltip>\n  );\n};\n\nconst PageTitle = ({ title, contentAfter, withTextAd, backLink, className, isLoading, afterTitle, beforeTitle, secondRow }: Props) => {\n  const tooltip = useDisclosure();\n  const isMobile = useIsMobile();\n  const [ isTextTruncated, setIsTextTruncated ] = React.useState(false);\n\n  const headingRef = React.useRef<HTMLHeadingElement>(null);\n  const textRef = React.useRef<HTMLSpanElement>(null);\n\n  const updatedTruncateState = React.useCallback(() => {\n    if (!headingRef.current || !textRef.current) {\n      return;\n    }\n\n    const headingRect = headingRef.current.getBoundingClientRect();\n    const textRect = textRef.current.getBoundingClientRect();\n    if ((TEXT_MAX_LINES + 1) * headingRect.height <= textRect.height) {\n      setIsTextTruncated(true);\n    } else {\n      setIsTextTruncated(false);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!isLoading) {\n      updatedTruncateState();\n    }\n  }, [ isLoading, updatedTruncateState ]);\n\n  React.useEffect(() => {\n    const handleResize = _debounce(updatedTruncateState, 1000);\n    window.addEventListener('resize', handleResize);\n\n    return function cleanup() {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [ updatedTruncateState ]);\n\n  return (\n    <Flex className={ className } flexDir=\"column\" rowGap={ 3 } mb={ 6 }>\n      <Flex\n        flexDir=\"row\"\n        flexWrap=\"wrap\"\n        rowGap={ 3 }\n        columnGap={ 3 }\n        alignItems=\"center\"\n      >\n        <Flex h={{ base: 'auto', lg: isLoading ? 10 : 'auto' }} maxW=\"100%\" alignItems=\"center\">\n          { backLink && <BackLink { ...backLink } isLoading={ isLoading }/> }\n          { beforeTitle }\n          <Skeleton\n            isLoaded={ !isLoading }\n            overflow=\"hidden\"\n          >\n            <Tooltip\n              label={ title }\n              isOpen={ tooltip.isOpen }\n              onClose={ tooltip.onClose }\n              maxW={{ base: 'calc(100vw - 32px)', lg: '500px' }}\n              closeOnScroll={ isMobile ? true : false }\n              isDisabled={ !isTextTruncated }\n            >\n              <Heading\n                ref={ headingRef }\n                as=\"h1\"\n                size=\"lg\"\n                whiteSpace=\"normal\"\n                wordBreak=\"break-all\"\n                style={{\n                  WebkitLineClamp: TEXT_MAX_LINES,\n                  WebkitBoxOrient: 'vertical',\n                  display: '-webkit-box',\n                }}\n                overflow=\"hidden\"\n                textOverflow=\"ellipsis\"\n                onMouseEnter={ tooltip.onOpen }\n                onMouseLeave={ tooltip.onClose }\n                onClick={ isMobile ? tooltip.onToggle : undefined }\n              >\n                <span ref={ textRef }>\n                  { title }\n                </span>\n              </Heading>\n            </Tooltip>\n          </Skeleton>\n          { afterTitle }\n        </Flex>\n        { contentAfter }\n        { withTextAd && <TextAd order={{ base: -1, lg: 100 }} mb={{ base: 6, lg: 0 }} ml=\"auto\" w={{ base: '100%', lg: 'auto' }}/> }\n      </Flex>\n      { secondRow && (\n        <Flex alignItems=\"center\" minH={ 10 } overflow=\"hidden\">\n          { secondRow }\n        </Flex>\n      ) }\n    </Flex>\n  );\n};\n\nexport default chakra(PageTitle);\n","import { Tooltip, IconButton, HStack, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport usePreventFocusAfterModalClosing from 'lib/hooks/usePreventFocusAfterModalClosing';\nimport IconSvg from 'ui/shared/IconSvg';\n\ntype Props = {\n  onEditClick: () => void;\n  onDeleteClick: () => void;\n  isLoading?: boolean;\n}\n\nconst TableItemActionButtons = ({ onEditClick, onDeleteClick, isLoading }: Props) => {\n  const onFocusCapture = usePreventFocusAfterModalClosing();\n\n  if (isLoading) {\n    return (\n      <HStack spacing={ 6 } alignSelf=\"flex-end\">\n        <Skeleton boxSize={ 5 } flexShrink={ 0 } borderRadius=\"sm\"/>\n        <Skeleton boxSize={ 5 } flexShrink={ 0 } borderRadius=\"sm\"/>\n      </HStack>\n    );\n  }\n\n  return (\n    <HStack spacing={ 6 } alignSelf=\"flex-end\">\n      <Tooltip label=\"Edit\">\n        <IconButton\n          aria-label=\"edit\"\n          variant=\"simple\"\n          boxSize={ 5 }\n          onClick={ onEditClick }\n          icon={ <IconSvg name=\"edit\" boxSize={ 5 }/> }\n          onFocusCapture={ onFocusCapture }\n          display=\"inline-block\"\n          flexShrink={ 0 }\n          borderRadius=\"none\"\n        />\n      </Tooltip>\n      <Tooltip label=\"Delete\">\n        <IconButton\n          aria-label=\"delete\"\n          variant=\"simple\"\n          boxSize={ 5 }\n          onClick={ onDeleteClick }\n          icon={ <IconSvg name=\"delete\" boxSize={ 5 }/> }\n          onFocusCapture={ onFocusCapture }\n          display=\"inline-block\"\n          flexShrink={ 0 }\n          borderRadius=\"none\"\n        />\n      </Tooltip>\n    </HStack>\n  );\n};\n\nexport default React.memo(TableItemActionButtons);\n","import { Skeleton, Tag as ChakraTag } from '@chakra-ui/react';\nimport type { TagProps } from '@chakra-ui/react';\nimport React from 'react';\n\nimport TruncatedTextTooltip from 'ui/shared/TruncatedTextTooltip';\n\ninterface Props extends TagProps {\n  isLoading?: boolean;\n}\n\nconst Tag = ({ isLoading, ...props }: Props, ref: React.ForwardedRef<HTMLDivElement>) => {\n\n  if (props.isTruncated && typeof props.children === 'string') {\n    if (!props.children) {\n      return null;\n    }\n\n    return (\n      <Skeleton isLoaded={ !isLoading } display=\"inline-block\" borderRadius=\"sm\" maxW=\"100%\">\n        <TruncatedTextTooltip label={ props.children }>\n          <ChakraTag { ...props } ref={ ref }/>\n        </TruncatedTextTooltip>\n      </Skeleton>\n    );\n  }\n  return (\n    <Skeleton isLoaded={ !isLoading } display=\"inline-block\" borderRadius=\"sm\" maxW=\"100%\">\n      <ChakraTag { ...props } ref={ ref }/>\n    </Skeleton>\n  );\n};\n\nexport default React.memo(React.forwardRef(Tag));\n","import {\n  useModalStyles\n} from \"./chunk-LBED2F7B.mjs\";\n\n// src/modal-footer.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalFooter = forwardRef(\n  (props, ref) => {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-modal__footer\", className);\n    const styles = useModalStyles();\n    const footerStyles = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      ...styles.footer\n    };\n    return /* @__PURE__ */ jsx(\n      chakra.footer,\n      {\n        ref,\n        ...rest,\n        __css: footerStyles,\n        className: _className\n      }\n    );\n  }\n);\nModalFooter.displayName = \"ModalFooter\";\n\nexport {\n  ModalFooter\n};\n","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.#currentResult = void 0;\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  #client;\n  #currentResult;\n  #currentMutation;\n  #mutateOptions;\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    this.#currentMutation?.setOptions(this.options);\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(\n            action.data,\n            this.#currentResult.variables,\n            this.#currentResult.context\n          );\n          this.#mutateOptions.onSettled?.(\n            action.data,\n            null,\n            this.#currentResult.variables,\n            this.#currentResult.context\n          );\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(\n            action.error,\n            this.#currentResult.variables,\n            this.#currentResult.context\n          );\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            this.#currentResult.variables,\n            this.#currentResult.context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport { MutationObserver, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { shouldThrowError } from \"./utils.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nfunction noop() {\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map"],"names":["getErrorMessage","error","field","join","usePreventFocusAfterModalClosing","React","e","stopPropagation","useRedirectForInvalidAuthToken","state","queryClient","useQueryClient","getQueryState","resourceKey","errorStatus","status","loginUrl","useLoginUrl","apiToken","cookies","API_TOKEN","Sentry","tags","source","window","location","assign","EMAIL_REGEXP","validator","test","value","PRIVATE_TAG_ADDRESS","address","ADDRESS_PARAMS","address_hash","ADDRESS_HASH","id","name","PRIVATE_TAG_TX","transaction_hash","TX_HASH","PUBLIC_TAG","additional_comment","addresses","addresses_with_info","company","email","full_name","is_owner","website","WATCH_LIST_ITEM_WITH_TOKEN_INFO","address_balance","exchange_rate","notification_methods","notification_settings","incoming","outcoming","tokens_count","tokens_fiat_value","tokens_overflow","API_KEY","api_key","CUSTOM_ABI","abi","constant","payable","inputs","type","outputs","stateMutability","contract_address","contract_address_hash","VERIFIED_ADDRESS","userId","chainId","contractAddress","verifiedDate","metadata","tokenName","tokenSymbol","TOKEN_INFO_APPLICATION","tokenAddress","updatedAt","requesterName","requesterEmail","projectWebsite","projectEmail","iconUrl","projectDescription","projectSector","hash","implementation_name","is_contract","is_verified","private_tags","public_tags","watchlist_names","ens_domain_name","TX","timestamp","fee","gas_limit","block","method","confirmations","to","tx_burnt_fee","max_fee_per_gas","result","gas_price","priority_fee","base_fee_per_gas","from","token_transfers","tx_types","gas_used","created_contract","position","nonce","has_error_in_internal_txs","actions","decoded_input","token_transfers_overflow","raw_input","max_priority_fee_per_gas","revert_reason","confirmation_duration","tx_tag","TX_ZKEVM_L2","zkevm_batch_number","zkevm_sequence_hash","zkevm_status","zkevm_verify_hash","TX_RAW_TRACE","PublicTagTable_PublicTagListItem","item","isLoading","onEditClick","onDeleteClick","param","onItemEditClick","useCallback","onItemDeleteClick","jsx_runtime","jsxs","ListItemMobile","VStack","spacing","alignItems","maxW","jsx","map","AddressEntity","fontWeight","w","HStack","Text","fontSize","split","Tag","isTruncated","tag","Skeleton","color","isLoaded","display","span","TableItemActionButtons","publicTags_DeletePublicTagModal","isOpen","onClose","data","onDeleteSuccess","reason","setReason","useState","apiFetch","useApiFetch","formBackgroundColor","useColorModeValue","deleteApiKey","pathParams","String","fetchParams","body","remove_reason","onSuccess","setQueryData","prevData","filter","onFieldChange","event","currentTarget","renderContent","text","length","Fragment","as","whiteSpace","concat","tagsText","forEach","index","push","Box","marginBottom","FormControl","variant","backgroundColor","Textarea","size","onChange","FormLabel","DeleteModal","title","mutationFn","PublicTagTable_PublicTagTableItem","Tr","Td","py","PublicTagTable_PublicTagTable","Table","minWidth","Thead","Th","width","Tbody","PublicTagTableItem","publicTags_PublicTagsData","changeToFormScreen","onTagDelete","deleteModalProps","useDisclosure","deleteModalData","setDeleteModalData","isPlaceholderData","isError","useApiQuery","queryOptions","placeholderData","Array","fill","onDeleteModalClose","undefined","changeToForm","onOpen","description","AccountPageDescription","DataFetchAlert","list","base","lg","PublicTagListItem","PublicTagTable","Boolean","mt","Button","onClick","DeletePublicTagModal","PublicTagFormAction","control","isDisabled","renderRadioGroup","RadioGroup","defaultValue","colorScheme","Stack","Radio","Controller","render","fieldsLength","onAddFieldClick","onRemoveFieldClick","renderAddressInput","AddressInput","placeholder","Flex","flexDir","rowGap","rules","pattern","ADDRESS_REGEXP","required","columnGap","left","h","IconButton","aria-label","icon","IconSvg","PublicTagFormComment","renderComment","isRequired","isInvalid","InputPlaceholder","maxLength","PublicTagsFormInput","label","fieldName","renderInput","Input","PublicTagsForm_PublicTagsForm","changeToDataScreen","inputSize","handleSubmit","formState","errors","isDirty","setError","useForm","defaultValues","fullName","companyName","companyUrl","comment","action","mode","fields","append","remove","useFieldArray","isAlertVisible","setAlertVisible","mutation","useMutation","formData","s","trim","isExisting","some","response","onError","errorMap","payload","message","onSubmit","mutate","chakra","form","noValidate","maxWidth","mb","FormSubmitAlert","paddingBottom","Grid","templateColumns","GridItem","marginTop","PublicTagFormAddressInput","isPending","toastDescriptions","added","removed","PublicTags","content","header","router","useRouter","addressHash","getQueryParamString","query","screen","setScreen","setFormData","toast","useToast","replace","pathname","showToast","isClosable","animateScroll","scrollToTop","duration","delay","success","onGoBack","PublicTagsData","PublicTagsForm","PageTitle","backLink","__webpack_exports__","Z","children","allowCut","ref","useRef","needCut","setNeedCut","expanded","setExpanded","calculateCut","textHeight","current","offsetHeight","useEffect","resizeHandler","_debounce","addEventListener","removeEventListener","expand","gradient","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","maxHeight","overflow","style","WebkitLineClamp","WebkitBoxOrient","bottom","height","background","ADDRESS_LENGTH","className","Alert","AlertDescription","onModalClose","isMobile","useIsMobile","Modal","ModalOverlay","ModalContent","ModalHeader","textStyle","ModalCloseButton","ModalBody","ModalFooter","isFancy","isInModal","errorMessage","order","isAnimated","motion","div","initial","opacity","scale","animate","transitionDuration","transitionTimingFunction","flexDirection","paddingY","borderColor","borderTopWidth","_last","borderBottomWidth","lineHeight","BackLink","props","boxSize","borderRadius","mr","my","verticalAlign","transform","margin","Tooltip","LinkInternal","href","url","Link","contentAfter","withTextAd","afterTitle","beforeTitle","secondRow","tooltip","isTextTruncated","setIsTextTruncated","headingRef","textRef","updatedTruncateState","headingRect","getBoundingClientRect","textRect","TEXT_MAX_LINES","handleResize","flexWrap","closeOnScroll","Heading","wordBreak","textOverflow","onMouseEnter","onMouseLeave","onToggle","TextAd","ml","minH","onFocusCapture","alignSelf","flexShrink","TruncatedTextTooltip","ChakraTag","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__","G","rest","_className","_chakra_ui_shared_utils__WEBPACK_IMPORTED_MODULE_2__","cx","styles","_chunk_LBED2F7B_mjs__WEBPACK_IMPORTED_MODULE_3__","I_","footerStyles","justifyContent","footer","_chakra_ui_system__WEBPACK_IMPORTED_MODULE_4__","m","__css","displayName","MutationObserver","subscribable","l","constructor","client","options","currentResult","setOptions","bindMethods","updateResult","currentMutation","mutateOptions","bind","reset","prevOptions","defaultMutationOptions","utils","VS","getMutationCache","notify","observer","onUnsubscribe","hasListeners","removeObserver","onMutationUpdate","getCurrentResult","variables","build","addObserver","execute","R","isSuccess","isIdle","notifyManager","V","batch","context","onSettled","listeners","listener","QueryClientProvider","NL","react","useSyncExternalStore","subscribe","batchCalls","onStoreChange","catch","noop","modern_utils","L","throwOnError","mutateAsync"],"sourceRoot":""}