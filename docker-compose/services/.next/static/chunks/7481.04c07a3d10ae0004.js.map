{"version":3,"file":"static/chunks/7481.04c07a3d10ae0004.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@graphiql/react/dist/lint.es3.js","webpack://_N_E/<anon>"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { a as codemirror } from \"./codemirror.es.js\";\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function(e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function(k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(Object.defineProperty(n, Symbol.toStringTag, { value: \"Module\" }));\n}\n__name(_mergeNamespaces, \"_mergeNamespaces\");\nvar lint$2 = { exports: {} };\n(function(module, exports) {\n  (function(mod) {\n    mod(codemirror.exports);\n  })(function(CodeMirror) {\n    var GUTTER_ID = \"CodeMirror-lint-markers\";\n    var LINT_LINE_ID = \"CodeMirror-lint-line-\";\n    function showTooltip(cm, e, content) {\n      var tt = document.createElement(\"div\");\n      tt.className = \"CodeMirror-lint-tooltip cm-s-\" + cm.options.theme;\n      tt.appendChild(content.cloneNode(true));\n      if (cm.state.lint.options.selfContain)\n        cm.getWrapperElement().appendChild(tt);\n      else\n        document.body.appendChild(tt);\n      function position(e2) {\n        if (!tt.parentNode)\n          return CodeMirror.off(document, \"mousemove\", position);\n        tt.style.top = Math.max(0, e2.clientY - tt.offsetHeight - 5) + \"px\";\n        tt.style.left = e2.clientX + 5 + \"px\";\n      }\n      __name(position, \"position\");\n      CodeMirror.on(document, \"mousemove\", position);\n      position(e);\n      if (tt.style.opacity != null)\n        tt.style.opacity = 1;\n      return tt;\n    }\n    __name(showTooltip, \"showTooltip\");\n    function rm(elt) {\n      if (elt.parentNode)\n        elt.parentNode.removeChild(elt);\n    }\n    __name(rm, \"rm\");\n    function hideTooltip(tt) {\n      if (!tt.parentNode)\n        return;\n      if (tt.style.opacity == null)\n        rm(tt);\n      tt.style.opacity = 0;\n      setTimeout(function() {\n        rm(tt);\n      }, 600);\n    }\n    __name(hideTooltip, \"hideTooltip\");\n    function showTooltipFor(cm, e, content, node) {\n      var tooltip = showTooltip(cm, e, content);\n      function hide() {\n        CodeMirror.off(node, \"mouseout\", hide);\n        if (tooltip) {\n          hideTooltip(tooltip);\n          tooltip = null;\n        }\n      }\n      __name(hide, \"hide\");\n      var poll = setInterval(function() {\n        if (tooltip)\n          for (var n = node; ; n = n.parentNode) {\n            if (n && n.nodeType == 11)\n              n = n.host;\n            if (n == document.body)\n              return;\n            if (!n) {\n              hide();\n              break;\n            }\n          }\n        if (!tooltip)\n          return clearInterval(poll);\n      }, 400);\n      CodeMirror.on(node, \"mouseout\", hide);\n    }\n    __name(showTooltipFor, \"showTooltipFor\");\n    function LintState(cm, conf, hasGutter) {\n      this.marked = [];\n      if (conf instanceof Function)\n        conf = { getAnnotations: conf };\n      if (!conf || conf === true)\n        conf = {};\n      this.options = {};\n      this.linterOptions = conf.options || {};\n      for (var prop in defaults)\n        this.options[prop] = defaults[prop];\n      for (var prop in conf) {\n        if (defaults.hasOwnProperty(prop)) {\n          if (conf[prop] != null)\n            this.options[prop] = conf[prop];\n        } else if (!conf.options) {\n          this.linterOptions[prop] = conf[prop];\n        }\n      }\n      this.timeout = null;\n      this.hasGutter = hasGutter;\n      this.onMouseOver = function(e) {\n        onMouseOver(cm, e);\n      };\n      this.waitingFor = 0;\n    }\n    __name(LintState, \"LintState\");\n    var defaults = {\n      highlightLines: false,\n      tooltips: true,\n      delay: 500,\n      lintOnChange: true,\n      getAnnotations: null,\n      async: false,\n      selfContain: null,\n      formatAnnotation: null,\n      onUpdateLinting: null\n    };\n    function clearMarks(cm) {\n      var state = cm.state.lint;\n      if (state.hasGutter)\n        cm.clearGutter(GUTTER_ID);\n      if (state.options.highlightLines)\n        clearErrorLines(cm);\n      for (var i = 0; i < state.marked.length; ++i)\n        state.marked[i].clear();\n      state.marked.length = 0;\n    }\n    __name(clearMarks, \"clearMarks\");\n    function clearErrorLines(cm) {\n      cm.eachLine(function(line) {\n        var has = line.wrapClass && /\\bCodeMirror-lint-line-\\w+\\b/.exec(line.wrapClass);\n        if (has)\n          cm.removeLineClass(line, \"wrap\", has[0]);\n      });\n    }\n    __name(clearErrorLines, \"clearErrorLines\");\n    function makeMarker(cm, labels, severity, multiple, tooltips) {\n      var marker = document.createElement(\"div\"), inner = marker;\n      marker.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-\" + severity;\n      if (multiple) {\n        inner = marker.appendChild(document.createElement(\"div\"));\n        inner.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-multiple\";\n      }\n      if (tooltips != false)\n        CodeMirror.on(inner, \"mouseover\", function(e) {\n          showTooltipFor(cm, e, labels, inner);\n        });\n      return marker;\n    }\n    __name(makeMarker, \"makeMarker\");\n    function getMaxSeverity(a, b) {\n      if (a == \"error\")\n        return a;\n      else\n        return b;\n    }\n    __name(getMaxSeverity, \"getMaxSeverity\");\n    function groupByLine(annotations) {\n      var lines = [];\n      for (var i = 0; i < annotations.length; ++i) {\n        var ann = annotations[i], line = ann.from.line;\n        (lines[line] || (lines[line] = [])).push(ann);\n      }\n      return lines;\n    }\n    __name(groupByLine, \"groupByLine\");\n    function annotationTooltip(ann) {\n      var severity = ann.severity;\n      if (!severity)\n        severity = \"error\";\n      var tip = document.createElement(\"div\");\n      tip.className = \"CodeMirror-lint-message CodeMirror-lint-message-\" + severity;\n      if (typeof ann.messageHTML != \"undefined\") {\n        tip.innerHTML = ann.messageHTML;\n      } else {\n        tip.appendChild(document.createTextNode(ann.message));\n      }\n      return tip;\n    }\n    __name(annotationTooltip, \"annotationTooltip\");\n    function lintAsync(cm, getAnnotations) {\n      var state = cm.state.lint;\n      var id = ++state.waitingFor;\n      function abort() {\n        id = -1;\n        cm.off(\"change\", abort);\n      }\n      __name(abort, \"abort\");\n      cm.on(\"change\", abort);\n      getAnnotations(cm.getValue(), function(annotations, arg2) {\n        cm.off(\"change\", abort);\n        if (state.waitingFor != id)\n          return;\n        if (arg2 && annotations instanceof CodeMirror)\n          annotations = arg2;\n        cm.operation(function() {\n          updateLinting(cm, annotations);\n        });\n      }, state.linterOptions, cm);\n    }\n    __name(lintAsync, \"lintAsync\");\n    function startLinting(cm) {\n      var state = cm.state.lint;\n      if (!state)\n        return;\n      var options = state.options;\n      var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n      if (!getAnnotations)\n        return;\n      if (options.async || getAnnotations.async) {\n        lintAsync(cm, getAnnotations);\n      } else {\n        var annotations = getAnnotations(cm.getValue(), state.linterOptions, cm);\n        if (!annotations)\n          return;\n        if (annotations.then)\n          annotations.then(function(issues) {\n            cm.operation(function() {\n              updateLinting(cm, issues);\n            });\n          });\n        else\n          cm.operation(function() {\n            updateLinting(cm, annotations);\n          });\n      }\n    }\n    __name(startLinting, \"startLinting\");\n    function updateLinting(cm, annotationsNotSorted) {\n      var state = cm.state.lint;\n      if (!state)\n        return;\n      var options = state.options;\n      clearMarks(cm);\n      var annotations = groupByLine(annotationsNotSorted);\n      for (var line = 0; line < annotations.length; ++line) {\n        var anns = annotations[line];\n        if (!anns)\n          continue;\n        var message = [];\n        anns = anns.filter(function(item) {\n          return message.indexOf(item.message) > -1 ? false : message.push(item.message);\n        });\n        var maxSeverity = null;\n        var tipLabel = state.hasGutter && document.createDocumentFragment();\n        for (var i = 0; i < anns.length; ++i) {\n          var ann = anns[i];\n          var severity = ann.severity;\n          if (!severity)\n            severity = \"error\";\n          maxSeverity = getMaxSeverity(maxSeverity, severity);\n          if (options.formatAnnotation)\n            ann = options.formatAnnotation(ann);\n          if (state.hasGutter)\n            tipLabel.appendChild(annotationTooltip(ann));\n          if (ann.to)\n            state.marked.push(cm.markText(ann.from, ann.to, {\n              className: \"CodeMirror-lint-mark CodeMirror-lint-mark-\" + severity,\n              __annotation: ann\n            }));\n        }\n        if (state.hasGutter)\n          cm.setGutterMarker(line, GUTTER_ID, makeMarker(cm, tipLabel, maxSeverity, annotations[line].length > 1, options.tooltips));\n        if (options.highlightLines)\n          cm.addLineClass(line, \"wrap\", LINT_LINE_ID + maxSeverity);\n      }\n      if (options.onUpdateLinting)\n        options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n    }\n    __name(updateLinting, \"updateLinting\");\n    function onChange(cm) {\n      var state = cm.state.lint;\n      if (!state)\n        return;\n      clearTimeout(state.timeout);\n      state.timeout = setTimeout(function() {\n        startLinting(cm);\n      }, state.options.delay);\n    }\n    __name(onChange, \"onChange\");\n    function popupTooltips(cm, annotations, e) {\n      var target = e.target || e.srcElement;\n      var tooltip = document.createDocumentFragment();\n      for (var i = 0; i < annotations.length; i++) {\n        var ann = annotations[i];\n        tooltip.appendChild(annotationTooltip(ann));\n      }\n      showTooltipFor(cm, e, tooltip, target);\n    }\n    __name(popupTooltips, \"popupTooltips\");\n    function onMouseOver(cm, e) {\n      var target = e.target || e.srcElement;\n      if (!/\\bCodeMirror-lint-mark-/.test(target.className))\n        return;\n      var box = target.getBoundingClientRect(), x = (box.left + box.right) / 2, y = (box.top + box.bottom) / 2;\n      var spans = cm.findMarksAt(cm.coordsChar({ left: x, top: y }, \"client\"));\n      var annotations = [];\n      for (var i = 0; i < spans.length; ++i) {\n        var ann = spans[i].__annotation;\n        if (ann)\n          annotations.push(ann);\n      }\n      if (annotations.length)\n        popupTooltips(cm, annotations, e);\n    }\n    __name(onMouseOver, \"onMouseOver\");\n    CodeMirror.defineOption(\"lint\", false, function(cm, val, old) {\n      if (old && old != CodeMirror.Init) {\n        clearMarks(cm);\n        if (cm.state.lint.options.lintOnChange !== false)\n          cm.off(\"change\", onChange);\n        CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n        clearTimeout(cm.state.lint.timeout);\n        delete cm.state.lint;\n      }\n      if (val) {\n        var gutters = cm.getOption(\"gutters\"), hasLintGutter = false;\n        for (var i = 0; i < gutters.length; ++i)\n          if (gutters[i] == GUTTER_ID)\n            hasLintGutter = true;\n        var state = cm.state.lint = new LintState(cm, val, hasLintGutter);\n        if (state.options.lintOnChange)\n          cm.on(\"change\", onChange);\n        if (state.options.tooltips != false && state.options.tooltips != \"gutter\")\n          CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n        startLinting(cm);\n      }\n    });\n    CodeMirror.defineExtension(\"performLint\", function() {\n      startLinting(this);\n    });\n  });\n})();\nvar lint = lint$2.exports;\nvar lint$1 = /* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  \"default\": lint\n}, [lint$2.exports]);\nexport { lint$1 as l };\n"],"names":["__defProp","Object","defineProperty","__name","target","value","configurable","_mergeNamespaces","n","m","forEach","e","Array","isArray","keys","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","Symbol","toStringTag","lint$2","exports","mod","CodeMirror","GUTTER_ID","showTooltip","cm","content","tt","document","createElement","position","e2","parentNode","off","style","top","Math","max","clientY","offsetHeight","left","clientX","className","options","theme","appendChild","cloneNode","state","lint","selfContain","getWrapperElement","body","on","opacity","rm","elt","removeChild","hideTooltip","setTimeout","showTooltipFor","node","tooltip","hide","poll","setInterval","nodeType","host","clearInterval","LintState","conf","hasGutter","prop","marked","Function","getAnnotations","linterOptions","defaults","hasOwnProperty","timeout","onMouseOver","waitingFor","highlightLines","tooltips","delay","lintOnChange","async","formatAnnotation","onUpdateLinting","clearMarks","clearGutter","clearErrorLines","i","length","clear","eachLine","line","has","wrapClass","exec","removeLineClass","makeMarker","labels","severity","multiple","marker","inner","getMaxSeverity","a","b","groupByLine","annotations","lines","ann","from","push","annotationTooltip","tip","messageHTML","innerHTML","createTextNode","message","lintAsync","id","abort","getValue","arg2","operation","updateLinting","startLinting","getHelper","Pos","then","issues","annotationsNotSorted","anns","filter","item","indexOf","maxSeverity","tipLabel","createDocumentFragment","to","markText","__annotation","setGutterMarker","addLineClass","LINT_LINE_ID","onChange","clearTimeout","popupTooltips","srcElement","test","box","getBoundingClientRect","x","right","y","bottom","spans","findMarksAt","coordsChar","defineOption","val","old","Init","gutters","getOption","hasLintGutter","defineExtension","_codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__","lint$1","__proto__"],"sourceRoot":""}