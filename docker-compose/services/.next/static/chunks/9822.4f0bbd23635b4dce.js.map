{"version":3,"file":"static/chunks/9822.4f0bbd23635b4dce.js","mappings":"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","sources":["webpack://_N_E/./lib/hooks/useClientRect.tsx","webpack://_N_E/./ui/token/TokenDetails.tsx","webpack://_N_E/./ui/token/TokenInventoryItem.tsx","webpack://_N_E/./ui/token/TokenInventory.tsx","webpack://_N_E/./ui/token/TokenProjectInfo/DocsLink.tsx","webpack://_N_E/./ui/token/TokenProjectInfo/ServiceLink.tsx","webpack://_N_E/./ui/token/TokenProjectInfo/SupportLink.tsx","webpack://_N_E/./ui/token/TokenProjectInfo/Content.tsx","webpack://_N_E/./ui/token/TokenProjectInfo/TriggerButton.tsx","webpack://_N_E/./ui/token/TokenProjectInfo.tsx","webpack://_N_E/./ui/token/TokenVerifiedInfo.tsx","webpack://_N_E/./ui/pages/Token.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import _debounce from 'lodash/debounce';\nimport type { LegacyRef } from 'react';\nimport React from 'react';\n\nexport default function useClientRect<E extends Element>(): [ DOMRect | null, LegacyRef<E> | undefined ] {\n  const [ rect, setRect ] = React.useState<DOMRect | null>(null);\n  const nodeRef = React.useRef<E>();\n\n  const ref = React.useCallback((node: E) => {\n    if (node !== null) {\n      setRect(node.getBoundingClientRect());\n    }\n    nodeRef.current = node;\n  }, []);\n\n  React.useEffect(() => {\n    const content = window.document.querySelector('main');\n    if (!content) {\n      return;\n    }\n\n    const resizeHandler = _debounce(() => {\n      setRect(nodeRef.current?.getBoundingClientRect() ?? null);\n    }, 100);\n\n    const resizeObserver = new ResizeObserver(resizeHandler);\n    resizeObserver.observe(content);\n    resizeObserver.observe(window.document.body);\n\n    return function cleanup() {\n      resizeObserver.unobserve(content);\n      resizeObserver.unobserve(window.document.body);\n    };\n  }, [ ]);\n\n  return [ rect, ref ];\n}\n","import { Box, Grid, Link, Skeleton } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport BigNumber from 'bignumber.js';\nimport { useRouter } from 'next/router';\nimport React, { useCallback } from 'react';\nimport { scroller } from 'react-scroll';\n\nimport type { TokenInfo } from 'types/api/token';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport { TOKEN_COUNTERS } from 'stubs/token';\nimport type { TokenTabs } from 'ui/pages/Token';\nimport DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsSponsoredItem from 'ui/shared/DetailsSponsoredItem';\nimport TruncatedValue from 'ui/shared/TruncatedValue';\n\nimport TokenNftMarketplaces from './TokenNftMarketplaces';\n\ninterface Props {\n  tokenQuery: UseQueryResult<TokenInfo, ResourceError<unknown>>;\n}\n\nconst TokenDetails = ({ tokenQuery }: Props) => {\n  const router = useRouter();\n  const hash = router.query.hash?.toString();\n\n  const tokenCountersQuery = useApiQuery('token_counters', {\n    pathParams: { hash },\n    queryOptions: { enabled: Boolean(router.query.hash), placeholderData: TOKEN_COUNTERS },\n  });\n\n  const changeUrlAndScroll = useCallback((tab: TokenTabs) => () => {\n    router.push(\n      { pathname: '/token/[hash]', query: { hash: hash || '', tab } },\n      undefined,\n      { shallow: true },\n    );\n    scroller.scrollTo('token-tabs', {\n      duration: 500,\n      smooth: true,\n    });\n  }, [ hash, router ]);\n\n  const countersItem = useCallback((item: 'token_holders_count' | 'transfers_count') => {\n    const itemValue = tokenCountersQuery.data?.[item];\n    if (!itemValue) {\n      return 'N/A';\n    }\n    if (itemValue === '0') {\n      return itemValue;\n    }\n\n    const tab: TokenTabs = item === 'token_holders_count' ? 'holders' : 'token_transfers';\n\n    return (\n      <Skeleton isLoaded={ !tokenCountersQuery.isPlaceholderData }>\n        <Link onClick={ changeUrlAndScroll(tab) }>\n          { Number(itemValue).toLocaleString() }\n        </Link>\n      </Skeleton>\n    );\n  }, [ tokenCountersQuery.data, tokenCountersQuery.isPlaceholderData, changeUrlAndScroll ]);\n\n  throwOnResourceLoadError(tokenQuery);\n\n  const {\n    exchange_rate: exchangeRate,\n    total_supply: totalSupply,\n    circulating_market_cap: marketCap,\n    decimals,\n    symbol,\n    type,\n  } = tokenQuery.data || {};\n\n  let totalSupplyValue;\n\n  if (type === 'ERC-20') {\n    const totalValue = totalSupply ? getCurrencyValue({ value: totalSupply, accuracy: 3, accuracyUsd: 2, exchangeRate, decimals }) : undefined;\n    totalSupplyValue = totalValue?.valueStr;\n  } else {\n    totalSupplyValue = Number(totalSupply).toLocaleString();\n  }\n\n  return (\n    <Grid\n      columnGap={ 8 }\n      rowGap={{ base: 1, lg: 3 }}\n      templateColumns={{ base: 'minmax(0, 1fr)', lg: 'auto minmax(0, 1fr)' }} overflow=\"hidden\"\n    >\n      { exchangeRate && (\n        <DetailsInfoItem\n          title=\"Price\"\n          hint=\"Price per token on the exchanges\"\n          alignSelf=\"center\"\n          isLoading={ tokenQuery.isPlaceholderData }\n        >\n          <Skeleton isLoaded={ !tokenQuery.isPlaceholderData } display=\"inline-block\">\n            <span>{ `$${ Number(exchangeRate).toLocaleString(undefined, { minimumSignificantDigits: 4 }) }` }</span>\n          </Skeleton>\n        </DetailsInfoItem>\n      ) }\n      { marketCap && (\n        <DetailsInfoItem\n          title=\"Fully diluted market cap\"\n          hint=\"Total supply * Price\"\n          alignSelf=\"center\"\n          isLoading={ tokenQuery.isPlaceholderData }\n        >\n          <Skeleton isLoaded={ !tokenQuery.isPlaceholderData } display=\"inline-block\">\n            <span>{ `$${ BigNumber(marketCap).toFormat() }` }</span>\n          </Skeleton>\n        </DetailsInfoItem>\n      ) }\n      <DetailsInfoItem\n        title=\"Max total supply\"\n        hint=\"The total amount of tokens issued\"\n        alignSelf=\"center\"\n        wordBreak=\"break-word\"\n        whiteSpace=\"pre-wrap\"\n        isLoading={ tokenQuery.isPlaceholderData }\n      >\n        <Skeleton isLoaded={ !tokenQuery.isPlaceholderData } w=\"100%\" display=\"flex\">\n          <TruncatedValue value={ totalSupplyValue || '0' } maxW=\"80%\" flexShrink={ 0 }/>\n          <Box flexShrink={ 0 }> </Box>\n          <TruncatedValue value={ symbol || '' }/>\n        </Skeleton>\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"Holders\"\n        hint=\"Number of accounts holding the token\"\n        alignSelf=\"center\"\n        isLoading={ tokenQuery.isPlaceholderData }\n      >\n        <Skeleton isLoaded={ !tokenCountersQuery.isPlaceholderData }>\n          { countersItem('token_holders_count') }\n        </Skeleton>\n      </DetailsInfoItem>\n      <DetailsInfoItem\n        title=\"Transfers\"\n        hint=\"Number of transfer for the token\"\n        alignSelf=\"center\"\n        isLoading={ tokenQuery.isPlaceholderData }\n      >\n        <Skeleton isLoaded={ !tokenCountersQuery.isPlaceholderData }>\n          { countersItem('transfers_count') }\n        </Skeleton>\n      </DetailsInfoItem>\n      { decimals && (\n        <DetailsInfoItem\n          title=\"Decimals\"\n          hint=\"Number of digits that come after the decimal place when displaying token value\"\n          alignSelf=\"center\"\n          isLoading={ tokenQuery.isPlaceholderData }\n        >\n          <Skeleton isLoaded={ !tokenQuery.isPlaceholderData } minW={ 6 }>\n            { decimals }\n          </Skeleton>\n        </DetailsInfoItem>\n      ) }\n\n      { type !== 'ERC-20' && <TokenNftMarketplaces hash={ hash } isLoading={ tokenQuery.isPlaceholderData }/> }\n\n      <DetailsSponsoredItem isLoading={ tokenQuery.isPlaceholderData }/>\n    </Grid>\n  );\n};\n\nexport default React.memo(TokenDetails);\n","import { Box, Flex, Text, Link, useColorModeValue, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenInfo, TokenInstance } from 'types/api/token';\n\nimport { route } from 'nextjs-routes';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport LinkInternal from 'ui/shared/LinkInternal';\nimport NftMedia from 'ui/shared/nft/NftMedia';\nimport TruncatedTextTooltip from 'ui/shared/TruncatedTextTooltip';\n\ntype Props = { item: TokenInstance; token: TokenInfo; isLoading: boolean };\n\nconst TokenInventoryItem = ({ item, token, isLoading }: Props) => {\n\n  const isMobile = useIsMobile();\n\n  const mediaElement = (\n    <NftMedia\n      mb=\"18px\"\n      url={ item.animation_url || item.image_url }\n      isLoading={ isLoading }\n    />\n  );\n\n  const url = route({ pathname: '/token/[hash]/instance/[id]', query: { hash: token.address, id: item.id } });\n\n  return (\n    <Box\n      w={{ base: '100%', lg: '210px' }}\n      border=\"1px solid\"\n      borderColor={ useColorModeValue('blackAlpha.100', 'whiteAlpha.200') }\n      borderRadius=\"12px\"\n      p=\"10px\"\n      fontSize=\"sm\"\n      fontWeight={ 500 }\n      lineHeight=\"20px\"\n    >\n      <Link href={ isLoading ? undefined : url }>\n        { mediaElement }\n      </Link>\n      { item.id && (\n        <Flex mb={ 2 } ml={ 1 }>\n          <Text whiteSpace=\"pre\" variant=\"secondary\">ID# </Text>\n          <TruncatedTextTooltip label={ item.id }>\n            <Skeleton isLoaded={ !isLoading } overflow=\"hidden\">\n              <LinkInternal\n                overflow=\"hidden\"\n                textOverflow=\"ellipsis\"\n                whiteSpace=\"nowrap\"\n                display=\"block\"\n                isLoading={ isLoading }\n                href={ url }\n              >\n                { item.id }\n              </LinkInternal>\n            </Skeleton>\n          </TruncatedTextTooltip>\n        </Flex>\n      ) }\n      { item.owner && (\n        <Flex mb={ 2 } ml={ 1 }>\n          <Text whiteSpace=\"pre\" variant=\"secondary\" mr={ 2 } lineHeight=\"24px\">Owner</Text>\n          <AddressEntity\n            address={ item.owner }\n            isLoading={ isLoading }\n            truncation=\"constant\"\n            noCopy\n            noIcon={ isMobile }\n          />\n        </Flex>\n      ) }\n    </Box>\n  );\n};\n\nexport default TokenInventoryItem;\n","import { Flex, Grid, Text } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { TokenInfo } from 'types/api/token';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport { AddressHighlightProvider } from 'lib/contexts/addressHighlight';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport ActionBar from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\nimport ResetIconButton from 'ui/shared/ResetIconButton';\n\nimport TokenInventoryItem from './TokenInventoryItem';\n\ntype Props = {\n  inventoryQuery: QueryWithPagesResult<'token_inventory'>;\n  tokenQuery: UseQueryResult<TokenInfo, ResourceError<unknown>>;\n  ownerFilter?: string;\n}\n\nconst TokenInventory = ({ inventoryQuery, tokenQuery, ownerFilter }: Props) => {\n  const isMobile = useIsMobile();\n\n  const resetOwnerFilter = React.useCallback(() => {\n    inventoryQuery.onFilterChange({});\n  }, [ inventoryQuery ]);\n\n  const isActionBarHidden = !ownerFilter && !inventoryQuery.data?.items.length;\n\n  const ownerFilterComponent = ownerFilter && (\n    <Flex\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n      mb={{ base: isActionBarHidden ? 3 : 6, lg: 3 }}\n      mr={ 4 }\n    >\n      <Text whiteSpace=\"nowrap\" mr={ 2 } py={ 1 }>Filtered by owner</Text>\n      <Flex alignItems=\"center\" py={ 1 }>\n        <AddressEntity address={{ hash: ownerFilter }} truncation={ isMobile ? 'constant' : 'none' }/>\n        <ResetIconButton onClick={ resetOwnerFilter }/>\n      </Flex>\n    </Flex>\n  );\n\n  const actionBar = !isActionBarHidden && (\n    <>\n      { ownerFilterComponent }\n      <ActionBar mt={ -6 }>\n        { isMobile && <Pagination ml=\"auto\" { ...inventoryQuery.pagination }/> }\n      </ActionBar>\n    </>\n  );\n\n  const items = inventoryQuery.data?.items;\n  const token = tokenQuery.data;\n\n  const content = items && token ? (\n    <AddressHighlightProvider>\n      <Grid\n        w=\"100%\"\n        columnGap={{ base: 3, lg: 6 }}\n        rowGap={{ base: 3, lg: 6 }}\n        gridTemplateColumns={{ base: 'repeat(2, calc((100% - 12px)/2))', lg: 'repeat(auto-fill, minmax(210px, 1fr))' }}\n      >\n        { items.map((item, index) => (\n          <TokenInventoryItem\n            key={ token.address + '_' + item.id + (inventoryQuery.isPlaceholderData ? '_' + index : '') }\n            item={ item }\n            isLoading={ inventoryQuery.isPlaceholderData || tokenQuery.isPlaceholderData }\n            token={ token }\n          />\n        )) }\n      </Grid>\n    </AddressHighlightProvider>\n  ) : null;\n\n  return (\n    <DataListDisplay\n      isError={ inventoryQuery.isError }\n      items={ items }\n      emptyText=\"There are no tokens.\"\n      content={ content }\n      actionBar={ actionBar }\n    />\n  );\n};\n\nexport default TokenInventory;\n","import { Link } from '@chakra-ui/react';\nimport React from 'react';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  href: string;\n}\n\nconst DocsLink = ({ href }: Props) => {\n  return (\n    <Link\n      href={ href }\n      target=\"_blank\"\n      display=\"inline-flex\"\n      alignItems=\"center\"\n      columnGap={ 1 }\n    >\n      <IconSvg name=\"docs\" boxSize={ 6 } color=\"text_secondary\"/>\n      <span>Documentation</span>\n    </Link>\n  );\n};\n\nexport default DocsLink;\n","import { Link } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenVerifiedInfo } from 'types/api/token';\n\nimport type { IconName } from 'ui/shared/IconSvg';\nimport IconSvg from 'ui/shared/IconSvg';\n\nexport interface Props {\n  field: keyof TokenVerifiedInfo;\n  icon: IconName;\n  title: string;\n  href?: string;\n}\n\nconst ServiceLink = ({ href, title, icon }: Props) => {\n  return (\n    <Link\n      href={ href }\n      aria-label={ title }\n      title={ title }\n      target=\"_blank\"\n      display=\"inline-flex\"\n      alignItems=\"center\"\n    >\n      <IconSvg name={ icon } boxSize={ 5 } mr={ 2 } color=\"text_secondary\"/>\n      <span>{ title }</span>\n    </Link>\n  );\n};\n\nexport default ServiceLink;\n","import { Link } from '@chakra-ui/react';\nimport React from 'react';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  url: string;\n}\n\nconst SupportLink = ({ url }: Props) => {\n  const isEmail = url.includes('@');\n  const href = isEmail ? `mailto:${ url }` : url;\n\n  return (\n    <Link\n      href={ href }\n      target=\"_blank\"\n      display=\"inline-flex\"\n      alignItems=\"center\"\n      columnGap={ 1 }\n    >\n      <IconSvg name={ isEmail ? 'email' : 'link' } boxSize={ 6 } color=\"text_secondary\"/>\n      <span>{ url }</span>\n    </Link>\n  );\n};\n\nexport default SupportLink;\n","import { Flex, Text, Grid } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenVerifiedInfo } from 'types/api/token';\n\nimport DocsLink from './DocsLink';\nimport type { Props as ServiceLinkProps } from './ServiceLink';\nimport ServiceLink from './ServiceLink';\nimport SupportLink from './SupportLink';\n\ninterface Props {\n  data: TokenVerifiedInfo;\n}\n\nconst SOCIAL_LINKS: Array<Omit<ServiceLinkProps, 'href'>> = [\n  { field: 'github', icon: 'social/github_filled', title: 'Github' },\n  { field: 'twitter', icon: 'social/twitter_filled', title: 'Twitter' },\n  { field: 'telegram', icon: 'social/telegram_filled', title: 'Telegram' },\n  { field: 'openSea', icon: 'social/opensea_filled', title: 'OpenSea' },\n  { field: 'linkedin', icon: 'social/linkedin_filled', title: 'LinkedIn' },\n  { field: 'facebook', icon: 'social/facebook_filled', title: 'Facebook' },\n  { field: 'discord', icon: 'social/discord_filled', title: 'Discord' },\n  { field: 'medium', icon: 'social/medium_filled', title: 'Medium' },\n  { field: 'slack', icon: 'social/slack_filled', title: 'Slack' },\n  { field: 'reddit', icon: 'social/reddit_filled', title: 'Reddit' },\n];\n\nconst PRICE_TICKERS: Array<Omit<ServiceLinkProps, 'href'>> = [\n  { field: 'coinGeckoTicker', icon: 'social/coingecko', title: 'CoinGecko' },\n  { field: 'coinMarketCapTicker', icon: 'social/coinmarketcap', title: 'CoinMarketCap' },\n  { field: 'defiLlamaTicker', icon: 'social/defi_llama', title: 'DefiLlama' },\n];\n\nexport function hasContent(data: TokenVerifiedInfo): boolean {\n  const fields: Array<keyof TokenVerifiedInfo> = [\n    'projectDescription',\n    'docs',\n    'support',\n    ...SOCIAL_LINKS.map(({ field }) => field),\n    ...PRICE_TICKERS.map(({ field }) => field),\n  ];\n  return fields.some((field) => data[field]);\n}\n\nconst Content = ({ data }: Props) => {\n  const docs = data.docs ? <DocsLink href={ data.docs }/> : null;\n  const support = data.support ? <SupportLink url={ data.support }/> : null;\n  const description = data.projectDescription ? <Text fontSize=\"sm\" mt={ 3 }>{ data.projectDescription }</Text> : null;\n\n  const socialLinks = SOCIAL_LINKS\n    .map((link) => ({ ...link, href: data[link.field] }))\n    .filter(({ href }) => href);\n\n  const priceTickersLinks = PRICE_TICKERS\n    .map((link) => ({ ...link, href: data[link.field] }))\n    .filter(({ href }) => href);\n\n  return (\n    <Flex fontSize=\"sm\" flexDir=\"column\" rowGap={ 5 }>\n      { (description || docs || support) && (\n        <div>\n          <Text variant=\"secondary\" fontSize=\"xs\">Description and support info</Text>\n          { description }\n          { (docs || support) && (\n            <Flex alignItems=\"center\" flexWrap=\"wrap\" columnGap={ 6 } mt={ 3 }>\n              { support }\n              { docs }\n            </Flex>\n          ) }\n        </div>\n      ) }\n      { socialLinks.length > 0 && (\n        <div>\n          <Text variant=\"secondary\" fontSize=\"xs\">Links</Text>\n          <Grid templateColumns={{ base: 'repeat(2, 1fr)', lg: 'repeat(3, 1fr)' }} columnGap={ 4 } rowGap={ 3 } mt={ 3 }>\n            { socialLinks.map((link) => <ServiceLink key={ link.field } { ...link }/>) }\n          </Grid>\n        </div>\n      ) }\n      { priceTickersLinks.length > 0 && (\n        <div>\n          <Text variant=\"secondary\" fontSize=\"xs\">Crypto markets</Text>\n          <Grid templateColumns={{ base: 'repeat(2, 1fr)', lg: 'repeat(3, 1fr)' }} columnGap={ 4 } rowGap={ 3 } mt={ 3 }>\n            { priceTickersLinks.map((link) => <ServiceLink key={ link.field } { ...link }/>) }\n          </Grid>\n        </div>\n      ) }\n    </Flex>\n  );\n};\n\nexport default Content;\n","import { Button } from '@chakra-ui/react';\nimport React from 'react';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  onClick: () => void;\n  isOpen: boolean;\n}\n\nconst TriggerButton = ({ isOpen, onClick }: Props, ref: React.ForwardedRef<HTMLButtonElement>) => {\n  return (\n    <Button\n      ref={ ref }\n      size=\"sm\"\n      variant=\"outline\"\n      colorScheme=\"gray\"\n      onClick={ onClick }\n      aria-label=\"Show project info\"\n      fontWeight={ 500 }\n      px={ 2 }\n      h=\"32px\"\n    >\n      <IconSvg name=\"rocket\" boxSize={ 5 } mr={ 1 }/>\n      <span>Info</span>\n      <IconSvg name=\"arrows/east-mini\" transform={ isOpen ? 'rotate(90deg)' : 'rotate(-90deg)' } transitionDuration=\"faster\" boxSize={ 5 } ml={ 1 }/>\n    </Button>\n  );\n};\n\nexport default React.forwardRef(TriggerButton);\n","import {\n  Popover, PopoverTrigger, PopoverContent, PopoverBody,\n  Modal, ModalContent, ModalCloseButton,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenVerifiedInfo } from 'types/api/token';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\n\nimport Content, { hasContent } from './TokenProjectInfo/Content';\nimport TriggerButton from './TokenProjectInfo/TriggerButton';\n\ninterface Props {\n  data: TokenVerifiedInfo;\n}\n\nconst TokenProjectInfo = ({ data }: Props) => {\n  const isMobile = useIsMobile();\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  if (!hasContent(data)) {\n    return null;\n  }\n\n  if (isMobile) {\n    return (\n      <>\n        <TriggerButton isOpen={ isOpen } onClick={ onToggle }/>\n        <Modal isOpen={ isOpen } onClose={ onClose } size=\"full\">\n          <ModalContent>\n            <ModalCloseButton/>\n            <Content data={ data }/>\n          </ModalContent>\n        </Modal>\n      </>\n    );\n  }\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy>\n      <PopoverTrigger>\n        <TriggerButton isOpen={ isOpen } onClick={ onToggle }/>\n      </PopoverTrigger>\n      <PopoverContent w=\"500px\">\n        <PopoverBody px={ 6 } py={ 5 }>\n          <Content data={ data }/>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default React.memo(TokenProjectInfo);\n","import { Skeleton } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { TokenVerifiedInfo as TTokenVerifiedInfo } from 'types/api/token';\n\nimport config from 'configs/app';\nimport type { ResourceError } from 'lib/api/resources';\nimport LinkExternal from 'ui/shared/LinkExternal';\n\nimport TokenProjectInfo from './TokenProjectInfo';\n\ninterface Props {\n  verifiedInfoQuery: UseQueryResult<TTokenVerifiedInfo, ResourceError<unknown>>;\n}\n\nconst TokenVerifiedInfo = ({ verifiedInfoQuery }: Props) => {\n\n  const { data, isPending, isError } = verifiedInfoQuery;\n\n  const content = (() => {\n    if (!config.features.verifiedTokens.isEnabled) {\n      return null;\n    }\n\n    if (isPending) {\n      return (\n        <>\n          <Skeleton w=\"100px\" h=\"30px\" borderRadius=\"base\"/>\n          <Skeleton w=\"100px\" h=\"30px\" borderRadius=\"base\"/>\n          <Skeleton w=\"80px\" h=\"30px\" borderRadius=\"base\"/>\n        </>\n      );\n    }\n\n    if (isError) {\n      return null;\n    }\n\n    const websiteLink = (() => {\n      try {\n        const url = new URL(data.projectWebsite);\n        return (\n          <LinkExternal href={ data.projectWebsite } variant=\"subtle\" flexShrink={ 0 } fontSize=\"sm\" lineHeight={ 5 }>\n            { url.host }\n          </LinkExternal>\n        );\n      } catch (error) {\n        return null;\n      }\n    })();\n\n    return (\n      <>\n        { websiteLink }\n        <TokenProjectInfo data={ data }/>\n      </>\n    );\n  })();\n\n  return content;\n};\n\nexport default React.memo(TokenVerifiedInfo);\n","import { Box, Flex, Tooltip } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useRouter } from 'next/router';\nimport React, { useEffect } from 'react';\n\nimport type { SocketMessage } from 'lib/socket/types';\nimport type { TokenInfo } from 'types/api/token';\nimport type { PaginationParams } from 'ui/shared/pagination/types';\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport config from 'configs/app';\nimport useApiQuery, { getResourceKey } from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport useContractTabs from 'lib/hooks/useContractTabs';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport * as metadata from 'lib/metadata';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\nimport * as addressStubs from 'stubs/address';\nimport * as tokenStubs from 'stubs/token';\nimport { generateListStub } from 'stubs/utils';\nimport AddressContract from 'ui/address/AddressContract';\nimport AddressQrCode from 'ui/address/details/AddressQrCode';\nimport AccountActionsMenu from 'ui/shared/AccountActionsMenu/AccountActionsMenu';\nimport TextAd from 'ui/shared/ad/TextAd';\nimport AddressAddToWallet from 'ui/shared/address/AddressAddToWallet';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport * as TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport EntityTags from 'ui/shared/EntityTags';\nimport IconSvg from 'ui/shared/IconSvg';\nimport NetworkExplorers from 'ui/shared/NetworkExplorers';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\nimport TabsSkeleton from 'ui/shared/Tabs/TabsSkeleton';\nimport TokenDetails from 'ui/token/TokenDetails';\nimport TokenHolders from 'ui/token/TokenHolders/TokenHolders';\nimport TokenInventory from 'ui/token/TokenInventory';\nimport TokenTransfer from 'ui/token/TokenTransfer/TokenTransfer';\nimport TokenVerifiedInfo from 'ui/token/TokenVerifiedInfo';\n\nexport type TokenTabs = 'token_transfers' | 'holders' | 'inventory';\n\nconst TokenPageContent = () => {\n  const [ isQueryEnabled, setIsQueryEnabled ] = React.useState(false);\n  const [ totalSupplySocket, setTotalSupplySocket ] = React.useState<number>();\n  const router = useRouter();\n  const isMobile = useIsMobile();\n\n  const appProps = useAppContext();\n\n  const scrollRef = React.useRef<HTMLDivElement>(null);\n\n  const hashString = getQueryParamString(router.query.hash);\n  const tab = getQueryParamString(router.query.tab);\n  const ownerFilter = getQueryParamString(router.query.holder_address_hash) || undefined;\n\n  const queryClient = useQueryClient();\n\n  const tokenQuery = useApiQuery('token', {\n    pathParams: { hash: hashString },\n    queryOptions: {\n      enabled: Boolean(router.query.hash),\n      placeholderData: tokenStubs.TOKEN_INFO_ERC_20,\n    },\n  });\n\n  const contractQuery = useApiQuery('address', {\n    pathParams: { hash: hashString },\n    queryOptions: {\n      enabled: isQueryEnabled && Boolean(router.query.hash),\n      placeholderData: addressStubs.ADDRESS_INFO,\n    },\n  });\n\n  React.useEffect(() => {\n    if (tokenQuery.data && totalSupplySocket) {\n      queryClient.setQueryData(getResourceKey('token', { pathParams: { hash: hashString } }), (prevData: TokenInfo | undefined) => {\n        if (prevData) {\n          return { ...prevData, total_supply: totalSupplySocket.toString() };\n        }\n      });\n    }\n  }, [ tokenQuery.data, totalSupplySocket, hashString, queryClient ]);\n\n  const handleTotalSupplyMessage: SocketMessage.TokenTotalSupply['handler'] = React.useCallback((payload) => {\n    const prevData = queryClient.getQueryData(getResourceKey('token', { pathParams: { hash: hashString } }));\n    if (!prevData) {\n      setTotalSupplySocket(payload.total_supply);\n    }\n    queryClient.setQueryData(getResourceKey('token', { pathParams: { hash: hashString } }), (prevData: TokenInfo | undefined) => {\n      if (prevData) {\n        return { ...prevData, total_supply: payload.total_supply.toString() };\n      }\n    });\n  }, [ queryClient, hashString ]);\n\n  const enableQuery = React.useCallback(() => setIsQueryEnabled(true), []);\n\n  const channel = useSocketChannel({\n    topic: `tokens:${ hashString?.toLowerCase() }`,\n    isDisabled: !hashString,\n    onJoin: enableQuery,\n    onSocketError: enableQuery,\n  });\n  useSocketMessage({\n    channel,\n    event: 'total_supply',\n    handler: handleTotalSupplyMessage,\n  });\n\n  useEffect(() => {\n    if (tokenQuery.data && !tokenQuery.isPlaceholderData) {\n      metadata.update({ pathname: '/token/[hash]', query: { hash: tokenQuery.data.address } }, { symbol: tokenQuery.data.symbol ?? '' });\n    }\n  }, [ tokenQuery.data, tokenQuery.isPlaceholderData ]);\n\n  const hasData = (tokenQuery.data && !tokenQuery.isPlaceholderData) && (contractQuery.data && !contractQuery.isPlaceholderData);\n  const hasInventoryTab = tokenQuery.data?.type === 'ERC-1155' || tokenQuery.data?.type === 'ERC-721';\n\n  const transfersQuery = useQueryWithPages({\n    resourceName: 'token_transfers',\n    pathParams: { hash: hashString },\n    scrollRef,\n    options: {\n      enabled: Boolean(\n        hasData &&\n        hashString &&\n        (\n          (!hasInventoryTab && !tab) ||\n          tab === 'token_transfers'\n        ),\n      ),\n      placeholderData: tokenStubs.getTokenTransfersStub(tokenQuery.data?.type),\n    },\n  });\n\n  const inventoryQuery = useQueryWithPages({\n    resourceName: 'token_inventory',\n    pathParams: { hash: hashString },\n    filters: ownerFilter ? { holder_address_hash: ownerFilter } : {},\n    scrollRef,\n    options: {\n      enabled: Boolean(\n        hasData &&\n        hashString &&\n        (\n          (hasInventoryTab && !tab) ||\n          tab === 'inventory'\n        ),\n      ),\n      placeholderData: generateListStub<'token_inventory'>(tokenStubs.TOKEN_INSTANCE, 50, { next_page_params: { unique_token: 1 } }),\n    },\n  });\n\n  const holdersQuery = useQueryWithPages({\n    resourceName: 'token_holders',\n    pathParams: { hash: hashString },\n    scrollRef,\n    options: {\n      enabled: Boolean(hashString && tab === 'holders' && hasData),\n      placeholderData: generateListStub<'token_holders'>(\n        tokenQuery.data?.type === 'ERC-1155' ? tokenStubs.TOKEN_HOLDER_ERC_1155 : tokenStubs.TOKEN_HOLDER_ERC_20, 50, { next_page_params: null }),\n    },\n  });\n\n  const verifiedInfoQuery = useApiQuery('token_verified_info', {\n    pathParams: { hash: hashString, chainId: config.chain.id },\n    queryOptions: { enabled: Boolean(tokenQuery.data) && config.features.verifiedTokens.isEnabled },\n  });\n\n  const contractTabs = useContractTabs(contractQuery.data);\n\n  const tabs: Array<RoutedTab> = [\n    (tokenQuery.data?.type === 'ERC-1155' || tokenQuery.data?.type === 'ERC-721') ? {\n      id: 'inventory',\n      title: 'Inventory',\n      component: <TokenInventory inventoryQuery={ inventoryQuery } tokenQuery={ tokenQuery } ownerFilter={ ownerFilter }/>,\n    } : undefined,\n    { id: 'token_transfers', title: 'Token transfers', component: <TokenTransfer transfersQuery={ transfersQuery } token={ tokenQuery.data }/> },\n    { id: 'holders', title: 'Holders', component: <TokenHolders token={ tokenQuery.data } holdersQuery={ holdersQuery }/> },\n    contractQuery.data?.is_contract ? {\n      id: 'contract',\n      title: () => {\n        if (contractQuery.data?.is_verified) {\n          return (\n            <>\n              <span>Contract</span>\n              <IconSvg name=\"status/success\" boxSize=\"14px\" color=\"green.500\" ml={ 1 }/>\n            </>\n          );\n        }\n\n        return 'Contract';\n      },\n      component: <AddressContract tabs={ contractTabs }/>,\n      subTabs: contractTabs.map(tab => tab.id),\n    } : undefined,\n  ].filter(Boolean);\n\n  let pagination: PaginationParams | undefined;\n\n  // default tab for erc-20 is token transfers\n  if ((tokenQuery.data?.type === 'ERC-20' && !tab) || tab === 'token_transfers') {\n    pagination = transfersQuery.pagination;\n  }\n\n  if (router.query.tab === 'holders') {\n    pagination = holdersQuery.pagination;\n  }\n\n  // default tab for nfts is token inventory\n  if (((tokenQuery.data?.type === 'ERC-1155' || tokenQuery.data?.type === 'ERC-721') && !tab) || tab === 'inventory') {\n    pagination = inventoryQuery.pagination;\n  }\n\n  const tokenSymbolText = tokenQuery.data?.symbol ? ` (${ tokenQuery.data.symbol })` : '';\n\n  const tabListProps = React.useCallback(({ isSticky, activeTabIndex }: { isSticky: boolean; activeTabIndex: number }) => {\n    if (isMobile) {\n      return { mt: 8 };\n    }\n\n    return {\n      mt: 3,\n      py: 5,\n      marginBottom: 0,\n      boxShadow: activeTabIndex === 2 && isSticky ? 'action_bar' : 'none',\n    };\n  }, [ isMobile ]);\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.includes('/tokens');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to tokens list',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  const titleContentAfter = (\n    <>\n      { verifiedInfoQuery.data?.tokenAddress && (\n        <Tooltip label={ `Information on this token has been verified by ${ config.chain.name }` }>\n          <Box boxSize={ 6 }>\n            <IconSvg name=\"verified_token\" color=\"green.500\" boxSize={ 6 } cursor=\"pointer\"/>\n          </Box>\n        </Tooltip>\n      ) }\n      <EntityTags\n        data={ contractQuery.data }\n        isLoading={ tokenQuery.isPlaceholderData || contractQuery.isPlaceholderData }\n        tagsBefore={ [\n          tokenQuery.data ? { label: tokenQuery.data?.type, display_name: tokenQuery.data?.type } : undefined,\n          config.features.bridgedTokens.isEnabled && tokenQuery.data?.is_bridged ?\n            { label: 'bridged', display_name: 'Bridged', colorScheme: 'blue', variant: 'solid' } :\n            undefined,\n        ] }\n        tagsAfter={\n          verifiedInfoQuery.data?.projectSector ?\n            [ { label: verifiedInfoQuery.data.projectSector, display_name: verifiedInfoQuery.data.projectSector } ] :\n            undefined\n        }\n        flexGrow={ 1 }\n      />\n    </>\n  );\n\n  const isLoading = tokenQuery.isPlaceholderData || contractQuery.isPlaceholderData;\n\n  const titleSecondRow = (\n    <Flex alignItems=\"center\" w=\"100%\" minW={ 0 } columnGap={ 2 } rowGap={ 2 } flexWrap={{ base: 'wrap', lg: 'nowrap' }}>\n      <AddressEntity\n        address={{ ...contractQuery.data, name: '' }}\n        isLoading={ isLoading }\n        fontFamily=\"heading\"\n        fontSize=\"lg\"\n        fontWeight={ 500 }\n      />\n      { !isLoading && tokenQuery.data && <AddressAddToWallet token={ tokenQuery.data } variant=\"button\"/> }\n      <AddressQrCode address={ contractQuery.data } isLoading={ isLoading }/>\n      <AccountActionsMenu isLoading={ isLoading }/>\n      <Flex ml={{ base: 0, lg: 'auto' }} columnGap={ 2 } flexGrow={{ base: 1, lg: 0 }}>\n        <TokenVerifiedInfo verifiedInfoQuery={ verifiedInfoQuery }/>\n        <NetworkExplorers type=\"token\" pathParam={ hashString } ml={{ base: 'auto', lg: 0 }}/>\n      </Flex>\n    </Flex>\n  );\n\n  return (\n    <>\n      <TextAd mb={ 6 }/>\n      <PageTitle\n        title={ `${ tokenQuery.data?.name || 'Unnamed token' }${ tokenSymbolText }` }\n        isLoading={ isLoading }\n        backLink={ backLink }\n        beforeTitle={ tokenQuery.data ? (\n          <TokenEntity.Icon\n            token={ tokenQuery.data }\n            isLoading={ isLoading }\n            iconSize=\"lg\"\n          />\n        ) : null }\n        contentAfter={ titleContentAfter }\n        secondRow={ titleSecondRow }\n      />\n\n      <TokenDetails tokenQuery={ tokenQuery }/>\n\n      { /* should stay before tabs to scroll up with pagination */ }\n      <Box ref={ scrollRef }></Box>\n\n      { isLoading ?\n        <TabsSkeleton tabs={ tabs }/> :\n        (\n          <RoutedTabs\n            tabs={ tabs }\n            tabListProps={ tabListProps }\n            rightSlot={ !isMobile && pagination?.isVisible ? <Pagination { ...pagination }/> : null }\n            stickyEnabled={ !isMobile }\n          />\n        ) }\n    </>\n  );\n};\n\nexport default TokenPageContent;\n"],"names":["useClientRect","rect","setRect","React","nodeRef","ref","node","getBoundingClientRect","current","content","window","document","querySelector","resizeHandler","_debounce","resizeObserver","ResizeObserver","observe","body","unobserve","token_TokenDetails","router","totalSupplyValue","tokenQuery","param","useRouter","hash","query","toString","tokenCountersQuery","useApiQuery","pathParams","queryOptions","enabled","Boolean","placeholderData","TOKEN_COUNTERS","changeUrlAndScroll","useCallback","push","pathname","tab","undefined","shallow","scroller","scrollTo","duration","smooth","countersItem","itemValue","data","item","jsx_runtime","jsx","Skeleton","isLoaded","isPlaceholderData","Link","onClick","Number","toLocaleString","throwOnResourceLoadError","exchange_rate","exchangeRate","total_supply","totalSupply","circulating_market_cap","marketCap","decimals","symbol","type","totalValue","getCurrencyValue","value","accuracy","accuracyUsd","valueStr","jsxs","Grid","columnGap","rowGap","base","lg","templateColumns","overflow","DetailsInfoItem","title","hint","alignSelf","isLoading","display","span","concat","minimumSignificantDigits","BigNumber","toFormat","wordBreak","whiteSpace","w","TruncatedValue","maxW","flexShrink","Box","minW","TokenNftMarketplaces","DetailsSponsoredItem","token_TokenInventoryItem","token","isMobile","useIsMobile","mediaElement","NftMedia","mb","url","animation_url","image_url","route","address","id","border","borderColor","useColorModeValue","borderRadius","p","fontSize","fontWeight","lineHeight","href","Flex","ml","Text","variant","TruncatedTextTooltip","label","LinkInternal","textOverflow","owner","mr","AddressEntity","truncation","noCopy","noIcon","token_TokenInventory","inventoryQuery","ownerFilter","resetOwnerFilter","onFilterChange","isActionBarHidden","items","length","ownerFilterComponent","alignItems","flexWrap","py","ResetIconButton","actionBar","Fragment","ActionBar","mt","Pagination","pagination","AddressHighlightProvider","gridTemplateColumns","map","index","TokenInventoryItem","DataListDisplay","isError","emptyText","TokenProjectInfo_DocsLink","target","IconSvg","name","boxSize","color","TokenProjectInfo_ServiceLink","icon","aria-label","TokenProjectInfo_SupportLink","isEmail","includes","SOCIAL_LINKS","field","PRICE_TICKERS","TokenProjectInfo_Content","docs","DocsLink","support","SupportLink","description","projectDescription","socialLinks","link","filter","priceTickersLinks","flexDir","div","ServiceLink","TokenProjectInfo_TriggerButton","isOpen","Button","size","colorScheme","px","h","transform","transitionDuration","token_TokenProjectInfo","onToggle","onClose","useDisclosure","hasContent","fields","some","TriggerButton","Modal","ModalContent","ModalCloseButton","Content","Popover","placement","isLazy","PopoverTrigger","PopoverContent","PopoverBody","token_TokenVerifiedInfo","verifiedInfoQuery","isPending","config","features","verifiedTokens","isEnabled","websiteLink","URL","projectWebsite","LinkExternal","host","error","TokenProjectInfo","Token","contractQuery","isQueryEnabled","setIsQueryEnabled","totalSupplySocket","setTotalSupplySocket","appProps","useAppContext","scrollRef","hashString","getQueryParamString","holder_address_hash","queryClient","useQueryClient","tokenStubs","addressStubs","setQueryData","getResourceKey","prevData","handleTotalSupplyMessage","getQueryData","payload","enableQuery","channel","useSocketChannel","topic","toLowerCase","isDisabled","onJoin","onSocketError","useSocketMessage","event","handler","useEffect","metadata","hasData","hasInventoryTab","transfersQuery","useQueryWithPages","resourceName","options","filters","generateListStub","next_page_params","unique_token","holdersQuery","chainId","chain","contractTabs","useContractTabs","tabs","component","TokenInventory","TokenTransfer","TokenHolders","is_contract","is_verified","AddressContract","subTabs","tokenSymbolText","tabListProps","isSticky","activeTabIndex","marginBottom","boxShadow","backLink","hasGoBackLink","referrer","titleContentAfter","tokenAddress","Tooltip","cursor","EntityTags","tagsBefore","display_name","bridgedTokens","is_bridged","tagsAfter","projectSector","flexGrow","titleSecondRow","fontFamily","AddressAddToWallet","AddressQrCode","AccountActionsMenu","TokenVerifiedInfo","NetworkExplorers","pathParam","TextAd","PageTitle","beforeTitle","TokenEntity","iconSize","contentAfter","secondRow","TokenDetails","TabsSkeleton","RoutedTabs","rightSlot","isVisible","stickyEnabled"],"sourceRoot":""}