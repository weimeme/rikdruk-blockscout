"use strict";exports.id=8666,exports.ids=[8666],exports.modules={28666:(e,t,r)=>{r.r(t);var s=r(74691),n=r(73093),o=r(40996),a=r(23521),i=r(44161),c=r(79903),p=r(47908),u=r(10485),_=r(87825);s.diag.setLogger(new s.DiagConsoleLogger,s.DiagLogLevel.INFO);let E=new a.OTLPTraceExporter,l=new p.NodeSDK({resource:new i.Resource({[_.SemanticResourceAttributes.SERVICE_NAME]:"blockscout_frontend",[_.SemanticResourceAttributes.SERVICE_VERSION]:process.env.NEXT_PUBLIC_GIT_TAG||process.env.NEXT_PUBLIC_GIT_COMMIT_SHA||"unknown_version",[_.SemanticResourceAttributes.SERVICE_INSTANCE_ID]:process.env.NEXT_PUBLIC_APP_INSTANCE||process.env.NEXT_PUBLIC_APP_HOST?.replace(".blockscout.com","").replaceAll("-","_")||"unknown_app"}),spanProcessor:new u.SimpleSpanProcessor(E),traceExporter:E,metricReader:new c.PeriodicExportingMetricReader({exporter:new o.OTLPMetricExporter}),instrumentations:[(0,n.getNodeAutoInstrumentations)({"@opentelemetry/instrumentation-http":{ignoreIncomingRequestHook:e=>{try{if(!e.url)return!1;let t=new URL(e.url,`http://${e.headers.host}`);if(t.pathname.startsWith("/_next/static/")||t.pathname.startsWith("/_next/data/")||t.pathname.startsWith("/assets/")||t.pathname.startsWith("/static/")||t.pathname.startsWith("/favicon/")||t.pathname.startsWith("/envs.js"))return!0}catch(e){}return!1}}})]});process.env.OTEL_SDK_ENABLED&&(l.start(),process.on("SIGTERM",()=>{l.shutdown().then(()=>console.log("Tracing terminated")).catch(e=>console.log("Error terminating tracing",e)).finally(()=>process.exit(0))}))}};